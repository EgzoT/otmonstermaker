{"version":3,"sources":["js/MonsterData.js","js/FlagsData.js","js/ScriptData.js","js/AttacksData.js","js/DefensesData.js","js/ElementsData.js","js/ImmunitiesData.js","js/SummonsData.js","js/VoicesData.js","js/LootData.js","js/IOData.js","js/AppData.js","components/MonsterMakerMenuItem.js","components/MonsterMakerButton.js","components/MonsterMakerCode.js","components/MonsterMakerInput.js","components/MonsterMakerInputSelect.js","components/MonsterMakerItemsTableTr.js","components/MonsterMakerItemsTable.js","components/MonsterMakerLabel.js","components/FlexibleGrid.js","screens/MonsterMakerTabAttacks.js","screens/MonsterMakerTabDefault.js","screens/MonsterMakerTabDefenses.js","screens/MonsterMakerTabElements.js","screens/MonsterMakerTabFlags.js","screens/MonsterMakerTabImmunities.js","screens/MonsterMakerTabIO.js","screens/MonsterMakerTabLoot.js","components/otcolorinput-react/components/const.js","components/otcolorinput-react/components/ColorButton.js","components/otcolorinput-react/components/ColorPalette.js","components/otcolorinput-react/components/ColorsWindow.js","components/otcolorinput-react/components/ColorsWindowMobile.js","components/otcolorinput-react/OTColorInput.js","screens/MonsterMakerTabMonster.js","screens/MonsterMakerTabScript.js","screens/MonsterMakerTabSummons.js","screens/MonsterMakerTabVoices.js","components/MonsterMakerMenu.js","App.js","serviceWorker.js","index.js","consts.js"],"names":["MonsterData","_this","this","Object","classCallCheck","setName","value","name","setValueToLocalStorage","getName","setNameDescription","nameDescription","getNameDescription","setRace","race","getRace","setExperience","experience","getExperience","setSkull","skull","getSkull","setSpeed","speed","getSpeed","setManaCost","manaCost","getManaCost","setHealthNow","healthNow","getHealthNow","setHealthMax","healthMax","getHealthMax","setLookType","lookType","getLookType","setLookTypeValue","lookTypeValue","getLookTypeValue","setHead","head","getHead","setBody","body","getBody","setLegs","legs","getLegs","setFeet","feet","getFeet","setAddons","addons","getAddons","setMount","mount","getMount","setCorpse","corpse","getCorpse","setTargetchangeInterval","targetchangeInterval","getTargetchangeInterval","setTargetchangeChance","targetchangeChance","getTargetchangeChance","setStrategy","strategy","getStrategy","setAttack","attack","getAttack","setDefense","defense","getDefense","getDataIndex","dataIndex","getXML","indentation","arguments","length","undefined","fileXMLString","lookTypeFormat","setDefaultValue","loadXMLVariableMonster","variableName","variableValue","loadXMLVariableHealth","loadXMLVariableLook","loadXMLVariableTargetchange","loadXMLVariableStrategy","Number","key","localStorage","setItem","getValueFromLocalStorage","getItem","loadValuesFromLocalStorage","FlagsData","setSummonable","summonable","getSummonable","setAttackable","attackable","getAttackable","setHostile","hostile","getHostile","setIllusionable","illusionable","getIllusionable","setConvinceable","convinceable","getConvinceable","setPushable","pushable","getPushable","setCanpushitems","canpushitems","getCanpushitems","setCanpushcreatures","canpushcreatures","getCanpushcreatures","setTargetdistance","targetdistance","getTargetdistance","setStaticattack","staticattack","getStaticattack","setHidehealth","hidehealth","getHidehealth","setLightcolor","lightcolor","getLightcolor","setLightlevel","lightlevel","getLightlevel","setRunonhealth","runonhealth","getRunonhealth","loadXMLVariableFlag","ScriptData","setChecked","checked","getChecked","setScript","script","getScript","loadXMLVariableEvent","AttacksData","setType","type","setIndexType","index","allAttacks","setTableToLocalStorage","getType","setElementalType","elementalType","setIndexElementalType","getElementalType","setConditionsType","conditionsType","setIndexConditionsType","getConditionsType","setFieldsType","fieldsType","setIndexFieldsType","getFieldsType","setRunesType","runesType","setIndexRunesType","getRunesType","setSpellsType","spellsType","setIndexSpellsType","getSpellsType","setOtherType","otherType","setIndexOtherType","getOtherType","setMin","min","setIndexMin","getMin","setMax","max","setIndexMax","getMax","setSkillCheckbox","skillCheckbox","setIndexSkillCheckbox","getSkillCheckbox","setSkill","skill","setIndexSkill","getSkill","setIndexAttack","setInterval","interval","setIndexInterval","getInterval","setChance","chance","setIndexChance","getChance","setLengthCheckbox","lengthCheckbox","setIndexLengthCheckbox","getLengthCheckbox","setLength","setIndexLength","getLength","setSpreadCheckbox","spreadCheckbox","setIndexSpreadCheckbox","getSpreadCheckbox","setSpread","spread","setIndexSpread","getSpread","setRadiusCheckbox","radiusCheckbox","setIndexRadiusCheckbox","getRadiusCheckbox","setRadius","radius","setIndexRadius","getRadius","setPoisonCheckbox","poisonCheckbox","setIndexPoisonCheckbox","getPoisonCheckbox","setPoison","poison","setIndexPoison","getPoison","setTarget","target","setIndexTarget","getTarget","setRange","range","setIndexRange","getRange","setAreaeffectCheckbox","areaeffectCheckbox","setIndexAreaeffectCheckbox","getAreaeffectCheckbox","setAreaeffect","areaeffect","setIndexAreaeffect","getAreaeffect","setShooteffectCheckbox","shooteffectCheckbox","setIndexShooteffectCheckbox","getShooteffectCheckbox","setShooteffect","shooteffect","setIndexShooteffect","getShooteffect","getAttackTypeArray","attackTypeArray","getElementalTypeArray","elementalTypeArray","getConditionsTypeArray","conditionsTypeArray","getFieldsTypeArray","fieldsTypeArray","getRunesTypeArray","runesTypeArray","getSpellsTypeArray","spellsTypeArray","addToAttacks","allItems","push","deleteFromAttacks","splice","getFromAttacks","showAttacks","updateAttacks","getAttackFromData","attackTable","areaEffect","shootEffect","generateXMLattack","firstIndentation","attackData","getAllXMLattacks","returnAttacks","forEach","variable","allXMLattacks","setDefaultTableValue","compareValueToAttactType","item","i","loadXMLVariableAttack","attackType","loadXMLVariableAttribute","JSON","stringify","getTableFromLocalStorage","parse","DefensesData","setArmor","armor","getArmor","setDefenseName","defenseName","setIndexDefenseName","allDefenses","getDefenseName","setDuration","duration","setIndexDuration","getDuration","setSpeedChange","speedChange","setIndexSpeedChange","getSpeedChange","addToDefenses","deleteFromDefenses","getFromDefenses","showDefenses","updateDefenses","getDefenseFromData","defenseTable","generateXMLdefense","defenseData","getAllXMLdefenses","returnDefenses","allXMLdefenses","loadXMLVariableDefenses","loadXMLVariableDefense","ElementsData","setHoly","holy","getHoly","setDeath","death","getDeath","setIce","ice","getIce","setFire","fire","getFire","setEarth","earth","getEarth","setEnergy","energy","getEnergy","setPhysical","physical","getPhysical","setLifeDrain","lifeDrain","getLifeDrain","setDrown","drown","getDrown","loadXMLVariableElement","ImmunitiesData","setParalyze","paralyze","getParalyze","setDrunk","drunk","getDrunk","setInvisible","invisible","getInvisible","setOutfit","outfit","getOutfit","loadXMLVariableImmunity","SummonsData","setMaxSummons","maxSummons","getMaxSummons","setSummonName","summonName","setIndexSummonName","allSummons","getSummonName","addToSummons","deleteFromSummons","getFromSummons","showSummons","updateSummons","getSummonFromData","summonTable","generateXMLSummon","summonData","summon","getAllXMLSummons","returnSummons","allXMLsummons","loadXMLVariableSummons","loadXMLVariableSummon","VoicesData","setSentence","sentence","setIndexSentence","allVoices","getSentence","setYell","yell","setIndexYell","getYell","addToVoices","deleteFromVoices","getFromVoices","showVoices","updateVoices","getVoiceFromData","voiceTable","generateXMLVoice","voiceData","voice","getAllXMLVoices","returnVoices","allXMLvoices","loadXMLVariableVoices","loadXMLVariableVoice","LootData","setId","id","setIndexId","allLoot","getId","setNameCheckbox","nameCheckbox","setIndexNameCheckbox","getNameCheckbox","setIndexName","setCountMaxCheckbox","countMaxCheckbox","setIndexCountMaxCheckbox","getCountMaxCheckbox","setCountMax","countMax","setIndexCountMax","getCountMax","setSubtypeCheckbox","subtypeCheckbox","setIndexSubtypeCheckbox","getSubtypeCheckbox","setSubtype","subtype","setIndexSubtype","getSubtype","setActionIdCheckbox","actionIdCheckbox","setIndexActionIdCheckbox","getActionIdCheckbox","setActionId","actionId","setIndexActionId","getActionId","setUniqueIdCheckbox","uniqueIdCheckbox","setIndexUniqueIdCheckbox","getUniqueIdCheckbox","setUniqueId","uniqueId","setIndexUniqueId","getUniqueId","setTextCheckbox","textCheckbox","setIndexTextCheckbox","getTextCheckbox","setText","text","setIndexText","getText","setCommentCheckbox","commentCheckbox","setIndexCommentCheckbox","getCommentCheckbox","setComment","comment","setIndexComment","getComment","addToLoot","deleteFromLoot","getFromLoot","showLoot","updateLoot","getLootFromData","lootTable","countmax","actionid","uniqueid","getLootSubtype","water","blood","beer","slime","lemonade","milk","manafluid","lifefluid","oil","urine","coconut milk","wine","mud","fruit juice","lava","rum","swamp","tea","mead","getLootSubtypeId","1","2","3","4","5","6","7","10","11","13","14","15","19","21","26","27","28","35","43","translateLootSubtype","subType","lootSubtype","translateLootSubtypeIdToText","lootSubtypeId","generateXMLLoot","lootData","loot","getAllXMLLoot","returnLoot","allXMLloot","loadXMLVariableItem","IOData","setOwnNameCheckbox","ownNameCheckbox","getOwnNameCheckbox","setOwnName","ownName","getOwnName","setFileText","fileText","getFileText","loadFile","file","reader","FileReader","addEventListener","e","result","readAsBinaryString","AppData","getMonster","monsterData","getFlags","flagsData","scriptData","getAttacks","attacksData","getDefenses","defensesData","getElements","elementsData","getImmunities","immunitiesData","getSummons","summonsData","getVoices","voicesData","getLoot","getIO","ioData","downloadFile","a","document","createElement","href","btoa","textContent","download","click","loadDataFromXMLToTable","sector","preSector","parseXMLFile","itemsXMLString","split","line","replace","parseSectors","startSign","search","substring","endSign","nextSign","isStartComment","isEndComment","prePreparedText","preparedText","startNewString","findNextValue","firstQuote","secondQuote","getLineMonstersXML","monsterMakerMenuItemStyleLiDis","float","marginTop","marginBottom","marginLeft","monsterMakerMenuItemStyleLiAct","monsterMakerMenuItemStyleSpanDis","textAlign","padding","align","monsterMakerMenuItemStyleSpanAct","boxShadow","borderRadius","monsterMakerMenuItemStyleUl","listStyleType","paddingInlineStart","MonsterMakerMenuItem","props","possibleConstructorReturn","getPrototypeOf","call","toggleHover","setState","hover","state","changeClick","onClick","menuItemColorHover","myclassName","active","color","react_default","style","className","onMouseEnter","onMouseLeave","icon","React","Component","buttonStyle","width","height","backgroundColor","borderColor","display","marginRight","outline","buttonStyleHover","iconStyle","fontSize","MonsterMakerButton","data-tip","tooltip","containerStyle","maxHeight","maxWidth","margin","overflow","whiteSpace","textContainerStyle","MonsterMakerCode","MonsterMakerInput","disabled","objectSpread","opacity","defaultValue","defaultChecked","onChange","step","MonsterMakerInputSelect","rows","selectItems","trStyle","trStyleHover","selectedItem","MonsterMakerItemsTableTr","changeActiveItem","activeItem","tableStyle","MonsterMakerItemsTable","data","map","components_MonsterMakerItemsTableTr","MonsterMakerLabelStyle","MonsterMakerLabel","styleFlexibleGrid","flexWrap","alignItems","FlexibleGrid","children","styleFlexibleGridContainer","FlexibleGridContainer","FlexibleGrid_FlexibleGrid","innerStyle","firstLabelWidth","minWidth","secondLabelWidth","MonsterMakerTabAttacks","onChangeAttackType","event","appData","onChangeElementalType","onChangeConditionsType","onChangeFieldsType","onChangeRunesType","onChangeSpellsType","onChangeOtherType","onChangeMin","onChangeMax","onChangeSkillCheckbox","skillChange","onChangeSkill","onChangeAttack","onChangeInterval","onChangeChance","onChangeLengthCheckbox","onChangeLength","onChangeSpreadCheckbox","onChangeSpread","onChangeRadiusCheckbox","onChangeRadius","onChangePoisonCheckbox","onChangePoison","onChangeTarget","onChangeRange","onChangeAreaeffectCheckbox","onChangeAreaeffect","onChangeShooteffectCheckbox","onChangeShooteffect","clickAddButton","forceUpdate","clickDeleteButton","refreshItems","setActiveItem","dist_default","place","effect","html","components_MonsterMakerItemsTable","components_MonsterMakerButton","FlexibleGrid_FlexibleGridContainer","components_MonsterMakerLabel","components_MonsterMakerInputSelect","components_MonsterMakerInput","shotEffect","monsterMakerDefaultH1","fontWeight","MonsterMakerTabDefault","MonsterMakerTabDefenses","onChangeArmor","onChangeDefense","onChangeDefenseName","onChangeDuration","onChangeSpeedChange","MonsterMakerTabElements","onChangeHoly","onChangeDeath","onChangeIce","onChangeFire","onChangeEarth","onChangeEnergy","onChangePhysical","onChangeLifeDrain","onChangeDrown","MonsterMakerTabFlags","onChangeSummonable","onChangeAttackable","onChangeHostile","onChangeIllusionable","onChangeConvinceable","onChangePushable","onChangeCanpushitems","onChangeCanpushcreatures","onChangeTargetdistance","onChangeStaticattack","onChangeHidehealth","onChangeLightcolor","lightcolorChange","onChangeLightlevel","onChangeRunonhealth","MonsterMakerTabImmunities","onChangeParalyze","onChangeDrunk","onChangeInvisible","onChangeOutfit","MonsterMakerTabIO","onChangeOwnNameCheckbox","onChangeOwnName","onChangePath","files","newName","fileOwnName","uploadFile","window","confirm","components_MonsterMakerCode","MonsterMakerTabLoot","onChangeId","onChangeNameCheckbox","onChangeName","onChangeCountMaxCheckbox","onChangeCountMax","onChangeSubtypeCheckbox","onChangeSubtype","onChangeActionIdCheckbox","onChangeActionId","onChangeUniqueIdCheckbox","onChangeUniqueId","onChangeTextCheckbox","onChangeText","onChangeCommentCheckbox","onChangeComment","ROWS","COLUMNS","MIN_COLOR","MAX_COLOR","COLORS","0","8","9","12","16","17","18","20","22","23","24","25","29","30","31","32","33","34","36","37","38","39","40","41","42","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","outerDivStyle","borderStyle","borderWidth","cursor","innerDivStyle","ColorButton","prepareOuterDivStyle","prepareInnerDivStyle","colorId","ref","setRef","ColorPaletteRow","ColorPaletteColumn","components_ColorButton","onChooseButton","size","ColorPalette","hexColor","onChooseColor","prepareStyle","screenRotation","columns","j","ColorPalette_ColorPaletteColumn","colorButtonsStyle","ColorPalette_ColorPaletteRow","windowStyle","position","ColorsWindow","left","posX","parentWidth","top","calcPos","leftPos","current","clientWidth","topPos","posY","parentHeight","clientHeight","getColorButtonStyle","createRef","handleClickOutside","bind","assertThisInitialized","removeEventListener","contains","buttonRef","onClickOutside","components_ColorPalette","stylePalette","zIndex","backgroundStyle","ColorsWindowMobile","styleTemplate","container","button","outer","inner","palette","row","column","windowMobile","OTColorInput","checkColor","setColor","toggleColorsWindow","isWindowOpen","closeColorsWindow","openColorsWindow","deviceType","getDeviceType","getScreenRotation","onChangeValue","test","navigator","userAgent","innerWidth","innerHeight","assign","components_ColorsWindow","offsetLeft","offsetTop","offsetWidth","offsetHeight","components_ColorsWindowMobile","MonsterMakerTabMonster","onChangeNameDescription","onChangeRace","onChangeExperience","onChangeSkull","onChangeSpeed","onChangeManaCost","onChangeHealthMin","setHealthMin","onChangeHealthMax","onChangeLookTypeValue","onChangeHead","onChangeBody","onChangeLegs","onChangeFeet","onChangeAddons","onChangeMount","onChangeCorpse","onChangeTargetchangeInterval","onChangeTargetchangeChance","onChangeStrategy","strategyCheckbox","onChangeStrategyValue","strategyValue","onChangeLookType","radioLookType","currentTarget","raceSelect","skullSelect","onChangeHealthNow","otcolorinput_react_OTColorInput","MonsterMakerTabScript","onChangeChecked","check","onChangeScript","MonsterMakerTabSummons","onChangeMaxSummons","onChangeSummonName","MonsterMakerTabVoices","onChangeSentence","onChangeYell","monsterMakerMenuStyle","mainWindowStyle","minHeight","backgroundImage","MonsterMakerMenu","handleItemClick","changeState","changeAttacksActiveItem","attacksActiveItem","changeDefensesActiveItem","defensesActiveItem","changeSummonsActiveItem","summonsActiveItem","changeVoicesActiveItem","voicesActiveItem","changeLootActiveItem","lootActiveItem","components_MonsterMakerMenuItem","screens_MonsterMakerTabMonster","screens_MonsterMakerTabFlags","screens_MonsterMakerTabScript","screens_MonsterMakerTabAttacks","screens_MonsterMakerTabDefenses","screens_MonsterMakerTabElements","screens_MonsterMakerTabImmunities","screens_MonsterMakerTabSummons","screens_MonsterMakerTabVoices","screens_MonsterMakerTabLoot","screens_MonsterMakerTabIO","screens_MonsterMakerTabDefault","App","components_MonsterMakerMenu","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","getElementById","URL","process","origin","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.7d54db99.chunk.js","sourcesContent":["class MonsterData {\n    constructor() {\n        this.name = \"\";\n        this.nameDescription = \"\";\n        this.race = \"blood\";\n        this.experience = 1000;\n        this.skull = \"none\";\n        this.speed = 100;\n        this.manaCost = 0;\n        this.healthNow = 100;\n        this.healthMax = 100;\n        this.lookType = \"0\";\n        this.lookTypeValue = 1;\n        this.head = 0;\n        this.body = 0;\n        this.legs = 0;\n        this.feet = 0;\n        this.addons = 0;\n        this.mount = 0;\n        this.corpse = 1;\n        this.targetchangeInterval = 2000;\n        this.targetchangeChance = 5;\n        this.strategy = false;\n        this.attack = 50;\n        this.defense = 50;\n\n        this.dataIndex = \"MONSTER_\";\n    }\n\n    setName = (value) => {\n        this.name = value;\n        this.setValueToLocalStorage('name', value);\n    }\n\n    getName = () => {\n        return this.name;\n    }\n\n    setNameDescription = (value) => {\n        this.nameDescription = value;\n        this.setValueToLocalStorage('nameDescription', value);\n    }\n\n    getNameDescription = () => {\n        return this.nameDescription;\n    }\n\n    setRace = (value) => {\n        this.race = value;\n        this.setValueToLocalStorage('race', value);\n    }\n\n    getRace = () => {\n        return this.race;\n    }\n\n    setExperience = (value) => {\n        this.experience = value;\n        this.setValueToLocalStorage('experience', value);\n    }\n\n    getExperience = () => {\n        return this.experience;\n    }\n\n    setSkull = (value) => {\n        this.skull = value;\n        this.setValueToLocalStorage('skull', value);\n    }\n\n    getSkull = () => {\n        return this.skull;\n    }\n\n    setSpeed = (value) => {\n        this.speed = value;\n        this.setValueToLocalStorage('speed', value);\n    }\n\n    getSpeed = () => {\n        return this.speed;\n    }\n\n    setManaCost = (value) => {\n        this.manaCost = value;\n        this.setValueToLocalStorage('manaCost', value);\n    }\n\n    getManaCost = () => {\n        return this.manaCost;\n    }\n\n    setHealthNow = (value) => {\n        this.healthNow = value;\n        this.setValueToLocalStorage('healthNow', value);\n    }\n\n    getHealthNow = () => {\n        return this.healthNow;\n    }\n\n    setHealthMax = (value) => {\n        this.healthMax = value;\n        this.setValueToLocalStorage('healthMax', value);\n    }\n\n    getHealthMax = () => {\n        return this.healthMax;\n    }\n\n    setLookType = (value) => {\n        this.lookType = value;\n        this.setValueToLocalStorage('lookType', value);\n    }\n\n    getLookType = () => {\n        return this.lookType;\n    }\n\n    setLookTypeValue = (value) => {\n        this.lookTypeValue = value;\n        this.setValueToLocalStorage('lookTypeValue', value);\n    }\n\n    getLookTypeValue = () => {\n        return this.lookTypeValue;\n    }\n\n    setHead = (value) => {\n        this.head = value;\n        this.setValueToLocalStorage('head', value);\n    }\n\n    getHead = () => {\n        return this.head;\n    }\n\n    setBody = (value) => {\n        this.body = value;\n        this.setValueToLocalStorage('body', value);\n    }\n\n    getBody = () => {\n        return this.body;\n    }\n\n    setLegs = (value) => {\n        this.legs = value;\n        this.setValueToLocalStorage('legs', value);\n    }\n    \n    getLegs = () => {\n        return this.legs;\n    }\n\n    setFeet = (value) => {\n        this.feet = value;\n        this.setValueToLocalStorage('feet', value);\n    }\n\n    getFeet = () => {\n        return this.feet;\n    }\n\n    setAddons = (value) => {\n        this.addons = value;\n        this.setValueToLocalStorage('addons', value);\n    }\n\n    getAddons = () => {\n        return this.addons;\n    }\n\n    setMount = (value) => {\n        this.mount = value;\n        this.setValueToLocalStorage('mount', value);\n    }\n\n    getMount = () => {\n        return this.mount;\n    }\n\n    setCorpse = (value) => {\n        this.corpse = value;\n        this.setValueToLocalStorage('corpse', value);\n    }\n\n    getCorpse = () => {\n        return this.corpse;\n    }\n\n    setTargetchangeInterval = (value) => {\n        this.targetchangeInterval = value;\n        this.setValueToLocalStorage('targetchangeInterval', value);\n    }\n\n    getTargetchangeInterval = () => {\n        return this.targetchangeInterval;\n    }\n\n    setTargetchangeChance = (value) => {\n        this.targetchangeChance = value;\n        this.setValueToLocalStorage('targetchangeChance', value);\n    }\n\n    getTargetchangeChance = () => {\n        return this.targetchangeChance;\n    }\n\n    setStrategy = (value) => {\n        this.strategy = value;\n        this.setValueToLocalStorage('strategy', value);\n    }\n\n    getStrategy = () => {\n        return this.strategy;\n    }\n\n    setAttack = (value) => {\n        this.attack = value;\n        this.setValueToLocalStorage('attack', value);\n    }\n\n    getAttack = () => {\n        return this.attack;\n    }\n\n    setDefense = (value) => {\n        this.defense = value;\n        this.setValueToLocalStorage('defense', value);\n    }\n\n    getDefense = () => {\n        return this.defense;\n    }\n\n    getDataIndex = () => {\n        return this.dataIndex;\n    }\n\n    //Generate XML\n\n    getXML = (indentation = '\\t') => {\n        var fileXMLString = '';\n        \n        fileXMLString += '\\n<monster name=\"' + this.getName() + '\" nameDescription=\"' + this.getNameDescription() +\n        '\" race=\"' + this.getRace() + '\" experience=\"' + this.getExperience() + '\" skull=\"' + this.getSkull() +\n        '\" speed=\"' + this.getSpeed() + '\" manacost=\"' + this.getManaCost() + '\">';\n        \n        fileXMLString += '\\n' + indentation + '<health now=\"' + this.getHealthNow() + '\" max=\"' + this.getHealthMax() + '\"/>';\n        \n        var lookTypeFormat = null;\n        if (this.getLookType() === \"0\") {\n            lookTypeFormat = 'type';\n        } else if (this.getLookType() === \"1\") {\n            lookTypeFormat = 'typeEx';\n        }\n        \n        fileXMLString += '\\n' + indentation + '<look ' + lookTypeFormat + '=\"' + this.getLookTypeValue() + '\" head=\"' + this.getHead() +\n        '\" body=\"' + this.getBody() + '\" legs=\"' + this.getLegs() + '\" feet=\"' + this.getFeet() + '\" addons=\"' +\n        this.getAddons() + '\" mount=\"' + this.getMount() + '\" corpse=\"' + this.getCorpse() + '\"/>';\n        \n        fileXMLString += '\\n' + indentation + '<targetchange interval=\"' + this.getTargetchangeInterval() + '\" chance=\"' + this.getTargetchangeChance() + '\"/>';\n        \n        if (this.getStrategy()) {\n            fileXMLString += '\\n' + indentation + '<strategy attack=\"' + this.getAttack() + '\" defense=\"' + this.getDefense() + '\"/>';\n        }\n\n        return fileXMLString;\n    }\n\n    setDefaultValue = () => {\n        this.setName(\"\");\n        this.setNameDescription(\"\");\n        this.setRace(\"blood\");\n        this.setExperience(1000);\n        this.setSkull(\"none\");\n        this.setSpeed(100);\n        this.setManaCost(0);\n        this.setHealthNow(100);\n        this.setHealthMax(100);\n        this.setLookType(\"0\");\n        this.setLookTypeValue(1);\n        this.setHead(0);\n        this.setBody(0);\n        this.setLegs(0);\n        this.setFeet(0);\n        this.setAddons(0);\n        this.setMount(0);\n        this.setCorpse(1);\n        this.setTargetchangeInterval(2000);\n        this.setTargetchangeChance(5);\n        this.setStrategy(false);\n        this.setAttack(50);\n        this.setDefense(50);\n    }\n\n    loadXMLVariableMonster = (variableName, variableValue) => {\n        if (variableName === 'name') {\n            this.setName(variableValue);\n        } else if (variableName === 'nameDescription') {\n            this.setNameDescription(variableValue);\n        } else if (variableName === 'race') {\n            this.setRace(variableValue);\n        } else if (variableName === 'experience') {\n            this.setExperience(variableValue);\n        } else if (variableName === 'skull') {\n            this.setSkull(variableValue);\n        } else if (variableName === 'speed') {\n            this.setSpeed(variableValue);\n        } else if (variableName === 'manacost') {\n            this.setManaCost(variableValue);\n        }\n    }\n\n    loadXMLVariableHealth = (variableName, variableValue) => {\n        if (variableName === 'now') {\n            this.setHealthNow(variableValue);\n        } else if (variableName === 'max') {\n            this.setHealthMax(variableValue);\n        }\n    }\n\n    loadXMLVariableLook = (variableName, variableValue) => {\n        if (variableName === 'type') {\n            this.setLookType(\"0\");\n            this.setLookTypeValue(variableValue);\n        } else if (variableName === 'typeEx') {\n            this.setLookType(\"1\");\n            this.setLookTypeValue(variableValue);\n        } else if (variableName === 'head') {\n            this.setHead(variableValue);\n        } else if (variableName === 'body') {\n            this.setBody(variableValue);\n        } else if (variableName === 'legs') {\n            this.setLegs(variableValue);\n        } else if (variableName === 'feet') {\n            this.setFeet(variableValue);\n        } else if (variableName === 'addons') {\n            this.setAddons(variableValue);\n        } else if (variableName === 'mount') {\n            this.setMount(variableValue);\n        } else if (variableName === 'corpse') {\n            this.setCorpse(variableValue);\n        }\n    }\n\n    loadXMLVariableTargetchange = (variableName, variableValue) => {\n        if (variableName === 'interval') {\n            this.setTargetchangeInterval(variableValue);\n        } else if (variableName === 'chance') {\n            this.setTargetchangeChance(variableValue);\n        }\n    }\n\n    loadXMLVariableStrategy = (variableName, variableValue) => {\n        this.setStrategy(true);\n        if (variableName === 'attack') {\n            this.setAttack(Number(variableValue));\n            this.setDefense(100 - Number(variableValue));\n        //} else if (variableName === 'defense') {\n            //  Ignore\n            //this.setDefense(100 - Number(variableValue));\n        }\n    }\n\n    setValueToLocalStorage = (key, value) => {\n        localStorage.setItem(this.getDataIndex() + key, value);\n    }\n\n    getValueFromLocalStorage = (key) => {\n        return localStorage.getItem(this.getDataIndex() + key);\n    }\n\n    loadValuesFromLocalStorage = () => {\n        if (this.getValueFromLocalStorage('name') !== null) {\n            this.setName(this.getValueFromLocalStorage('name'));\n        }\n        if (this.getValueFromLocalStorage('nameDescription') !== null) {\n            this.setNameDescription(this.getValueFromLocalStorage('nameDescription'));\n        }\n        if (this.getValueFromLocalStorage('race') !== null) {\n            this.setRace(this.getValueFromLocalStorage('race'));\n        }\n        if (this.getValueFromLocalStorage('experience') !== null) {\n            this.setExperience(this.getValueFromLocalStorage('experience'));\n        }\n        if (this.getValueFromLocalStorage('skull') !== null) {\n            this.setSkull(this.getValueFromLocalStorage('skull'));\n        }\n        if (this.getValueFromLocalStorage('speed') !== null) {\n            this.setSpeed(this.getValueFromLocalStorage('speed'));\n        }\n        if (this.getValueFromLocalStorage('manaCost') !== null) {\n            this.setManaCost(this.getValueFromLocalStorage('manaCost'));\n        }\n        if (this.getValueFromLocalStorage('healthNow') !== null) {\n            this.setHealthNow(this.getValueFromLocalStorage('healthNow'));\n        }\n        if (this.getValueFromLocalStorage('healthMax') !== null) {\n            this.setHealthMax(this.getValueFromLocalStorage('healthMax'));\n        }\n        if (this.getValueFromLocalStorage('lookType') !== null) {\n            this.setLookType(this.getValueFromLocalStorage('lookType'));\n        }\n        if (this.getValueFromLocalStorage('lookTypeValue') !== null) {\n            this.setLookTypeValue(this.getValueFromLocalStorage('lookTypeValue'));\n        }\n        if (this.getValueFromLocalStorage('head') !== null) {\n            this.setHead(this.getValueFromLocalStorage('head'));\n        }\n        if (this.getValueFromLocalStorage('body') !== null) {\n            this.setBody(this.getValueFromLocalStorage('body'));\n        }\n        if (this.getValueFromLocalStorage('legs') !== null) {\n            this.setLegs(this.getValueFromLocalStorage('legs'));\n        }\n        if (this.getValueFromLocalStorage('feet') !== null) {\n            this.setFeet(this.getValueFromLocalStorage('feet'));\n        }\n        if (this.getValueFromLocalStorage('addons') !== null) {\n            this.setAddons(this.getValueFromLocalStorage('addons'));\n        }\n        if (this.getValueFromLocalStorage('mount') !== null) {\n            this.setMount(this.getValueFromLocalStorage('mount'));\n        }\n        if (this.getValueFromLocalStorage('corpse') !== null) {\n            this.setCorpse(this.getValueFromLocalStorage('corpse'));\n        }\n        if (this.getValueFromLocalStorage('targetchangeInterval') !== null) {\n            this.setTargetchangeInterval(this.getValueFromLocalStorage('targetchangeInterval'));\n        }\n        if (this.getValueFromLocalStorage('targetchangeChance') !== null) {\n            this.setTargetchangeChance(this.getValueFromLocalStorage('targetchangeChance'));\n        }\n        if (this.getValueFromLocalStorage('strategy') !== null) {\n            if (this.getValueFromLocalStorage('strategy') === 'true') {\n                this.setStrategy(true);\n            } else if (this.getValueFromLocalStorage('strategy') === 'false') {\n                this.setStrategy(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('attack') !== null) {\n            this.setAttack(this.getValueFromLocalStorage('attack'));\n        }\n        if (this.getValueFromLocalStorage('defense') !== null) {\n            this.setDefense(this.getValueFromLocalStorage('defense'));\n        }\n    }\n}\n\nexport default MonsterData;\n","class FlagsData {\n    constructor() {\n        this.summonable = false;\n        this.attackable = false;\n        this.hostile = false;\n        this.illusionable = false;\n        this.convinceable = false;\n        this.pushable = false;\n        this.canpushitems = false;\n        this.canpushcreatures = false;\n        this.targetdistance = 1;\n        this.staticattack = 90;\n        this.hidehealth = false;\n        this.lightcolor = \"0\";\n        this.lightlevel = 1;\n        this.runonhealth = 25;\n\n        this.dataIndex = \"FLAGS_\";\n    }\n\n    setSummonable = (value) => {\n        this.summonable = value;\n        this.setValueToLocalStorage('summonable', value);\n    }\n\n    getSummonable = () => {\n        return this.summonable;\n    }\n\n    setAttackable = (value) => {\n        this.attackable = value;\n        this.setValueToLocalStorage('attackable', value);\n    }\n\n    getAttackable = () => {\n        return this.attackable;\n    }\n\n    setHostile = (value) => {\n        this.hostile = value;\n        this.setValueToLocalStorage('hostile', value);\n    }\n\n    getHostile = () => {\n        return this.hostile;\n    }\n\n    setIllusionable = (value) => {\n        this.illusionable = value;\n        this.setValueToLocalStorage('illusionable', value);\n    }\n\n    getIllusionable = () => {\n        return this.illusionable;\n    }\n\n    setConvinceable = (value) => {\n        this.convinceable = value;\n        this.setValueToLocalStorage('convinceable', value);\n    }\n\n    getConvinceable = () => {\n        return this.convinceable;\n    }\n\n    setPushable = (value) => {\n        this.pushable = value;\n        this.setValueToLocalStorage('pushable', value);\n    }\n\n    getPushable = () => {\n        return this.pushable;\n    }\n\n    setCanpushitems = (value) => {\n        this.canpushitems = value;\n        this.setValueToLocalStorage('canpushitems', value);\n    }\n\n    getCanpushitems = () => {\n        return this.canpushitems;\n    }\n\n    setCanpushcreatures = (value) => {\n        this.canpushcreatures = value;\n        this.setValueToLocalStorage('canpushcreatures', value);\n    }\n\n    getCanpushcreatures = () => {\n        return this.canpushcreatures;\n    }\n\n    setTargetdistance = (value) => {\n        this.targetdistance = value;\n        this.setValueToLocalStorage('targetdistance', value);\n    }\n\n    getTargetdistance = () => {\n        return this.targetdistance;\n    }\n\n    setStaticattack = (value) => {\n        this.staticattack = value;\n        this.setValueToLocalStorage('staticattack', value);\n    }\n\n    getStaticattack = () => {\n        return this.staticattack;\n    }\n\n    setHidehealth = (value) => {\n        this.hidehealth = value;\n        this.setValueToLocalStorage('hidehealth', value);\n    }\n\n    getHidehealth = () => {\n        return this.hidehealth;\n    }\n\n    setLightcolor = (value) => {\n        this.lightcolor = value;\n        this.setValueToLocalStorage('lightcolor', value);\n    }\n\n    getLightcolor = () => {\n        return this.lightcolor;\n    }\n\n    setLightlevel = (value) => {\n        this.lightlevel = value;\n        this.setValueToLocalStorage('lightlevel', value);\n    }\n\n    getLightlevel = () => {\n        return this.lightlevel;\n    }\n\n    setRunonhealth = (value) => {\n        this.runonhealth = value;\n        this.setValueToLocalStorage('runonhealth', value);\n    }\n\n    getRunonhealth = () => {\n        return this.runonhealth;\n    }\n\n    getDataIndex = () => {\n        return this.dataIndex;\n    }\n\n    //Generate XML\n\n    getXML = (indentation = '\\t') => {\n        var fileXMLString = '';\n\n        fileXMLString += '\\n' + indentation + '<flags>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag summonable=\"' + Number(this.getSummonable()) + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag attackable=\"' + Number(this.getAttackable()) + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag hostile=\"' + Number(this.getHostile()) + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag illusionable=\"' + Number(this.getIllusionable()) + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag convinceable=\"' + Number(this.getConvinceable()) + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag pushable=\"' + Number(this.getPushable()) + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag canpushitems=\"' + Number(this.getCanpushitems()) + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag canpushcreatures=\"' + Number(this.getCanpushcreatures()) + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag targetdistance=\"' + this.getTargetdistance() + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag staticattack=\"' + this.getStaticattack() + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag hidehealth=\"' + Number(this.getHidehealth()) + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag lightcolor=\"' + this.getLightcolor() + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag lightlevel=\"' + this.getLightlevel() + '\"/>';\n        fileXMLString += '\\n' + indentation + indentation + '<flag runonhealth=\"' + this.getRunonhealth() + '\"/>';\n        fileXMLString += '\\n' + indentation + '</flags>';\n\n        return fileXMLString;\n    }\n\n    setDefaultValue = () => {\n        this.setSummonable(false);\n        this.setAttackable(false);\n        this.setHostile(false);\n        this.setIllusionable(false);\n        this.setConvinceable(false);\n        this.setPushable(false);\n        this.setCanpushitems(false);\n        this.setCanpushcreatures(false);\n        this.setTargetdistance(1);\n        this.setStaticattack(90);\n        this.setHidehealth(false);\n        this.setLightcolor(\"0\");\n        this.setLightlevel(1);\n        this.setRunonhealth(25);\n    }\n\n    loadXMLVariableFlag = (variableName, variableValue) => {\n        if (variableName === 'summonable') {\n            if (variableValue === '1') {\n                this.setSummonable(true);\n            } else {\n                this.setSummonable(false);\n            }\n        } else if (variableName === 'attackable') {\n            if (variableValue === '1') {\n                this.setAttackable(true);\n            } else {\n                this.setAttackable(false);\n            }\n        } else if (variableName === 'hostile') {\n            if (variableValue === '1') {\n                this.setHostile(true);\n            } else {\n                this.setHostile(false);\n            }\n        } else if (variableName === 'illusionable') {\n            if (variableValue === '1') {\n                this.setIllusionable(true);\n            } else {\n                this.setIllusionable(false);\n            }\n        } else if (variableName === 'convinceable') {\n            if (variableValue === '1') {\n                this.setConvinceable(true);\n            } else {\n                this.setConvinceable(false);\n            }\n        } else if (variableName === 'pushable') {\n            if (variableValue === '1') {\n                this.setPushable(true);\n            } else {\n                this.setPushable(false);\n            }\n        } else if (variableName === 'canpushitems') {\n            if (variableValue === '1') {\n                this.setCanpushitems(true);\n            } else {\n                this.setCanpushitems(false);\n            }\n        } else if (variableName === 'canpushcreatures') {\n            if (variableValue === '1') {\n                this.setCanpushcreatures(true);\n            } else {\n                this.setCanpushcreatures(false);\n            }\n        } else if (variableName === 'targetdistance') {\n            this.setTargetdistance(variableValue);\n        } else if (variableName === 'staticattack') {\n            this.setStaticattack(variableValue);\n        } else if (variableName === 'hidehealth') {\n            if (variableValue === '1') {\n                this.setHidehealth(true);\n            } else {\n                this.setHidehealth(false);\n            }\n        } else if (variableName === 'lightcolor') {\n            this.setLightcolor(variableValue);\n        } else if (variableName === 'lightlevel') {\n            this.setLightlevel(variableValue);\n        } else if (variableName === 'runonhealth') {\n            this.setRunonhealth(variableValue);\n        }\n    }\n\n    setValueToLocalStorage = (key, value) => {\n        localStorage.setItem(this.getDataIndex() + key, value);\n    }\n\n    getValueFromLocalStorage = (key) => {\n        return localStorage.getItem(this.getDataIndex() + key);\n    }\n\n    loadValuesFromLocalStorage = () => {\n        if (this.getValueFromLocalStorage('summonable') !== null) {\n            if (this.getValueFromLocalStorage('summonable') === 'true') {\n                this.setSummonable(true);\n            } else if (this.getValueFromLocalStorage('summonable') === 'false') {\n                this.setSummonable(false);\n            }\n        }\n\n        if (this.getValueFromLocalStorage('attackable') !== null) {\n            if (this.getValueFromLocalStorage('attackable') === 'true') {\n                this.setAttackable(true);\n            } else if (this.getValueFromLocalStorage('attackable') === 'false') {\n                this.setAttackable(false);\n            }\n        }\n\n        if (this.getValueFromLocalStorage('hostile') !== null) {\n            if (this.getValueFromLocalStorage('hostile') === 'true') {\n                this.setHostile(true);\n            } else if (this.getValueFromLocalStorage('hostile') === 'false') {\n                this.setHostile(false);\n            }\n        }\n\n        if (this.getValueFromLocalStorage('illusionable') !== null) {\n            if (this.getValueFromLocalStorage('illusionable') === 'true') {\n                this.setIllusionable(true);\n            } else if (this.getValueFromLocalStorage('illusionable') === 'false') {\n                this.setIllusionable(false);\n            }\n        }\n\n        if (this.getValueFromLocalStorage('convinceable') !== null) {\n            if (this.getValueFromLocalStorage('convinceable') === 'true') {\n                this.setConvinceable(true);\n            } else if (this.getValueFromLocalStorage('convinceable') === 'false') {\n                this.setConvinceable(false);\n            }\n        }\n\n        if (this.getValueFromLocalStorage('pushable') !== null) {\n            if (this.getValueFromLocalStorage('pushable') === 'true') {\n                this.setPushable(true);\n            } else if (this.getValueFromLocalStorage('pushable') === 'false') {\n                this.setPushable(false);\n            }\n        }\n\n        if (this.getValueFromLocalStorage('canpushitems') !== null) {\n            if (this.getValueFromLocalStorage('canpushitems') === 'true') {\n                this.setCanpushitems(true);\n            } else if (this.getValueFromLocalStorage('canpushitems') === 'false') {\n                this.setCanpushitems(false);\n            }\n        }\n\n        if (this.getValueFromLocalStorage('canpushcreatures') !== null) {\n            if (this.getValueFromLocalStorage('canpushcreatures') === 'true') {\n                this.setCanpushcreatures(true);\n            } else if (this.getValueFromLocalStorage('canpushcreatures') === 'false') {\n                this.setCanpushcreatures(false);\n            }\n        }\n\n        if (this.getValueFromLocalStorage('targetdistance') !== null) {\n            this.setTargetdistance(this.getValueFromLocalStorage('targetdistance'));\n        }\n\n        if (this.getValueFromLocalStorage('staticattack') !== null) {\n            this.setStaticattack(this.getValueFromLocalStorage('staticattack'));\n        }\n\n        if (this.getValueFromLocalStorage('hidehealth') !== null) {\n            if (this.getValueFromLocalStorage('hidehealth') === 'true') {\n                this.setHidehealth(true);\n            } else if (this.getValueFromLocalStorage('hidehealth') === 'false') {\n                this.setHidehealth(false);\n            }\n        }\n\n        if (this.getValueFromLocalStorage('lightcolor') !== null) {\n            this.setLightcolor(this.getValueFromLocalStorage('lightcolor'));\n        }\n\n        if (this.getValueFromLocalStorage('lightlevel') !== null) {\n            this.setLightlevel(this.getValueFromLocalStorage('lightlevel'));\n        }\n\n        if (this.getValueFromLocalStorage('runonhealth') !== null) {\n            this.setRunonhealth(this.getValueFromLocalStorage('runonhealth'));\n        }\n    }\n}\n\nexport default FlagsData;\n","class ScriptData {\n    constructor() {\n        this.checked = false;\n        this.script = \"\";\n\n        this.dataIndex = \"SCRIPT_\";\n    }\n\n    setChecked = (value) => {\n        this.checked = value;\n        this.setValueToLocalStorage('checked', value);\n    }\n\n    getChecked = () => {\n        return this.checked;\n    }\n\n    setScript = (value) => {\n        this.script = value;\n        this.setValueToLocalStorage('script', value);\n    }\n\n    getScript = () => {\n        return this.script;\n    }\n\n    getDataIndex = () => {\n        return this.dataIndex;\n    }\n\n    //Generate XML\n\n    getXML = (indentation = '\\t') => {\n        var fileXMLString = '';\n\n        if (this.getChecked()) {\n            fileXMLString += '\\n' + indentation + '<script>';\n            fileXMLString += '\\n' + indentation + indentation + '<event name=\"' + this.getScript() + '\"/>';\n            fileXMLString += '\\n' + indentation + '</script>';\n        }\n\n        return fileXMLString;\n    }\n\n    setDefaultValue = () => {\n        this.setChecked(false);\n        this.setScript(\"\");\n    }\n\n    loadXMLVariableEvent = (variableName, variableValue) => {\n        if (variableName === 'name') {\n            this.setChecked(true);\n            this.setScript(variableValue);\n        }\n    }\n\n    setValueToLocalStorage = (key, value) => {\n        localStorage.setItem(this.getDataIndex() + key, value);\n    }\n\n    getValueFromLocalStorage = (key) => {\n        return localStorage.getItem(this.getDataIndex() + key);\n    }\n\n    loadValuesFromLocalStorage = () => {\n        if (this.getValueFromLocalStorage('checked') !== null) {\n            if (this.getValueFromLocalStorage('checked') === 'true') {\n                this.setChecked(true);\n            } else if (this.getValueFromLocalStorage('checked') === 'false') {\n                this.setChecked(false);\n            }\n        }\n\n        if (this.getValueFromLocalStorage('script') !== null) {\n            this.setScript(this.getValueFromLocalStorage('script'));\n        }\n    }\n}\n\nexport default ScriptData;\n","class AttacksData {\n    constructor() {\n        this.allAttacks = [];\n\n        this.type = \"melee\";\n        this.elementalType = \"physical\";\n        this.conditionsType = \"physicalcondition\";\n        this.fieldsType = \"firefield\";\n        this.runesType = \"sudden death\";\n        this.spellsType = \"great energy beam\";\n        this.otherType = \"\";\n        this.min = -5;\n        this.max = -10;\n        this.skillCheckbox = false;\n        this.skill = 1;\n        this.attack = 1;\n        this.interval = 1000;\n        this.chance = 1;\n        this.lengthCheckbox = false;\n        this.length = 0;\n        this.spreadCheckbox = false;\n        this.spread = 1;\n        this.radiusCheckbox = false;\n        this.radius = 1;\n        this.poisonCheckbox = false;\n        this.poison = 1;\n        this.target = false;\n        this.range = 1;\n        this.areaeffectCheckbox = false;\n        this.areaeffect = \"redspark\";\n        this.shooteffectCheckbox = false;\n        this.shooteffect = \"spear\";\n\n        this.dataIndex = \"ATTACKS_\";\n\n        this.attackTypeArray = ['melee', 'elemental', 'conditions', 'fields', 'runes', 'spells', 'other'];\n        this.elementalTypeArray = ['physical', 'energy', 'earth', 'fire', 'lifedrain', 'manadrain', 'healing', 'drown', 'ice', 'holy', 'death'];\n        this.conditionsTypeArray = ['physicalcondition', 'firecondition', 'energycondition', 'earthcondition', 'icecondition', 'deathcondition', 'holycondition', 'drowncondition'];\n        this.fieldsTypeArray = ['firefield', 'poisonfield', 'energyfield'];\n        this.runesTypeArray = ['sudden death'];\n        this.spellsTypeArray = ['great energy beam'];\n    }\n\n    setType = (value) => {\n        this.type = value;\n        this.setValueToLocalStorage('type', value);\n    }\n\n    setIndexType = (index, value) => {\n        this.allAttacks[index].type = value;\n        this.setTableToLocalStorage();\n    }\n\n    getType = () => {\n        return this.type;\n    }\n\n    setElementalType = (value) => {\n        this.elementalType = value;\n        this.setValueToLocalStorage('elementalType', value);\n    }\n\n    setIndexElementalType = (index, value) => {\n        this.allAttacks[index].elementalType = value;\n        this.setTableToLocalStorage();\n    }\n\n    getElementalType = () => {\n        return this.elementalType;\n    }\n\n    setConditionsType = (value) => {\n        this.conditionsType = value;\n        this.setValueToLocalStorage('conditionsType', value);\n    }\n\n    setIndexConditionsType = (index, value) => {\n        this.allAttacks[index].conditionsType = value;\n        this.setTableToLocalStorage();\n    }\n\n    getConditionsType = () => {\n        return this.conditionsType;\n    }\n\n    setFieldsType = (value) => {\n        this.fieldsType = value;\n        this.setValueToLocalStorage('fieldsType', value);\n    }\n\n    setIndexFieldsType = (index, value) => {\n        this.allAttacks[index].fieldsType = value;\n        this.setTableToLocalStorage();\n    }\n\n    getFieldsType = () => {\n        return this.fieldsType;\n    }\n\n    setRunesType = (value) => {\n        this.runesType = value;\n        this.setValueToLocalStorage('runesType', value);\n    }\n\n    setIndexRunesType = (index, value) => {\n        this.allAttacks[index].runesType = value;\n        this.setTableToLocalStorage();\n    }\n\n    getRunesType = () => {\n        return this.runesType;\n    }\n\n    setSpellsType = (value) => {\n        this.spellsType = value;\n        this.setValueToLocalStorage('spellsType', value);\n    }\n\n    setIndexSpellsType = (index, value) => {\n        this.allAttacks[index].spellsType = value;\n        this.setTableToLocalStorage();\n    }\n\n    getSpellsType = () => {\n        return this.spellsType;\n    }\n\n    setOtherType = (value) => {\n        this.otherType = value;\n        this.setValueToLocalStorage('otherType', value);\n    }\n\n    setIndexOtherType = (index, value) => {\n        this.allAttacks[index].otherType = value;\n        this.setTableToLocalStorage();\n    }\n\n    getOtherType = () => {\n        return this.otherType;\n    }\n\n    setMin = (value) => {\n        this.min = value;\n        this.setValueToLocalStorage('min', value);\n    }\n\n    setIndexMin = (index, value) => {\n        this.allAttacks[index].min = value;\n        this.setTableToLocalStorage();\n    }\n\n    getMin = () => {\n        return this.min;\n    }\n\n    setMax = (value) => {\n        this.max = value;\n        this.setValueToLocalStorage('max', value);\n    }\n\n    setIndexMax = (index, value) => {\n        this.allAttacks[index].max = value;\n        this.setTableToLocalStorage();\n    }\n\n    getMax = () => {\n        return this.max;\n    }\n\n    setSkillCheckbox = (value) => {\n        this.skillCheckbox = value;\n        this.setValueToLocalStorage('skillCheckbox', value);\n    }\n\n    setIndexSkillCheckbox = (index, value) => {\n        this.allAttacks[index].skillCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getSkillCheckbox = () => {\n        return this.skillCheckbox;\n    }\n\n    setSkill = (value) => {\n        this.skill = value;\n        this.setValueToLocalStorage('skill', value);\n    }\n\n    setIndexSkill = (index, value) => {\n        this.allAttacks[index].skill = value;\n        this.setTableToLocalStorage();\n    }\n\n    getSkill = () => {\n        return this.skill;\n    }\n\n    setAttack = (value) => {\n        this.attack = value;\n        this.setValueToLocalStorage('attack', value);\n    }\n\n    setIndexAttack = (index, value) => {\n        this.allAttacks[index].attack = value;\n        this.setTableToLocalStorage();\n    }\n\n    getAttack = () => {\n        return this.attack;\n    }\n\n    setInterval = (value) => {\n        this.interval = value;\n        this.setValueToLocalStorage('interval', value);\n    }\n\n    setIndexInterval = (index, value) => {\n        this.allAttacks[index].interval = value;\n        this.setTableToLocalStorage();\n    }\n\n    getInterval = () => {\n        return this.interval;\n    }\n\n    setChance = (value) => {\n        this.chance = value;\n        this.setValueToLocalStorage('chance', value);\n    }\n\n    setIndexChance = (index, value) => {\n        this.allAttacks[index].chance = value;\n        this.setTableToLocalStorage();\n    }\n\n    getChance = () => {\n        return this.chance;\n    }\n\n    setLengthCheckbox = (value) => {\n        this.lengthCheckbox = value;\n        this.setValueToLocalStorage('lengthCheckbox', value);\n    }\n\n    setIndexLengthCheckbox = (index, value) => {\n        this.allAttacks[index].lengthCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getLengthCheckbox = () => {\n        return this.lengthCheckbox;\n    }\n\n    setLength = (value) => {\n        this.length = value;\n        this.setValueToLocalStorage('length', value);\n    }\n\n    setIndexLength = (index, value) => {\n        this.allAttacks[index].length = value;\n        this.setTableToLocalStorage();\n    }\n\n    getLength = () => {\n        return this.length;\n    }\n\n    setSpreadCheckbox = (value) => {\n        this.spreadCheckbox = value;\n        this.setValueToLocalStorage('spreadCheckbox', value);\n    }\n\n    setIndexSpreadCheckbox = (index, value) => {\n        this.allAttacks[index].spreadCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getSpreadCheckbox = () => {\n        return this.spreadCheckbox;\n    }\n\n    setSpread = (value) => {\n        this.spread = value;\n        this.setValueToLocalStorage('spread', value);\n    }\n\n    setIndexSpread = (index, value) => {\n        this.allAttacks[index].spread = value;\n        this.setTableToLocalStorage();\n    }\n\n    getSpread = () => {\n        return this.spread;\n    }\n\n    setRadiusCheckbox = (value) => {\n        this.radiusCheckbox = value;\n        this.setValueToLocalStorage('radiusCheckbox', value);\n    }\n\n    setIndexRadiusCheckbox = (index, value) => {\n        this.allAttacks[index].radiusCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getRadiusCheckbox = () => {\n        return this.radiusCheckbox;\n    }\n\n    setRadius = (value) => {\n        this.radius = value;\n        this.setValueToLocalStorage('radius', value);\n    }\n\n    setIndexRadius = (index, value) => {\n        this.allAttacks[index].radius = value;\n        this.setTableToLocalStorage();\n    }\n\n    getRadius = () => {\n        return this.radius;\n    }\n\n    setPoisonCheckbox = (value) => {\n        this.poisonCheckbox = value;\n        this.setValueToLocalStorage('poisonCheckbox', value);\n    }\n\n    setIndexPoisonCheckbox = (index, value) => {\n        this.allAttacks[index].poisonCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getPoisonCheckbox = () => {\n        return this.poisonCheckbox;\n    }\n\n    setPoison = (value) => {\n        this.poison = value;\n        this.setValueToLocalStorage('poison', value);\n    }\n\n    setIndexPoison = (index, value) => {\n        this.allAttacks[index].poison = value;\n        this.setTableToLocalStorage();\n    }\n\n    getPoison = () => {\n        return this.poison;\n    }\n\n    setTarget = (value) => {\n        this.target = value;\n        this.setValueToLocalStorage('target', value);\n    }\n\n    setIndexTarget = (index, value) => {\n        this.allAttacks[index].target = value;\n        this.setTableToLocalStorage();\n    }\n\n    getTarget = () => {\n        return this.target;\n    }\n\n    setRange = (value) => {\n        this.range = value;\n        this.setValueToLocalStorage('range', value);\n    }\n\n    setIndexRange = (index, value) => {\n        this.allAttacks[index].range = value;\n        this.setTableToLocalStorage();\n    }\n\n    getRange = () => {\n        return this.range;\n    }\n\n    setAreaeffectCheckbox = (value) => {\n        this.areaeffectCheckbox = value;\n        this.setValueToLocalStorage('areaeffectCheckbox', value);\n    }\n\n    setIndexAreaeffectCheckbox = (index, value) => {\n        this.allAttacks[index].areaeffectCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getAreaeffectCheckbox = () => {\n        return this.areaeffectCheckbox;\n    }\n\n    setAreaeffect = (value) => {\n        this.areaeffect = value;\n        this.setValueToLocalStorage('areaeffect', value);\n    }\n\n    setIndexAreaeffect = (index, value) => {\n        this.allAttacks[index].areaeffect = value;\n        this.setTableToLocalStorage();\n    }\n\n    getAreaeffect = () => {\n        return this.areaeffect;\n    }\n\n    setShooteffectCheckbox = (value) => {\n        this.shooteffectCheckbox = value;\n        this.setValueToLocalStorage('shooteffectCheckbox', value);\n    }\n\n    setIndexShooteffectCheckbox = (index, value) => {\n        this.allAttacks[index].shooteffectCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getShooteffectCheckbox = () => {\n        return this.shooteffectCheckbox;\n    }\n\n    setShooteffect = (value) => {\n        this.shooteffect = value;\n        this.setValueToLocalStorage('shooteffect', value);\n    }\n\n    setIndexShooteffect = (index, value) => {\n        this.allAttacks[index].shooteffect = value;\n        this.setTableToLocalStorage();\n    }\n\n    getShooteffect = () => {\n        return this.shooteffect;\n    }\n\n    //Arrays\n\n    getAttackTypeArray = () => {\n        return this.attackTypeArray;\n    }\n\n    getElementalTypeArray = () => {\n        return this.elementalTypeArray;\n    }\n\n    getConditionsTypeArray = () => {\n        return this.conditionsTypeArray;\n    }\n\n    getFieldsTypeArray = () => {\n        return this.fieldsTypeArray;\n    }\n\n    getRunesTypeArray = () => {\n        return this.runesTypeArray;\n    }\n\n    getSpellsTypeArray = () => {\n        return this.spellsTypeArray;\n    }\n\n    getDataIndex = () => {\n        return this.dataIndex;\n    }\n\n    //Actions\n\n    addToAttacks = () => {\n        var allItems = {\n            type: this.type,\n            elementalType: this.elementalType,\n            conditionsType: this.conditionsType,\n            fieldsType: this.fieldsType,\n            runesType: this.runesType,\n            spellsType: this.spellsType,\n            otherType: this.otherType,\n            min: this.min,\n            max: this.max,\n            skillCheckbox: this.skillCheckbox,\n            skill: this.skill,\n            attack: this.attack,\n            interval: this.interval,\n            chance: this.chance,\n            lengthCheckbox: this.lengthCheckbox,\n            length: this.length,\n            spreadCheckbox: this.spreadCheckbox,\n            spread: this.spread,\n            radiusCheckbox: this.radiusCheckbox,\n            radius: this.radius,\n            poisonCheckbox: this.poisonCheckbox,\n            poison: this.poison,\n            target: this.target,\n            range: this.range,\n            areaeffectCheckbox: this.areaeffectCheckbox,\n            areaeffect: this.areaeffect,\n            shooteffectCheckbox: this.shooteffectCheckbox,\n            shooteffect: this.shooteffect\n        }\n\n        this.allAttacks.push(allItems);\n        this.setTableToLocalStorage();\n    }\n\n    deleteFromAttacks = (index) => {\n        this.allAttacks.splice(index, 1);\n        this.setTableToLocalStorage();\n    }\n\n    getFromAttacks = (index) => {\n        return this.allAttacks[index];\n    }\n\n    showAttacks = (index) => {\n        this.type = this.allAttacks[index].type;\n        this.elementalType = this.allAttacks[index].elementalType;\n        this.conditionsType = this.allAttacks[index].conditionsType;\n        this.fieldsType = this.allAttacks[index].fieldsType;\n        this.runesType = this.allAttacks[index].runesType;\n        this.spellsType = this.allAttacks[index].spellsType;\n        this.otherType = this.allAttacks[index].otherType;\n        this.min = this.allAttacks[index].min;\n        this.max = this.allAttacks[index].max;\n        this.skillCheckbox = this.allAttacks[index].skillCheckbox;\n        this.skill = this.allAttacks[index].skill;\n        this.attack = this.allAttacks[index].attack;\n        this.interval = this.allAttacks[index].interval;\n        this.chance = this.allAttacks[index].chance;\n        this.lengthCheckbox = this.allAttacks[index].lengthCheckbox;\n        this.length = this.allAttacks[index].length;\n        this.spreadCheckbox = this.allAttacks[index].spreadCheckbox;\n        this.spread = this.allAttacks[index].spread;\n        this.radiusCheckbox = this.allAttacks[index].radiusCheckbox;\n        this.radius = this.allAttacks[index].radius;\n        this.poisonCheckbox = this.allAttacks[index].poisonCheckbox;\n        this.poison = this.allAttacks[index].poison;\n        this.target = this.allAttacks[index].target;\n        this.range = this.allAttacks[index].range;\n        this.areaeffectCheckbox = this.allAttacks[index].areaeffectCheckbox;\n        this.areaeffect = this.allAttacks[index].areaeffect;\n        this.shooteffectCheckbox = this.allAttacks[index].shooteffectCheckbox;\n        this.shooteffect = this.allAttacks[index].shooteffect;\n    }\n\n    updateAttacks = (index) => {\n        this.allAttacks[index] = {\n            type: this.type,\n            elementalType: this.elementalType,\n            conditionsType: this.conditionsType,\n            fieldsType: this.fieldsType,\n            runesType: this.runesType,\n            spellsType: this.spellsType,\n            otherType: this.otherType,\n            min: this.min,\n            max: this.max,\n            skillCheckbox: this.skillCheckbox,\n            skill: this.skill,\n            attack: this.attack,\n            interval: this.interval,\n            chance: this.chance,\n            lengthCheckbox: this.lengthCheckbox,\n            length: this.length,\n            spreadCheckbox: this.spreadCheckbox,\n            spread: this.spread,\n            radiusCheckbox: this.radiusCheckbox,\n            radius: this.radius,\n            poisonCheckbox: this.poisonCheckbox,\n            poison: this.poison,\n            target: this.target,\n            range: this.range,\n            areaeffectCheckbox: this.areaeffectCheckbox,\n            areaeffect: this.areaeffect,\n            shooteffectCheckbox: this.shooteffectCheckbox,\n            shooteffect: this.shooteffect\n        }\n    }\n\n    getAttackFromData = (index) => {\n        var attackTable = [];\n\n        //name\n        if (this.allAttacks[index].type === 'melee') {\n            attackTable.name = 'melee';\n        } else if (this.allAttacks[index].type === 'elemental') {\n            attackTable.name = this.allAttacks[index].elementalType;\n        } else if (this.allAttacks[index].type === 'conditions') {\n            attackTable.name = this.allAttacks[index].conditionsType;\n        } else if (this.allAttacks[index].type === 'fields') {\n            attackTable.name = this.allAttacks[index].fieldsType;\n        } else if (this.allAttacks[index].type === 'runes') {\n            attackTable.name = this.allAttacks[index].runesType;\n        } else if (this.allAttacks[index].type === 'spells') {\n            attackTable.name = this.allAttacks[index].spellsType;\n        } else if (this.allAttacks[index].type === 'other') {\n            attackTable.name = this.allAttacks[index].otherType;\n        }\n\n        //min/max/skill/attack\n        if (!this.allAttacks[index].skillCheckbox) {\n            attackTable.min = Number(this.allAttacks[index].min);\n            attackTable.max = Number(this.allAttacks[index].max);\n        } else {\n            attackTable.skill = Number(this.allAttacks[index].skill);\n            attackTable.attack = Number(this.allAttacks[index].attack);\n        }\n\n        //interval/chance\n        attackTable.interval = Number(this.allAttacks[index].interval);\n        attackTable.chance = Number(this.allAttacks[index].chance);\n        \n        //length/spread/radius/poison\n        if (this.allAttacks[index].lengthCheckbox) {\n            attackTable.length = Number(this.allAttacks[index].length);\n        }\n        if (this.allAttacks[index].spreadCheckbox) {\n            attackTable.spread = Number(this.allAttacks[index].spread);\n        }\n        if (this.allAttacks[index].radiusCheckbox) {\n            attackTable.radius = Number(this.allAttacks[index].radius);\n        }\n        if (this.allAttacks[index].poisonCheckbox) {\n            attackTable.poison = Number(this.allAttacks[index].poison);\n        }\n        \n        //target/range\n        if (this.allAttacks[index].target) {\n            attackTable.target = 1;\n            attackTable.range = Number(this.allAttacks[index].range);\n        }\n\n        //area/shoot effect\n        if (this.allAttacks[index].areaeffectCheckbox) {\n            attackTable.areaEffect = this.allAttacks[index].areaeffect;\n        }\n        if (this.allAttacks[index].shooteffectCheckbox) {\n            attackTable.shootEffect = this.allAttacks[index].shooteffect;\n        }\n\n        return attackTable;\n    }\n\n    generateXMLattack = (index, indentation = '\\t', firstIndentation = '') => {\n        var attackData = this.getAttackFromData(index);\n\n        var attack = '';\n\n        attack = firstIndentation + '<attack name=\"' + attackData.name + '\" interval=\"' + attackData.interval + '\"';\n        if (attackData.chance != null) {\n            attack = attack + ' chance=\"' + attackData.chance + '\"';\n        }\n        if (attackData.length != null) {\n            attack = attack + ' length=\"' + attackData.length + '\"';\n        }\n        if (attackData.spread != null) {\n            attack = attack + ' spread=\"' + attackData.spread + '\"';\n        }\n        if (attackData.radius != null) {\n            attack = attack + ' radius=\"' + attackData.radius + '\"';\n        }\n        if (attackData.range != null) {\n            attack = attack + ' range=\"' + attackData.range + '\"';\n        }\n        if (attackData.target != null) {\n            attack = attack + ' target=\"' + attackData.target + '\"';\n        }\n        if (attackData.min != null && attackData.max != null) {\n            attack = attack + ' min=\"' + attackData.min + '\" max=\"' + attackData.max + '\"';\n        } else if (attackData.skill != null && attackData.attack != null) {\n            attack = attack + ' skill=\"' + attackData.skill + '\" attack=\"' + attackData.attack + '\"';\n        }\n        if (attackData.poison != null) {\n            attack = attack + ' poison=\"' + attackData.poison + '\"';\n        }\n        if (!(attackData.areaEffect != null || attackData.shootEffect != null)) {\n            attack = attack + '/>';\n        } else {\n            attack = attack + '>';\n\n            if (attackData.areaEffect != null) {\n                attack = attack + '\\n' + firstIndentation + indentation + '<attribute key=\"areaEffect\" value=\"' + attackData.areaEffect + '\"/>';\n            }\n\n            if (attackData.shootEffect != null) {\n                attack = attack + '\\n' + firstIndentation + indentation + '<attribute key=\"shootEffect\" value=\"' + attackData.shootEffect + '\"/>';\n            }\n\n            attack = attack + '\\n' + firstIndentation + '</attack>';\n        }\n\n        return attack;\n    }\n\n    getAllXMLattacks = (indentation = '\\t', firstIndentation = '') => {\n        var returnAttacks = [];\n\n        this.allAttacks.forEach((variable, index) => {\n            returnAttacks.push(this.generateXMLattack(index, indentation, firstIndentation));\n        });\n\n        return returnAttacks;\n    }\n\n    //Generate XML\n\n    getXML = (indentation = '\\t', firstIndentation = '') => {\n        var fileXMLString = '';\n        \n        var allXMLattacks = this.getAllXMLattacks(indentation, firstIndentation);\n\n        if (allXMLattacks.length > 0) {\n            fileXMLString += '\\n' + indentation + '<attacks>';\n\n            allXMLattacks.forEach((variable, index) => {\n                fileXMLString += '\\n' + variable;\n            });\n\n            fileXMLString += '\\n' + indentation + '</attacks>';\n        }\n\n        return fileXMLString;\n    }\n\n    setDefaultValue = () => {\n        this.allAttacks = [];\n        this.setTableToLocalStorage();\n\n        this.setType(\"melee\");\n        this.setElementalType(\"physical\");\n        this.setConditionsType(\"physicalcondition\");\n        this.setFieldsType(\"firefield\");\n        this.setRunesType(\"sudden death\");\n        this.setSpellsType(\"great energy beam\");\n        this.setOtherType(\"\");\n        this.setMin(-5);\n        this.setMax(-10);\n        this.setSkillCheckbox(false);\n        this.setSkill(1);\n        this.setAttack(1);\n        this.setInterval(1000);\n        this.setChance(1);\n        this.setLengthCheckbox(false);\n        this.setLength(0);\n        this.setSpreadCheckbox(false);\n        this.setSpread(1);\n        this.setRadiusCheckbox(false);\n        this.setRadius(1);\n        this.setPoisonCheckbox(false);\n        this.setPoison(1);\n        this.setTarget(false);\n        this.setRange(1);\n        this.setAreaeffectCheckbox(false);\n        this.setAreaeffect(\"redspark\");\n        this.setShooteffectCheckbox(false);\n        this.setShooteffect(\"spear\");\n    }\n\n    setDefaultTableValue = () => {\n        this.setType(\"melee\");\n        this.setElementalType(\"physical\");\n        this.setConditionsType(\"physicalcondition\");\n        this.setFieldsType(\"firefield\");\n        this.setRunesType(\"sudden death\");\n        this.setSpellsType(\"great energy beam\");\n        this.setOtherType(\"\");\n        this.setMin(-5);\n        this.setMax(-10);\n        this.setSkillCheckbox(false);\n        this.setSkill(1);\n        this.setAttack(1);\n        this.setInterval(1000);\n        this.setChance(1);\n        this.setLengthCheckbox(false);\n        this.setLength(0);\n        this.setSpreadCheckbox(false);\n        this.setSpread(1);\n        this.setRadiusCheckbox(false);\n        this.setRadius(1);\n        this.setPoisonCheckbox(false);\n        this.setPoison(1);\n        this.setTarget(false);\n        this.setRange(1);\n        this.setAreaeffectCheckbox(false);\n        this.setAreaeffect(\"redspark\");\n        this.setShooteffectCheckbox(false);\n        this.setShooteffect(\"spear\");\n    }\n\n    compareValueToAttactType = (value) => {\n        if (value === 'melee') {\n            return 'melee';\n        }\n\n        this.getElementalTypeArray().forEach(function (item, i) {\n            if (item === value) {\n                return 'elemental';\n            }\n        });\n\n        this.getConditionsTypeArray().forEach(function (item, i) {\n            if (item === value) {\n                return 'conditions';\n            }\n        });\n    \n        this.getFieldsTypeArray().forEach(function (item, i) {\n            if (item === value) {\n                return 'fields';\n            }\n        });\n    \n        this.getRunesTypeArray().forEach(function (item, i) {\n            if (item === value) {\n                return 'runes';\n            }\n        });\n    \n        this.getSpellsTypeArray().forEach(function (item, i) {\n            if (item === value) {\n                return 'spells';\n            }\n        });\n\n        return 'other';\n    }\n\n    loadXMLVariableAttack = (variableName, variableValue) => {\n        if (variableName === 'name') {\n            let attackType = this.compareValueToAttactType(variableValue);\n            this.setType(attackType);\n\n            if (attackType === 'elemental') {\n                this.setElementalType(variableValue);\n            } else if (attackType === 'conditions') {\n                this.setConditionsType(variableValue);\n            } else if (attackType === 'fields') {\n                this.setFieldsType(variableValue);\n            } else if (attackType === 'runes') {\n                this.setRunesType(variableValue);\n            } else if (attackType === 'spells') {\n                this.setSpellsType(variableValue);\n            } else if (attackType === 'other') {\n                this.setOtherType(variableValue);\n            }\n        } else if (variableName === 'min') {\n            if (this.getSkillCheckbox()) {\n                //TODO Check parse errors\n            }\n            this.setMin(variableValue);\n            this.setSkillCheckbox(false);\n        } else if (variableName === 'max') {\n            if (this.getSkillCheckbox()) {\n                //TODO Check parse errors\n            }\n            this.setMax(variableValue);\n            this.setSkillCheckbox(false);\n        } else if (variableName === 'skill') {\n            this.setSkill(variableValue);\n            this.setSkillCheckbox(true);\n        } else if (variableName === 'attack') {\n            this.setAttack(variableValue);\n            this.setSkillCheckbox(true);\n        } else if (variableName === 'interval') {\n            this.setInterval(variableValue);\n        } else if (variableName === 'chance') {\n            this.setChance(variableValue);\n        } else if (variableName === 'length') {\n            if (this.getRadiusCheckbox()) {\n                //TODO Check parse errors\n            }\n            this.setLength(variableValue);\n            this.setLengthCheckbox(true);\n        } else if (variableName === 'spread') {\n            if (this.getRadiusCheckbox()) {\n                //TODO Check parse errors\n            }\n            this.setSpread(variableValue);\n            this.setSpreadCheckbox(true);\n        } else if (variableName === 'radius') {\n            if (this.getLengthCheckbox() || this.getRadiusCheckbox()) {\n                //TODO Check parse errors\n            }\n            this.setRadius(variableValue);\n            this.setRadiusCheckbox(true);\n        } else if (variableName === 'poison') {\n            this.setPoison(variableValue);\n            this.setPoisonCheckbox(true);\n        } else if (variableName === 'target') {\n            this.setTarget(true);\n        } else if (variableName === 'range') {\n            this.setRange(variableValue);\n        }\n    }\n\n    loadXMLVariableAttribute = (variableName, variableValue) => {\n        if (variableName === 'key') {\n            if (variableValue === 'areaEffect') {\n                this.setAreaeffectCheckbox(true);\n            } else if (variableValue === 'shootEffect') {\n                this.setShooteffectCheckbox(true);\n            }\n        } else if (variableName === 'value') {\n            if (this.getAreaeffectCheckbox()) {\n                this.setAreaeffect(variableValue);\n            } else if (this.getShooteffectCheckbox()) {\n                this.setShooteffect(variableValue);\n            }\n        }\n    }\n\n    setValueToLocalStorage = (key, value) => {\n        localStorage.setItem(this.getDataIndex() + key, value);\n    }\n\n    getValueFromLocalStorage = (key) => {\n        return localStorage.getItem(this.getDataIndex() + key);\n    }\n\n    setTableToLocalStorage = () => {\n        localStorage.setItem(this.getDataIndex() + \"all\", JSON.stringify(this.allAttacks));\n    }\n\n    getTableFromLocalStorage = () => {\n        if (localStorage.getItem(this.getDataIndex() + \"all\") !== null) {\n            return JSON.parse(localStorage.getItem(this.getDataIndex() + \"all\"));\n        } else {\n            return [];\n        }\n    }\n\n    loadValuesFromLocalStorage = () => {\n        this.allAttacks = this.getTableFromLocalStorage();\n\n        if (this.getValueFromLocalStorage('type') !== null) {\n            this.setType(this.getValueFromLocalStorage('type'));\n        }\n        if (this.getValueFromLocalStorage('elementalType') !== null) {\n            this.setElementalType(this.getValueFromLocalStorage('elementalType'));\n        }\n        if (this.getValueFromLocalStorage('conditionsType') !== null) {\n            this.setConditionsType(this.getValueFromLocalStorage('conditionsType'));\n        }\n        if (this.getValueFromLocalStorage('fieldsType') !== null) {\n            this.setFieldsType(this.getValueFromLocalStorage('fieldsType'));\n        }\n        if (this.getValueFromLocalStorage('runesType') !== null) {\n            this.setRunesType(this.getValueFromLocalStorage('runesType'));\n        }\n        if (this.getValueFromLocalStorage('spellsType') !== null) {\n            this.setSpellsType(this.getValueFromLocalStorage('spellsType'));\n        }\n        if (this.getValueFromLocalStorage('otherType') !== null) {\n            this.setOtherType(this.getValueFromLocalStorage('otherType'));\n        }\n        if (this.getValueFromLocalStorage('min') !== null) {\n            this.setMin(this.getValueFromLocalStorage('min'));\n        }\n        if (this.getValueFromLocalStorage('max') !== null) {\n            this.setMax(this.getValueFromLocalStorage('max'));\n        }\n        if (this.getValueFromLocalStorage('skillCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('skillCheckbox') === 'true') {\n                this.setSkillCheckbox(true);\n            } else if (this.getValueFromLocalStorage('skillCheckbox') === 'false') {\n                this.setSkillCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('skill') !== null) {\n            this.setSkill(this.getValueFromLocalStorage('skill'));\n        }\n        if (this.getValueFromLocalStorage('attack') !== null) {\n            this.setAttack(this.getValueFromLocalStorage('attack'));\n        }\n        if (this.getValueFromLocalStorage('interval') !== null) {\n            this.setInterval(this.getValueFromLocalStorage('interval'));\n        }\n        if (this.getValueFromLocalStorage('chance') !== null) {\n            this.setChance(this.getValueFromLocalStorage('chance'));\n        }\n        if (this.getValueFromLocalStorage('lengthCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('lengthCheckbox') === 'true') {\n                this.setLengthCheckbox(true);\n            } else if (this.getValueFromLocalStorage('lengthCheckbox') === 'false') {\n                this.setLengthCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('length') !== null) {\n            this.setLength(this.getValueFromLocalStorage('length'));\n        }\n        if (this.getValueFromLocalStorage('spreadCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('spreadCheckbox') === 'true') {\n                this.setSpreadCheckbox(true);\n            } else if (this.getValueFromLocalStorage('spreadCheckbox') === 'false') {\n                this.setSpreadCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('spread') !== null) {\n            this.setSpread(this.getValueFromLocalStorage('spread'));\n        }\n        if (this.getValueFromLocalStorage('radiusCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('radiusCheckbox') === 'true') {\n                this.setRadiusCheckbox(true);\n            } else if (this.getValueFromLocalStorage('radiusCheckbox') === 'false') {\n                this.setRadiusCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('radius') !== null) {\n            this.setRadius(this.getValueFromLocalStorage('radius'));\n        }\n        if (this.getValueFromLocalStorage('poisonCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('poisonCheckbox') === 'true') {\n                this.setPoisonCheckbox(true);\n            } else if (this.getValueFromLocalStorage('poisonCheckbox') === 'false') {\n                this.setPoisonCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('poison') !== null) {\n            this.setPoison(this.getValueFromLocalStorage('poison'));\n        }\n        if (this.getValueFromLocalStorage('target') !== null) {\n            if (this.getValueFromLocalStorage('target') === 'true') {\n                this.setTarget(true);\n            } else if (this.getValueFromLocalStorage('target') === 'false') {\n                this.setTarget(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('range') !== null) {\n            this.setRange(this.getValueFromLocalStorage('range'));\n        }\n        if (this.getValueFromLocalStorage('areaeffectCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('areaeffectCheckbox') === 'true') {\n                this.setAreaeffectCheckbox(true);\n            } else if (this.getValueFromLocalStorage('areaeffectCheckbox') === 'false') {\n                this.setAreaeffectCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('areaeffect') !== null) {\n            this.setAreaeffect(this.getValueFromLocalStorage('areaeffect'));\n        }\n        if (this.getValueFromLocalStorage('shooteffectCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('shooteffectCheckbox') === 'true') {\n                this.setShooteffectCheckbox(true);\n            } else if (this.getValueFromLocalStorage('shooteffectCheckbox') === 'false') {\n                this.setShooteffectCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('shooteffect') !== null) {\n            this.setShooteffect(this.getValueFromLocalStorage('shooteffect'));\n        }\n    }\n}\n\nexport default AttacksData;\n","class DefensesData {\n    constructor() {\n        this.armor = 1;\n        this.defense = 1;\n\n        this.allDefenses = [];\n\n        this.defenseName = \"healing\";\n        this.interval = 1000;\n        this.chance = 1;\n        this.min = 1;\n        this.max = 1;\n        this.radiusCheckbox = false;\n        this.radius = 1;\n        this.areaeffect = \"redspark\";\n        this.duration = 4000;\n        this.speedChange = 300;\n\n        this.dataIndex = \"DEFENSES_\";\n    }\n\n    setArmor = (value) => {\n        this.armor = value;\n        this.setValueToLocalStorage('armor', value);\n    }\n\n    getArmor = () => {\n        return this.armor;\n    }\n\n    setDefense = (value) => {\n        this.defense = value;\n        this.setValueToLocalStorage('defense', value);\n    }\n\n    getDefense = () => {\n        return this.defense;\n    }\n\n    setDefenseName = (value) => {\n        this.defenseName = value;\n        this.setValueToLocalStorage('defenseName', value);\n    }\n\n    setIndexDefenseName = (index, value) => {\n        this.allDefenses[index].defenseName = value;\n        this.setTableToLocalStorage();\n    }\n\n    getDefenseName = () => {\n        return this.defenseName;\n    }\n\n    setInterval = (value) => {\n        this.interval = value;\n        this.setValueToLocalStorage('interval', value);\n    }\n\n    setIndexInterval = (index, value) => {\n        this.allDefenses[index].interval = value;\n        this.setTableToLocalStorage();\n    }\n\n    getInterval = () => {\n        return this.interval;\n    }\n\n    setChance = (value) => {\n        this.chance = value;\n        this.setValueToLocalStorage('chance', value);\n    }\n\n    setIndexChance = (index, value) => {\n        this.allDefenses[index].chance = value;\n        this.setTableToLocalStorage();\n    }\n\n    getChance = () => {\n        return this.chance;\n    }\n\n    setMin = (value) => {\n        this.min = value;\n        this.setValueToLocalStorage('min', value);\n    }\n\n    setIndexMin = (index, value) => {\n        this.allDefenses[index].min = value;\n        this.setTableToLocalStorage();\n    }\n\n    getMin = () => {\n        return this.min;\n    }\n\n    setMax = (value) => {\n        this.max = value;\n        this.setValueToLocalStorage('max', value);\n    }\n\n    setIndexMax = (index, value) => {\n        this.allDefenses[index].max = value;\n        this.setTableToLocalStorage();\n    }\n\n    getMax = () => {\n        return this.max;\n    }\n\n    setRadiusCheckbox = (value) => {\n        this.radiusCheckbox = value;\n        this.setValueToLocalStorage('radiusCheckbox', value);\n    }\n\n    setIndexRadiusCheckbox = (index, value) => {\n        this.allDefenses[index].radiusCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getRadiusCheckbox = () => {\n        return this.radiusCheckbox;\n    }\n\n    setRadius = (value) => {\n        this.radius = value;\n        this.setValueToLocalStorage('radius', value);\n    }\n\n    setIndexRadius = (index, value) => {\n        this.allDefenses[index].radius = value;\n        this.setTableToLocalStorage();\n    }\n\n    getRadius = () => {\n        return this.radius;\n    }\n\n    setAreaeffect = (value) => {\n        this.areaeffect = value;\n        this.setValueToLocalStorage('areaeffect', value);\n    }\n\n    setIndexAreaeffect = (index, value) => {\n        this.allDefenses[index].areaeffect = value;\n        this.setTableToLocalStorage();\n    }\n\n    getAreaeffect = () => {\n        return this.areaeffect;\n    }\n\n    setDuration = (value) => {\n        this.duration = value;\n        this.setValueToLocalStorage('duration', value);\n    }\n\n    setIndexDuration = (index, value) => {\n        this.allDefenses[index].duration = value;\n        this.setTableToLocalStorage();\n    }\n\n    getDuration = () => {\n        return this.duration;\n    }\n\n    setSpeedChange = (value) => {\n        this.speedChange = value;\n        this.setValueToLocalStorage('speedChange', value);\n    }\n\n    setIndexSpeedChange = (index, value) => {\n        this.allDefenses[index].speedChange = value;\n        this.setTableToLocalStorage();\n    }\n\n    getSpeedChange = () => {\n        return this.speedChange;\n    }\n\n    getDataIndex = () => {\n        return this.dataIndex;\n    }\n\n    //Actions\n    \n    addToDefenses = () => {\n        var allItems = {\n            defenseName: this.defenseName,\n            interval: this.interval,\n            chance: this.chance,\n            min: this.min,\n            max: this.max,\n            radiusCheckbox: this.radiusCheckbox,\n            radius: this.radius,\n            areaeffect: this.areaeffect,\n            duration: this.duration,\n            speedChange: this.speedChange\n        }\n\n        this.allDefenses.push(allItems);\n        this.setTableToLocalStorage();\n    }\n\n    deleteFromDefenses = (index) => {\n        this.allDefenses.splice(index, 1);\n        this.setTableToLocalStorage();\n    }\n\n    getFromDefenses = (index) => {\n        return this.allDefenses[index];\n    }\n\n    showDefenses = (index) => {\n        this.defenseName = this.allDefenses[index].defenseName;\n        this.interval = this.allDefenses[index].interval;\n        this.chance = this.allDefenses[index].chance;\n        this.min = this.allDefenses[index].min;\n        this.max = this.allDefenses[index].max;\n        this.radiusCheckbox = this.allDefenses[index].radiusCheckbox;\n        this.radius = this.allDefenses[index].radius;\n        this.areaeffect = this.allDefenses[index].areaeffect;\n        this.duration = this.allDefenses[index].duration;\n        this.speedChange = this.allDefenses[index].speedChange;\n    }\n\n    updateDefenses = (index) => {\n        this.allDefenses[index] = {\n            defenseName: this.defenseName,\n            interval: this.interval,\n            chance: this.chance,\n            min: this.min,\n            max: this.max,\n            radiusCheckbox: this.radiusCheckbox,\n            radius: this.radius,\n            areaeffect: this.areaeffect,\n            duration: this.duration,\n            speedChange: this.speedChange\n        }\n    }\n\n    getDefenseFromData = (index) => {\n        var defenseTable = [];\n\n        //name\n        if (this.allDefenses[index].defenseName === 'healing') {\n            defenseTable.defenseName = 'healing';\n            defenseTable.interval = this.allDefenses[index].interval;\n            defenseTable.chance = this.allDefenses[index].chance;\n            defenseTable.min = this.allDefenses[index].min;\n            defenseTable.max = this.allDefenses[index].max;\n            if (this.allDefenses[index].radiusCheckbox) {\n                defenseTable.radius = this.allDefenses[index].radius;\n            }\n            defenseTable.areaeffect = this.allDefenses[index].areaeffect;\n        } else if (this.allDefenses[index].defenseName === 'speed') {\n            defenseTable.defenseName = 'speed';\n            defenseTable.interval = this.allDefenses[index].interval;\n            defenseTable.chance = this.allDefenses[index].chance;\n            defenseTable.areaeffect = this.allDefenses[index].areaeffect;\n            defenseTable.duration = this.allDefenses[index].duration;\n            defenseTable.speedChange = this.allDefenses[index].speedChange;\n        } else if (this.allDefenses[index].defenseName === 'invisible') {\n            defenseTable.defenseName = 'invisible';\n            defenseTable.interval = this.allDefenses[index].interval;\n            defenseTable.chance = this.allDefenses[index].chance;\n            defenseTable.areaeffect = this.allDefenses[index].areaeffect;\n            defenseTable.duration = this.allDefenses[index].duration;\n        }\n\n        return defenseTable;\n    }\n\n    generateXMLdefense = (index, indentation = '\\t', firstIndentation = '') => {\n        var defenseData = this.getDefenseFromData(index);\n\n        var defense = '';\n\n        defense = defense + firstIndentation + '<defense name=\"' + defenseData.defenseName + '\" interval=\"' + defenseData.interval + '\" chance=\"' + defenseData.chance + '\"';\n        if (defenseData.defenseName === 'healing') {\n            defense = defense + ' min=\"' + defenseData.min + '\" max=\"' + defenseData.max + '\"';\n            if (defenseData.radius != null) {\n                defense = defense + ' radius=\"' + defenseData.radius + '\"';\n            }\n        } else if (defenseData.defenseName === 'speed') {\n            defense = defense + ' duration=\"' + defenseData.duration + '\" speedchange=\"' + defenseData.speedChange + '\"';\n        } else if (defenseData.defenseName === 'invisible') {\n            defense = defense + ' duration=\"' + defenseData.duration + '\"';\n        }\n        defense = defense + '>';\n\n        defense = defense + '\\n' + firstIndentation + indentation + '<attribute key=\"areaEffect\" value=\"' + defenseData.areaeffect + '\"/>';\n\n        defense = defense + '\\n' + firstIndentation + '</defense>';\n\n        return defense;\n    }\n\n    getAllXMLdefenses = (indentation = '\\t', firstIndentation = '') => {\n        var returnDefenses = [];\n\n        this.allDefenses.forEach((variable, index) => {\n            returnDefenses.push(this.generateXMLdefense(index, indentation, firstIndentation));\n        });\n\n        return returnDefenses;\n    }\n\n    //Generate XML\n\n    getXML = (indentation = '\\t', firstIndentation = '') => {\n        var fileXMLString = '';\n        \n        var allXMLdefenses = this.getAllXMLdefenses(indentation, firstIndentation);\n\n        if (allXMLdefenses.length > 0) {\n            fileXMLString += '\\n' + indentation + '<defenses armor=\"' + this.getArmor() + '\" defense=\"' + this.getDefense() + '\">';\n            \n            allXMLdefenses.forEach((variable, index) => {\n                fileXMLString += '\\n' + variable;\n            });\n\n            fileXMLString += '\\n' + indentation + '</defenses>';\n        } else {\n            fileXMLString += '\\n' + indentation + '<defenses armor=\"' + this.getArmor() + '\" defense=\"' + this.getDefense() + '\"/>';\n        }\n\n        return fileXMLString;\n    }\n\n    setDefaultValue = () => {\n        this.setArmor(1);\n        this.setDefense(1);\n\n        this.allDefenses = [];\n        this.setTableToLocalStorage();\n\n        this.setDefenseName(\"healing\");\n        this.setInterval(1000);\n        this.setChance(1);\n        this.setMin(1);\n        this.setMax(1);\n        this.setRadiusCheckbox(false);\n        this.setRadius(1);\n        this.setAreaeffect(\"redspark\");\n        this.setDuration(4000);\n        this.setSpeedChange(300);\n    }\n\n    setDefaultTableValue = () => {\n        this.setDefenseName(\"healing\");\n        this.setInterval(1000);\n        this.setChance(1);\n        this.setMin(1);\n        this.setMax(1);\n        this.setRadiusCheckbox(false);\n        this.setRadius(1);\n        this.setAreaeffect(\"redspark\");\n        this.setDuration(4000);\n        this.setSpeedChange(300);\n    }\n\n    loadXMLVariableDefenses = (variableName, variableValue) => {\n        if (variableName === 'armor') {\n            this.setArmor(variableValue);\n        } else if (variableName === 'defense') {\n            this.setDefense(variableValue);\n        }\n    }\n\n    loadXMLVariableDefense = (variableName, variableValue) => {\n        if (variableName === 'name') {\n            this.setDefenseName(variableValue);\n        } else if (variableName === 'interval') {\n            this.setInterval(variableValue);\n        } else if (variableName === 'chance') {\n            this.setChance(variableValue);\n        } else if (variableName === 'min') {\n            //TODOCheck parse errors\n            this.setMin(variableValue);\n        } else if (variableName === 'max') {\n            //TODO Check parse errors\n            this.setMax(variableValue);\n        } else if (variableName === 'radius') {\n            //TODO Check parse errors\n            this.setRadiusCheckbox(true);\n            this.setRadius(variableValue);\n        } else if (variableName === 'duration') {\n            //TODO Check parse errors\n            this.setDuration(variableValue);\n        } else if (variableName === 'speedchange') {\n            //TODO Check parse errors\n            this.setSpeedChange(variableValue);\n        }\n    }\n\n    loadXMLVariableAttribute = (variableName, variableValue) => {\n        if (variableName === 'key') {\n            if (variableValue === 'areaEffect') {\n                this.setAreaeffectCheckbox(true);\n            }\n        } else if (variableName === 'value') {\n            if (this.getAreaeffectCheckbox()) {\n                this.setAreaeffect(variableValue);\n            }\n        }\n    }\n\n    setValueToLocalStorage = (key, value) => {\n        localStorage.setItem(this.getDataIndex() + key, value);\n    }\n\n    getValueFromLocalStorage = (key) => {\n        return localStorage.getItem(this.getDataIndex() + key);\n    }\n\n    setTableToLocalStorage = () => {\n        localStorage.setItem(this.getDataIndex() + \"all\", JSON.stringify(this.allDefenses));\n    }\n\n    getTableFromLocalStorage = () => {\n        if (localStorage.getItem(this.getDataIndex() + \"all\") !== null) {\n            return JSON.parse(localStorage.getItem(this.getDataIndex() + \"all\"));\n        } else {\n            return [];\n        }\n    }\n\n    loadValuesFromLocalStorage = () => {\n        if (this.getValueFromLocalStorage('armor') !== null) {\n            this.setArmor(this.getValueFromLocalStorage('armor'));\n        }\n        if (this.getValueFromLocalStorage('defense') !== null) {\n            this.setDefense(this.getValueFromLocalStorage('defense'));\n        }\n\n        this.allDefenses = this.getTableFromLocalStorage();\n\n        if (this.getValueFromLocalStorage('defenseName') !== null) {\n            this.setDefenseName(this.getValueFromLocalStorage('defenseName'));\n        }\n        if (this.getValueFromLocalStorage('interval') !== null) {\n            this.setInterval(this.getValueFromLocalStorage('interval'));\n        }\n        if (this.getValueFromLocalStorage('chance') !== null) {\n            this.setChance(this.getValueFromLocalStorage('chance'));\n        }\n        if (this.getValueFromLocalStorage('min') !== null) {\n            this.setMin(this.getValueFromLocalStorage('min'));\n        }\n        if (this.getValueFromLocalStorage('max') !== null) {\n            this.setMax(this.getValueFromLocalStorage('max'));\n        }\n        if (this.getValueFromLocalStorage('radiusCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('radiusCheckbox') === 'true') {\n                this.setRadiusCheckbox(true);\n            } else if (this.getValueFromLocalStorage('radiusCheckbox') === 'false') {\n                this.setRadiusCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('radius') !== null) {\n            this.setRadius(this.getValueFromLocalStorage('radius'));\n        }\n        if (this.getValueFromLocalStorage('areaeffect') !== null) {\n            this.setAreaeffect(this.getValueFromLocalStorage('areaeffect'));\n        }\n        if (this.getValueFromLocalStorage('duration') !== null) {\n            this.setDuration(this.getValueFromLocalStorage('duration'));\n        }\n        if (this.getValueFromLocalStorage('speedChange') !== null) {\n            this.setSpeedChange(this.getValueFromLocalStorage('speedChange'));\n        }\n    }\n}\n\nexport default DefensesData;\n","class ElementsData {\n    constructor() {\n        this.holy = 0;\n        this.death = 0;\n        this.ice = 0;\n        this.fire = 0;\n        this.earth = 0;\n        this.energy = 0;\n        this.physical = 0;\n        this.lifeDrain = 0;\n        this.drown = 0;\n\n        this.dataIndex = \"ELEMENTS_\";\n    }\n\n    setHoly = (value) => {\n        this.holy = value;\n        this.setValueToLocalStorage('holy', value);\n    }\n\n    getHoly = () => {\n        return this.holy;\n    }\n\n    setDeath = (value) => {\n        this.death = value;\n        this.setValueToLocalStorage('death', value);\n    }\n\n    getDeath = () => {\n        return this.death;\n    }\n\n    setIce = (value) => {\n        this.ice = value;\n        this.setValueToLocalStorage('ice', value);\n    }\n\n    getIce = () => {\n        return this.ice;\n    }\n\n    setFire = (value) => {\n        this.fire = value;\n        this.setValueToLocalStorage('fire', value);\n    }\n\n    getFire = () => {\n        return this.fire;\n    }\n\n    setEarth = (value) => {\n        this.earth = value;\n        this.setValueToLocalStorage('earth', value);\n    }\n\n    getEarth = () => {\n        return this.earth;\n    }\n\n    setEnergy = (value) => {\n        this.energy = value;\n        this.setValueToLocalStorage('energy', value);\n    }\n\n    getEnergy = () => {\n        return this.energy;\n    }\n\n    setPhysical = (value) => {\n        this.physical = value;\n        this.setValueToLocalStorage('physical', value);\n    }\n\n    getPhysical = () => {\n        return this.physical;\n    }\n\n    setLifeDrain = (value) => {\n        this.lifeDrain = value;\n        this.setValueToLocalStorage('lifeDrain', value);\n    }\n\n    getLifeDrain = () => {\n        return this.lifeDrain;\n    }\n\n    setDrown = (value) => {\n        this.drown = value;\n        this.setValueToLocalStorage('drown', value);\n    }\n\n    getDrown = () => {\n        return this.drown;\n    }\n\n    getDataIndex = () => {\n        return this.dataIndex;\n    }\n\n    //Generate XML\n\n    getXML = (indentation = '\\t') => {\n        var fileXMLString = '';\n\n        fileXMLString += '\\n' + indentation + '<elements>';\n        if (this.getHoly() !== 0) {\n            fileXMLString += '\\n' + indentation + indentation + '<element holyPercent=\"' + this.getHoly() + '\"/>';\n        }\n        if (this.getDeath() !== 0) {\n            fileXMLString += '\\n' + indentation + indentation + '<element deathPercent=\"' + this.getDeath() + '\"/>';\n        }\n        if (this.getIce() !== 0) {\n            fileXMLString += '\\n' + indentation + indentation + '<element icePercent=\"' + this.getIce() + '\"/>';\n        }\n        if (this.getFire() !== 0) {\n            fileXMLString += '\\n' + indentation + indentation + '<element firePercent=\"' + this.getFire() + '\"/>';\n        }\n        if (this.getEarth() !== 0) {\n            fileXMLString += '\\n' + indentation + indentation + '<element earthPercent=\"' + this.getEarth() + '\"/>';\n        }\n        if (this.getEnergy() !== 0) {\n            fileXMLString += '\\n' + indentation + indentation + '<element energyPercent=\"' + this.getEnergy() + '\"/>';\n        }\n        if (this.getPhysical() !== 0) {\n            fileXMLString += '\\n' + indentation + indentation + '<element physicalPercent=\"' + this.getPhysical() + '\"/>';\n        }\n        if (this.getLifeDrain() !== 0) {\n            fileXMLString += '\\n' + indentation + indentation + '<element lifedrainPercent=\"' + this.getLifeDrain() + '\"/>';\n        }\n        if (this.getDrown() !== 0) {\n            fileXMLString += '\\n' + indentation + indentation + '<element drownPercent=\"' + this.getDrown() + '\"/>';\n        }\n        fileXMLString += '\\n' + indentation + '</elements>';\n\n        return fileXMLString;\n    }\n\n    setDefaultValue = () => {\n        this.setHoly(0);\n        this.setDeath(0);\n        this.setIce(0);\n        this.setFire(0);\n        this.setEarth(0);\n        this.setEnergy(0);\n        this.setPhysical(0);\n        this.setLifeDrain(0);\n        this.setDrown(0);\n    }\n\n    loadXMLVariableElement = (variableName, variableValue) => {\n        if (variableName === 'holyPercent') {\n            this.setHoly(variableValue);\n        } else if (variableName === 'deathPercent') {\n            this.setDeath(variableValue);\n        } else if (variableName === 'icePercent') {\n            this.setIce(variableValue);\n        } else if (variableName === 'firePercent') {\n            this.setFire(variableValue);\n        } else if (variableName === 'earthPercent') {\n            this.setEarth(variableValue);\n        } else if (variableName === 'energyPercent') {\n            this.setEnergy(variableValue);\n        } else if (variableName === 'physicalPercent') {\n            this.setPhysical(variableValue);\n        } else if (variableName === 'lifedrainPercent') {\n            this.setLifeDrain(variableValue);\n        } else if (variableName === 'drownPercent') {\n            this.setDrown(variableValue);\n        }\n    }\n\n    setValueToLocalStorage = (key, value) => {\n        localStorage.setItem(this.getDataIndex() + key, value);\n    }\n\n    getValueFromLocalStorage = (key) => {\n        return localStorage.getItem(this.getDataIndex() + key);\n    }\n\n    loadValuesFromLocalStorage = () => {\n        if (this.getValueFromLocalStorage('holy') !== null) {\n            this.setHoly(this.getValueFromLocalStorage('holy'));\n        }\n        if (this.getValueFromLocalStorage('death') !== null) {\n            this.setDeath(this.getValueFromLocalStorage('death'));\n        }\n        if (this.getValueFromLocalStorage('ice') !== null) {\n            this.setIce(this.getValueFromLocalStorage('ice'));\n        }\n        if (this.getValueFromLocalStorage('fire') !== null) {\n            this.setFire(this.getValueFromLocalStorage('fire'));\n        }\n        if (this.getValueFromLocalStorage('earth') !== null) {\n            this.setEarth(this.getValueFromLocalStorage('earth'));\n        }\n        if (this.getValueFromLocalStorage('energy') !== null) {\n            this.setEnergy(this.getValueFromLocalStorage('energy'));\n        }\n        if (this.getValueFromLocalStorage('physical') !== null) {\n            this.setPhysical(this.getValueFromLocalStorage('physical'));\n        }\n        if (this.getValueFromLocalStorage('lifeDrain') !== null) {\n            this.setLifeDrain(this.getValueFromLocalStorage('lifeDrain'));\n        }\n        if (this.getValueFromLocalStorage('drown') !== null) {\n            this.setDrown(this.getValueFromLocalStorage('drown'));\n        }\n    }\n}\n\nexport default ElementsData;\n","class ImmunitiesData {\n    constructor() {\n        this.holy = false;\n        this.death = false;\n        this.ice = false;\n        this.fire = false;\n        this.earth = false;\n        this.energy = false;\n        this.physical = false;\n        this.lifeDrain = false;\n        this.drown = false;\n        this.paralyze = false;\n        this.drunk = false;\n        this.invisible = false;\n        this.outfit = false;\n\n        this.dataIndex = \"IMMUNITIES_\";\n    }\n\n    setHoly = (value) => {\n        this.holy = value;\n        this.setValueToLocalStorage('holy', value);\n    }\n\n    getHoly = () => {\n        return this.holy;\n    }\n\n    setDeath = (value) => {\n        this.death = value;\n        this.setValueToLocalStorage('death', value);\n    }\n\n    getDeath = () => {\n        return this.death;\n    }\n\n    setIce = (value) => {\n        this.ice = value;\n        this.setValueToLocalStorage('ice', value);\n    }\n\n    getIce = () => {\n        return this.ice;\n    }\n\n    setFire = (value) => {\n        this.fire = value;\n        this.setValueToLocalStorage('fire', value);\n    }\n\n    getFire = () => {\n        return this.fire;\n    }\n\n    setEarth = (value) => {\n        this.earth = value;\n        this.setValueToLocalStorage('earth', value);\n    }\n\n    getEarth = () => {\n        return this.earth;\n    }\n\n    setEnergy = (value) => {\n        this.energy = value;\n        this.setValueToLocalStorage('energy', value);\n    }\n\n    getEnergy = () => {\n        return this.energy;\n    }\n\n    setPhysical = (value) => {\n        this.physical = value;\n        this.setValueToLocalStorage('physical', value);\n    }\n\n    getPhysical = () => {\n        return this.physical;\n    }\n\n    setLifeDrain = (value) => {\n        this.lifeDrain = value;\n        this.setValueToLocalStorage('lifeDrain', value);\n    }\n\n    getLifeDrain = () => {\n        return this.lifeDrain;\n    }\n\n    setDrown = (value) => {\n        this.drown = value;\n        this.setValueToLocalStorage('drown', value);\n    }\n\n    getDrown = () => {\n        return this.drown;\n    }\n\n    setParalyze = (value) => {\n        this.paralyze = value;\n        this.setValueToLocalStorage('paralyze', value);\n    }\n\n    getParalyze = () => {\n        return this.paralyze;\n    }\n\n    setDrunk = (value) => {\n        this.drunk = value;\n        this.setValueToLocalStorage('drunk', value);\n    }\n\n    getDrunk = () => {\n        return this.drunk;\n    }\n\n    setInvisible = (value) => {\n        this.invisible = value;\n        this.setValueToLocalStorage('invisible', value);\n    }\n\n    getInvisible = () => {\n        return this.invisible;\n    }\n\n    setOutfit = (value) => {\n        this.outfit = value;\n        this.setValueToLocalStorage('outfit', value);\n    }\n\n    getOutfit = () => {\n        return this.outfit;\n    }\n\n    getDataIndex = () => {\n        return this.dataIndex;\n    }\n\n    //Generate XML\n\n    getXML = (indentation = '\\t') => {\n        var fileXMLString = '';\n\n        fileXMLString = fileXMLString + '\\n' + indentation + '<immunities>';\n        if (this.getHoly()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity holy=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity holy=\"0\"/>';\n        }\n        if (this.getDeath()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity death=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity death=\"0\"/>';\n        }\n        if (this.getIce()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity ice=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity ice=\"0\"/>';\n        }\n        if (this.getFire()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity fire=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity fire=\"0\"/>';\n        }\n        if (this.getEarth()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity earth=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity earth=\"0\"/>';\n        }\n        if (this.getEnergy()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity energy=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity energy=\"0\"/>';\n        }\n        if (this.getPhysical()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity physical=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity physical=\"0\"/>';\n        }\n        if (this.getLifeDrain()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity lifedrain=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity lifedrain=\"0\"/>';\n        }\n        if (this.getDrown()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity drown=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity drown=\"0\"/>';\n        }\n        if (this.getParalyze()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity paralyze=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity paralyze=\"0\"/>';\n        }\n        if (this.getDrunk()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity drunk=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity drunk=\"0\"/>';\n        }\n        if (this.getInvisible()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity invisible=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity invisible=\"0\"/>';\n        }\n        if (this.getOutfit()) {\n            fileXMLString += '\\n' + indentation + indentation + '<immunity outfit=\"1\"/>';\n        //} else {\n        //  fileXMLString += '\\n' + indentation + indentation + '<immunity outfit=\"0\"/>';\n        }\n        fileXMLString += '\\n' + indentation + '</immunities>';\n\n        return fileXMLString;\n    }\n\n    setDefaultValue = () => {\n        this.setHoly(false);\n        this.setDeath(false);\n        this.setIce(false);\n        this.setFire(false);\n        this.setEarth(false);\n        this.setEnergy(false);\n        this.setPhysical(false);\n        this.setLifeDrain(false);\n        this.setDrown(false);\n        this.setParalyze(false);\n        this.setDrunk(false);\n        this.setInvisible(false);\n        this.setOutfit(false);\n    }\n\n    loadXMLVariableImmunity = (variableName, variableValue) => {\n        if (variableName === 'holy') {\n            if (variableValue === '1') {\n                this.setHoly(true);\n            } else {\n                this.setHoly(false);\n            }\n        } else if (variableName === 'death') {\n            if (variableValue === '1') {\n                this.setDeath(true);\n            } else {\n                this.setDeath(false);\n            }\n        } else if (variableName === 'ice') {\n            if (variableValue === '1') {\n                this.setIce(true);\n            } else {\n                this.setIce(false);\n            }\n        } else if (variableName === 'fire') {\n            if (variableValue === '1') {\n                this.setFire(true);\n            } else {\n                this.setFire(false);\n            }\n        } else if (variableName === 'earth') {\n            if (variableValue === '1') {\n                this.setEarth(true);\n            } else {\n                this.setEarth(false);\n            }\n        } else if (variableName === 'energy') {\n            if (variableValue === '1') {\n                this.setEnergy(true);\n            } else {\n                this.setEnergy(false);\n            }\n        } else if (variableName === 'physical') {\n            if (variableValue === '1') {\n                this.setPhysical(true);\n            } else {\n                this.setPhysical(false);\n            }\n        } else if (variableName === 'lifedrain') {\n            if (variableValue === '1') {\n                this.setLifeDrain(true);\n            } else {\n                this.setLifeDrain(false);\n            }\n        } else if (variableName === 'drown') {\n            if (variableValue === '1') {\n                this.setDrown(true);\n            } else {\n                this.setDrown(false);\n            }\n        } else if (variableName === 'paralyze') {\n            if (variableValue === '1') {\n                this.setParalyze(true);\n            } else {\n                this.setParalyze(false);\n            }\n        } else if (variableName === 'drunk') {\n            if (variableValue === '1') {\n                this.setDrunk(true);\n            } else {\n                this.setDrunk(false);\n            }\n        } else if (variableName === 'invisible') {\n            if (variableValue === '1') {\n                this.setInvisible(true);\n            } else {\n                this.setInvisible(false);\n            }\n        } else if (variableName === 'outfit') {\n            if (variableValue === '1') {\n                this.setOutfit(true);\n            } else {\n                this.setOutfit(false);\n            }\n        }\n    }\n\n    setValueToLocalStorage = (key, value) => {\n        localStorage.setItem(this.getDataIndex() + key, value);\n    }\n\n    getValueFromLocalStorage = (key) => {\n        return localStorage.getItem(this.getDataIndex() + key);\n    }\n\n    loadValuesFromLocalStorage = () => {\n        if (this.getValueFromLocalStorage('holy') !== null) {\n            if (this.getValueFromLocalStorage('holy') === 'true') {\n                this.setHoly(true);\n            } else if (this.getValueFromLocalStorage('holy') === 'false') {\n                this.setHoly(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('death') !== null) {\n            if (this.getValueFromLocalStorage('death') === 'true') {\n                this.setDeath(true);\n            } else if (this.getValueFromLocalStorage('death') === 'false') {\n                this.setDeath(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('ice') !== null) {\n            if (this.getValueFromLocalStorage('ice') === 'true') {\n                this.setIce(true);\n            } else if (this.getValueFromLocalStorage('ice') === 'false') {\n                this.setIce(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('fire') !== null) {\n            if (this.getValueFromLocalStorage('fire') === 'true') {\n                this.setFire(true);\n            } else if (this.getValueFromLocalStorage('fire') === 'false') {\n                this.setFire(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('earth') !== null) {\n            if (this.getValueFromLocalStorage('earth') === 'true') {\n                this.setEarth(true);\n            } else if (this.getValueFromLocalStorage('earth') === 'false') {\n                this.setEarth(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('energy') !== null) {\n            if (this.getValueFromLocalStorage('energy') === 'true') {\n                this.setEnergy(true);\n            } else if (this.getValueFromLocalStorage('energy') === 'false') {\n                this.setEnergy(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('physical') !== null) {\n            if (this.getValueFromLocalStorage('physical') === 'true') {\n                this.setPhysical(true);\n            } else if (this.getValueFromLocalStorage('physical') === 'false') {\n                this.setPhysical(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('lifeDrain') !== null) {\n            if (this.getValueFromLocalStorage('lifeDrain') === 'true') {\n                this.setLifeDrain(true);\n            } else if (this.getValueFromLocalStorage('lifeDrain') === 'false') {\n                this.setLifeDrain(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('drown') !== null) {\n            if (this.getValueFromLocalStorage('drown') === 'true') {\n                this.setDrown(true);\n            } else if (this.getValueFromLocalStorage('drown') === 'false') {\n                this.setDrown(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('paralyze') !== null) {\n            if (this.getValueFromLocalStorage('paralyze') === 'true') {\n                this.setParalyze(true);\n            } else if (this.getValueFromLocalStorage('paralyze') === 'false') {\n                this.setParalyze(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('drunk') !== null) {\n            if (this.getValueFromLocalStorage('drunk') === 'true') {\n                this.setDrunk(true);\n            } else if (this.getValueFromLocalStorage('drunk') === 'false') {\n                this.setDrunk(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('invisible') !== null) {\n            if (this.getValueFromLocalStorage('invisible') === 'true') {\n                this.setInvisible(true);\n            } else if (this.getValueFromLocalStorage('invisible') === 'false') {\n                this.setInvisible(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('outfit') !== null) {\n            if (this.getValueFromLocalStorage('outfit') === 'true') {\n                this.setOutfit(true);\n            } else if (this.getValueFromLocalStorage('outfit') === 'false') {\n                this.setOutfit(false);\n            }\n        }\n    }\n}\n\nexport default ImmunitiesData;\n","class SummonsData {\n    constructor() {\n        this.maxSummons = 1;\n\n        this.allSummons = [];\n\n        this.summonName = '';\n        this.interval = 1000;\n        this.chance = 1;\n        this.max = 1;\n\n        this.dataIndex = \"SUMMONS_\";\n    }\n\n    setMaxSummons = (value) => {\n        this.maxSummons = value;\n        this.setValueToLocalStorage('maxSummons', value);\n    }\n\n    getMaxSummons = () => {\n        return this.maxSummons;\n    }\n\n    setSummonName = (value) => {\n        this.summonName = value;\n        this.setValueToLocalStorage('summonName', value);\n    }\n\n    setIndexSummonName = (index, value) => {\n        this.allSummons[index].summonName = value;\n        this.setTableToLocalStorage();\n    }\n\n    getSummonName = () => {\n        return this.summonName;\n    }\n\n    setInterval = (value) => {\n        this.interval = value;\n        this.setValueToLocalStorage('interval', value);\n    }\n\n    setIndexInterval = (index, value) => {\n        this.allSummons[index].interval = value;\n        this.setTableToLocalStorage();\n    }\n\n    getInterval = () => {\n        return this.interval;\n    }\n\n    setChance = (value) => {\n        this.chance = value;\n        this.setValueToLocalStorage('chance', value);\n    }\n\n    setIndexChance = (index, value) => {\n        this.allSummons[index].chance = value;\n        this.setTableToLocalStorage();\n    }\n\n    getChance = () => {\n        return this.chance;\n    }\n\n    setMax = (value) => {\n        this.max = value;\n        this.setValueToLocalStorage('max', value);\n    }\n\n    setIndexMax = (index, value) => {\n        this.allSummons[index].max = value;\n        this.setTableToLocalStorage();\n    }\n\n    getMax = () => {\n        return this.max;\n    }\n\n    getDataIndex = () => {\n        return this.dataIndex;\n    }\n\n    //Actions\n\n    addToSummons = () => {\n        var allItems = {\n            summonName: this.summonName,\n            interval: this.interval,\n            chance: this.chance,\n            max: this.max\n        }\n\n        this.allSummons.push(allItems);\n        this.setTableToLocalStorage();\n    }\n\n    deleteFromSummons = (index) => {\n        this.allSummons.splice(index, 1);\n        this.setTableToLocalStorage();\n    }\n\n    getFromSummons = (index) => {\n        return this.allSummons[index];\n    }\n\n    showSummons = (index) => {\n        this.summonName = this.allSummons[index].summonName;\n        this.interval = this.allSummons[index].interval;\n        this.chance = this.allSummons[index].chance;\n        this.max = this.allSummons[index].max;\n    }\n\n    updateSummons = (index) => {\n        this.allSummons[index] = {\n            summonName: this.summonName,\n            interval: this.interval,\n            chance: this.chance,\n            max: this.max\n        }\n    }\n\n    getSummonFromData = (index) => {\n        var summonTable = [];\n\n        summonTable.summonName = this.allSummons[index].summonName;\n        summonTable.interval = this.allSummons[index].interval;\n        summonTable.chance = this.allSummons[index].chance;\n        summonTable.max = this.allSummons[index].max;\n\n        return summonTable;\n    }\n\n    generateXMLSummon = (index, indentation = '\\t', firstIndentation = '') => {\n        var summonData = this.getSummonFromData(index);\n\n        var summon = '';\n        \n        summon += firstIndentation + '<summon name=\"' + summonData.summonName + '\" interval=\"' + summonData.interval + '\" chance=\"' + summonData.chance + '\" max=\"' + summonData.max + '\"/>';\n\n        return summon;\n    }\n\n    getAllXMLSummons = (indentation = '\\t', firstIndentation = '') => {\n        var returnSummons = [];\n\n        this.allSummons.forEach((variable, index) => {\n            returnSummons.push(this.generateXMLSummon(index, indentation, firstIndentation));\n        });\n\n        return returnSummons;\n    }\n\n    //Generate XML\n\n    getXML = (indentation = '\\t', firstIndentation = '') => {\n        var fileXMLString = '';\n\n        var allXMLsummons = this.getAllXMLSummons(indentation, firstIndentation);\n\n        if (allXMLsummons.length > 0) {\n            fileXMLString += '\\n' + indentation + '<summons maxSummons=\"' + this.getMaxSummons() + '\">';\n            allXMLsummons.forEach((variable, index) => {\n                fileXMLString += '\\n' + variable;\n            });\n            fileXMLString += '\\n' + indentation + '</summons>';\n        }\n\n        return fileXMLString;\n    }\n\n    setDefaultValue = () => {\n        this.setMaxSummons(1);\n\n        this.allSummons = [];\n        this.setTableToLocalStorage();\n\n        this.setSummonName('');\n        this.setInterval(1000);\n        this.setChance(1);\n        this.setMax(1);\n    }\n\n    setDefaultTableValue = () => {\n        this.setSummonName('');\n        this.setInterval(1000);\n        this.setChance(1);\n        this.setMax(1);\n    }\n\n    loadXMLVariableSummons = (variableName, variableValue) => {\n        if (variableName === 'maxSummons') {\n            this.setMaxSummons(variableValue);\n        }\n    }\n\n    loadXMLVariableSummon = (variableName, variableValue) => {\n        if (variableName === 'name') {\n            this.setSummonName(variableValue);\n        } else if (variableName === 'interval') {\n            this.setInterval(variableValue);\n        } else if (variableName === 'chance') {\n            this.setChance(variableValue);\n        } else if (variableName === 'max') {\n            this.setMax(variableValue);\n        }\n    }\n\n    setValueToLocalStorage = (key, value) => {\n        localStorage.setItem(this.getDataIndex() + key, value);\n    }\n\n    getValueFromLocalStorage = (key) => {\n        return localStorage.getItem(this.getDataIndex() + key);\n    }\n\n    setTableToLocalStorage = () => {\n        localStorage.setItem(this.getDataIndex() + \"all\", JSON.stringify(this.allSummons));\n    }\n\n    getTableFromLocalStorage = () => {\n        if (localStorage.getItem(this.getDataIndex() + \"all\") !== null) {\n            return JSON.parse(localStorage.getItem(this.getDataIndex() + \"all\"));\n        } else {\n            return [];\n        }\n    }\n\n    loadValuesFromLocalStorage = () => {\n        if (this.getValueFromLocalStorage('maxSummons') !== null) {\n            this.setMaxSummons(this.getValueFromLocalStorage('maxSummons'));\n        }\n\n        this.allSummons = this.getTableFromLocalStorage();\n\n        if (this.getValueFromLocalStorage('summonName') !== null) {\n            this.setSummonName(this.getValueFromLocalStorage('summonName'));\n        }\n        if (this.getValueFromLocalStorage('interval') !== null) {\n            this.setInterval(this.getValueFromLocalStorage('interval'));\n        }\n        if (this.getValueFromLocalStorage('chance') !== null) {\n            this.setChance(this.getValueFromLocalStorage('chance'));\n        }\n        if (this.getValueFromLocalStorage('max') !== null) {\n            this.setMax(this.getValueFromLocalStorage('max'));\n        }\n    }\n}\n\nexport default SummonsData;\n","class VoicesData {\n    constructor() {\n        this.interval = 1000;\n        this.chance = 1;\n\n        this.allVoices = [];\n\n        this.sentence = \"\";\n        this.yell = false;\n\n        this.dataIndex = \"VOICES_\";\n    }\n\n    setInterval = (value) => {\n        this.interval = value;\n        this.setValueToLocalStorage('interval', value);\n    }\n\n    getInterval = () => {\n        return this.interval;\n    }\n\n    setChance = (value) => {\n        this.chance = value;\n        this.setValueToLocalStorage('chance', value);\n    }\n\n    getChance = () => {\n        return this.chance;\n    }\n\n    setSentence = (value) => {\n        this.sentence = value;\n        this.setValueToLocalStorage('sentence', value);\n    }\n\n    setIndexSentence = (index, value) => {\n        this.allVoices[index].sentence = value;\n        this.setTableToLocalStorage();\n    }\n\n    getSentence = () => {\n        return this.sentence;\n    }\n\n    setYell = (value) => {\n        this.yell = value;\n        this.setValueToLocalStorage('yell', value);\n    }\n\n    setIndexYell = (index, value) => {\n        this.allVoices[index].yell = value;\n        this.setTableToLocalStorage();\n    }\n\n    getYell = () => {\n        return this.yell;\n    }\n\n    getDataIndex = () => {\n        return this.dataIndex;\n    }\n\n    //Actions\n\n    addToVoices = () => {\n        var allItems = {\n            sentence: this.sentence,\n            yell: this.yell\n        }\n\n        this.allVoices.push(allItems);\n        this.setTableToLocalStorage();\n    }\n\n    deleteFromVoices = (index) => {\n        this.allVoices.splice(index, 1);\n        this.setTableToLocalStorage();\n    }\n\n    getFromVoices = (index) => {\n        return this.allVoices[index];\n    }\n\n    showVoices = (index) => {\n        this.sentence = this.allVoices[index].sentence;\n        this.yell = this.allVoices[index].yell;\n    }\n\n    updateVoices = (index) => {\n        this.allVoices[index] = {\n            sentence: this.sentence,\n            yell: this.yell\n        }\n    }\n\n    getVoiceFromData = (index) => {\n        var voiceTable = {}\n\n        voiceTable.sentence = this.allVoices[index].sentence;\n        voiceTable.yell = this.allVoices[index].yell;\n\n        return voiceTable\n    }\n\n    generateXMLVoice = (index, indentation = '\\t', firstIndentation = '') => {\n        var voiceData = this.getVoiceFromData(index);\n\n        var voice = '';\n\n        voice = voice + firstIndentation + '<voice sentence=\"' + voiceData.sentence + '\"';\n        if (voiceData.yell) {\n            voice = voice + ' yell=\"1\"/>'\n        } else {\n            voice = voice + '/>'\n        }\n\n        return voice;\n    }\n\n    getAllXMLVoices = (indentation = '\\t', firstIndentation = '') => {\n        var returnVoices = [];\n\n        this.allVoices.forEach((variable, index) => {\n            returnVoices.push(this.generateXMLVoice(index, indentation, firstIndentation));\n        });\n\n        return returnVoices;\n    }\n\n    //Generate XML\n\n    getXML = (indentation = '\\t', firstIndentation = '') => {\n        var fileXMLString = '';\n\n        var allXMLvoices = this.getAllXMLVoices(indentation, firstIndentation);\n\n        if (allXMLvoices.length > 0) {\n            fileXMLString += '\\n' + indentation + '<voices interval=\"' + this.getInterval() + '\" chance=\"' + this.getChance() + '\">';\n            allXMLvoices.forEach((variable, index) => {\n                fileXMLString += '\\n' + variable;\n            });\n            fileXMLString += '\\n' + indentation + '</voices>';\n        }\n\n        return fileXMLString;\n    }\n\n    setDefaultValue = () => {\n        this.setInterval(1000);\n        this.setChance(1);\n\n        this.allVoices = [];\n        this.setTableToLocalStorage();\n\n        this.setSentence(\"\");\n        this.setYell(false);\n    }\n\n    setDefaultTableValue = () => {\n        this.setSentence(\"\");\n        this.setYell(false);\n    }\n\n    loadXMLVariableVoices = (variableName, variableValue) => {\n        if (variableName === 'interval') {\n            this.setInterval(variableValue);\n        } else if (variableName === 'chance') {\n            this.setChance(variableValue);\n        }\n    }\n\n    loadXMLVariableVoice = (variableName, variableValue) => {\n        if (variableName === 'sentence') {\n            this.setSentence(variableValue);\n        } else if (variableName === 'yell') {\n            this.setYell(true);\n        }\n    }\n\n    setValueToLocalStorage = (key, value) => {\n        localStorage.setItem(this.getDataIndex() + key, value);\n    }\n\n    getValueFromLocalStorage = (key) => {\n        return localStorage.getItem(this.getDataIndex() + key);\n    }\n\n    setTableToLocalStorage = () => {\n        localStorage.setItem(this.getDataIndex() + \"all\", JSON.stringify(this.allVoices));\n    }\n\n    getTableFromLocalStorage = () => {\n        if (localStorage.getItem(this.getDataIndex() + \"all\") !== null) {\n            return JSON.parse(localStorage.getItem(this.getDataIndex() + \"all\"));\n        } else {\n            return [];\n        }\n    }\n\n    loadValuesFromLocalStorage = () => {\n        if (this.getValueFromLocalStorage('interval') !== null) {\n            this.setInterval(this.getValueFromLocalStorage('interval'));\n        }\n        if (this.getValueFromLocalStorage('chance') !== null) {\n            this.setChance(this.getValueFromLocalStorage('chance'));\n        }\n\n        this.allVoices = this.getTableFromLocalStorage();\n\n        if (this.getValueFromLocalStorage('sentence') !== null) {\n            this.setSentence(this.getValueFromLocalStorage('sentence'));\n        }\n        if (this.getValueFromLocalStorage('yell') !== null) {\n            if (this.getValueFromLocalStorage('yell') === 'true') {\n                this.setYell(true);\n            } else if (this.getValueFromLocalStorage('yell') === 'false') {\n                this.setYell(false);\n            }\n        }\n    }\n}\n\nexport default VoicesData;\n","class LootData {\n    constructor() {\n        this.allLoot = [];\n\n        this.id = 1;\n        this.nameCheckbox = false;\n        this.name = '';\n        this.chance = 1;\n        this.countMaxCheckbox = false;\n        this.countMax = 1;\n        this.subtypeCheckbox = false;\n        this.subtype = 'water';\n        this.actionIdCheckbox = false;\n        this.actionId = 1;\n        this.uniqueIdCheckbox = false;\n        this.uniqueId = 1;\n        this.textCheckbox = false;\n        this.text = '';\n        this.commentCheckbox = false;\n        this.comment = '';\n\n        this.dataIndex = \"LOOT_\";\n    }\n\n    setId = (value) => {\n        this.id = value;\n        this.setValueToLocalStorage('id', value);\n    }\n\n    setIndexId = (index, value) => {\n        this.allLoot[index].id = value;\n        this.setTableToLocalStorage();\n    }\n\n    getId = () => {\n        return this.id;\n    }\n\n    setNameCheckbox = (value) => {\n        this.nameCheckbox = value;\n        this.setValueToLocalStorage('nameCheckbox', value);\n    }\n\n    setIndexNameCheckbox = (index, value) => {\n        this.allLoot[index].nameCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getNameCheckbox = () => {\n        return this.nameCheckbox;\n    }\n\n    setName = (value) => {\n        this.name = value;\n        this.setValueToLocalStorage('name', value);\n    }\n\n    setIndexName = (index, value) => {\n        this.allLoot[index].name = value;\n        this.setTableToLocalStorage();\n    }\n\n    getName = () => {\n        return this.name;\n    }\n\n    setChance = (value) => {\n        this.chance = value;\n        this.setValueToLocalStorage('chance', value);\n    }\n\n    setIndexChance = (index, value) => {\n        this.allLoot[index].chance = value;\n        this.setTableToLocalStorage();\n    }\n\n    getChance = () => {\n        return this.chance;\n    }\n\n    setCountMaxCheckbox = (value) => {\n        this.countMaxCheckbox = value;\n        this.setValueToLocalStorage('countMaxCheckbox', value);\n    }\n\n    setIndexCountMaxCheckbox = (index, value) => {\n        this.allLoot[index].countMaxCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getCountMaxCheckbox = () => {\n        return this.countMaxCheckbox;\n    }\n\n    setCountMax = (value) => {\n        this.countMax = value;\n        this.setValueToLocalStorage('countMax', value);\n    }\n\n    setIndexCountMax = (index, value) => {\n        this.allLoot[index].countMax = value;\n        this.setTableToLocalStorage();\n    }\n\n    getCountMax = () => {\n        return this.countMax;\n    }\n\n    setSubtypeCheckbox = (value) => {\n        this.subtypeCheckbox = value;\n        this.setValueToLocalStorage('subtypeCheckbox', value);\n    }\n\n    setIndexSubtypeCheckbox = (index, value) => {\n        this.allLoot[index].subtypeCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getSubtypeCheckbox = () => {\n        return this.subtypeCheckbox;\n    }\n\n    setSubtype = (value) => {\n        this.subtype = value;\n        this.setValueToLocalStorage('subtype', value);\n    }\n\n    setIndexSubtype = (index, value) => {\n        this.allLoot[index].subtype = value;\n        this.setTableToLocalStorage();\n    }\n\n    getSubtype = () => {\n        return this.subtype;\n    }\n\n    setActionIdCheckbox = (value) => {\n        this.actionIdCheckbox = value;\n        this.setValueToLocalStorage('actionIdCheckbox', value);\n    }\n\n    setIndexActionIdCheckbox = (index, value) => {\n        this.allLoot[index].actionIdCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getActionIdCheckbox = () => {\n        return this.actionIdCheckbox;\n    }\n\n    setActionId = (value) => {\n        this.actionId = value;\n        this.setValueToLocalStorage('actionId', value);\n    }\n\n    setIndexActionId = (index, value) => {\n        this.allLoot[index].actionId = value;\n        this.setTableToLocalStorage();\n    }\n\n    getActionId = () => {\n        return this.actionId;\n    }\n\n    setUniqueIdCheckbox = (value) => {\n        this.uniqueIdCheckbox = value;\n        this.setValueToLocalStorage('uniqueIdCheckbox', value);\n    }\n\n    setIndexUniqueIdCheckbox = (index, value) => {\n        this.allLoot[index].uniqueIdCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getUniqueIdCheckbox = () => {\n        return this.uniqueIdCheckbox;\n    }\n\n    setUniqueId = (value) => {\n        this.uniqueId = value;\n        this.setValueToLocalStorage('uniqueId', value);\n    }\n\n    setIndexUniqueId = (index, value) => {\n        this.allLoot[index].uniqueId = value;\n        this.setTableToLocalStorage();\n    }\n\n    getUniqueId = () => {\n        return this.uniqueId;\n    }\n\n    setTextCheckbox = (value) => {\n        this.textCheckbox = value;\n        this.setValueToLocalStorage('textCheckbox', value);\n    }\n\n    setIndexTextCheckbox = (index, value) => {\n        this.allLoot[index].textCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getTextCheckbox = () => {\n        return this.textCheckbox;\n    }\n\n    setText = (value) => {\n        this.text = value;\n        this.setValueToLocalStorage('text', value);\n    }\n\n    setIndexText = (index, value) => {\n        this.allLoot[index].text = value;\n        this.setTableToLocalStorage();\n    }\n\n    getText = () => {\n        return this.text;\n    }\n\n    setCommentCheckbox = (value) => {\n        this.commentCheckbox = value;\n        this.setValueToLocalStorage('commentCheckbox', value);\n    }\n\n    setIndexCommentCheckbox = (index, value) => {\n        this.allLoot[index].commentCheckbox = value;\n        this.setTableToLocalStorage();\n    }\n\n    getCommentCheckbox = () => {\n        return this.commentCheckbox;\n    }\n\n    setComment = (value) => {\n        this.comment = value;\n        this.setValueToLocalStorage('comment', value);\n    }\n\n    setIndexComment = (index, value) => {\n        this.allLoot[index].comment = value;\n        this.setTableToLocalStorage();\n    }\n\n    getComment = () => {\n        return this.comment;\n    }\n\n    getDataIndex = () => {\n        return this.dataIndex;\n    }\n\n    addToLoot = () => {\n        var allItems = {\n            id: this.id,\n            nameCheckbox: this.nameCheckbox,\n            name: this.name,\n            chance: this.chance,\n            countMaxCheckbox: this.countMaxCheckbox,\n            countMax: this.countMax,\n            subtypeCheckbox: this.subtypeCheckbox,\n            subtype: this.subtype,\n            actionIdCheckbox: this.actionIdCheckbox,\n            actionId: this.actionId,\n            uniqueIdCheckbox: this.uniqueIdCheckbox,\n            uniqueId: this.uniqueId,\n            textCheckbox: this.textCheckbox,\n            text: this.text,\n            commentCheckbox: this.commentCheckbox,\n            comment: this.comment\n        }\n\n        this.allLoot.push(allItems);\n        this.setTableToLocalStorage();\n    }\n\n    deleteFromLoot = (index) => {\n        this.allLoot.splice(index, 1);\n        this.setTableToLocalStorage();\n    }\n\n    getFromLoot = (index) => {\n        return this.allLoot[index];\n    }\n\n    showLoot = (index) => {\n        this.id = this.allLoot[index].id;\n        this.nameCheckbox = this.allLoot[index].nameCheckbox;\n        this.name = this.allLoot[index].name;\n        this.chance = this.allLoot[index].chance;\n        this.countMaxCheckbox = this.allLoot[index].countMaxCheckbox;\n        this.countMax = this.allLoot[index].countMax;\n        this.subtypeCheckbox = this.allLoot[index].subtypeCheckbox;\n        this.subtype = this.allLoot[index].subtype;\n        this.actionIdCheckbox = this.allLoot[index].actionIdCheckbox;\n        this.actionId = this.allLoot[index].actionId;\n        this.uniqueIdCheckbox = this.allLoot[index].uniqueIdCheckbox;\n        this.uniqueId = this.allLoot[index].uniqueId;\n        this.textCheckbox = this.allLoot[index].textCheckbox;\n        this.text = this.allLoot[index].text;\n        this.commentCheckbox = this.allLoot[index].commentCheckbox;\n        this.comment = this.allLoot[index].comment;\n    }\n\n    updateLoot = (index) => {\n        this.allLoot[index] = {\n            id: this.id,\n            nameCheckbox: this.nameCheckbox,\n            name: this.name,\n            chance: this.chance,\n            countMaxCheckbox: this.countMaxCheckbox,\n            countMax: this.countMax,\n            subtypeCheckbox: this.subtypeCheckbox,\n            subtype: this.subtype,\n            actionIdCheckbox: this.actionIdCheckbox,\n            actionId: this.actionId,\n            uniqueIdCheckbox: this.uniqueIdCheckbox,\n            uniqueId: this.uniqueId,\n            textCheckbox: this.textCheckbox,\n            text: this.text,\n            commentCheckbox: this.commentCheckbox,\n            comment: this.comment\n        }\n    }\n\n    getLootFromData = (index) => {\n        var lootTable = {}\n\n        if (!this.allLoot[index].nameCheckbox) {\n            lootTable.id = this.allLoot[index].id;\n        } else {\n            lootTable.name = this.allLoot[index].name;\n        }\n        lootTable.chance = this.allLoot[index].chance;\n        if (this.allLoot[index].countMaxCheckbox) {\n            lootTable.countmax = this.allLoot[index].countMax;\n        }\n        if (this.allLoot[index].subtypeCheckbox) {\n            lootTable.subtype = this.allLoot[index].subtype;\n        }\n        if (this.allLoot[index].actionIdCheckbox) {\n            lootTable.actionid = this.allLoot[index].actionId;\n        }\n        if (this.allLoot[index].uniqueIdCheckbox) {\n            lootTable.uniqueid = this.allLoot[index].uniqueId;\n        }\n        if (this.allLoot[index].textCheckbox) {\n            lootTable.text = this.allLoot[index].text;\n        }\n        if (this.allLoot[index].commentCheckbox) {\n            lootTable.comment = this.allLoot[index].comment;\n        }\n\n        return lootTable\n    }\n\n    getLootSubtype = () => {\n        var lootSubtype = {\n            'water': 1,\n            'blood': 2,\n            'beer': 3,\n            'slime': 4,\n            'lemonade': 5,\n            'milk': 6,\n            'manafluid': 7,\n            'lifefluid': 10,\n            'oil': 11,\n            'urine': 13,\n            'coconut milk': 14,\n            'wine': 15,\n            'mud': 19,\n            'fruit juice': 21,\n            'lava': 26,\n            'rum': 27,\n            'swamp': 28,\n            'tea': 35,\n            'mead': 43\n        };\n\n        return lootSubtype;\n    }\n\n    getLootSubtypeId = () => {\n        var lootSubtypeId = {\n            '1': 'water',\n            '2': 'blood',\n            '3': 'beer',\n            '4': 'slime',\n            '5': 'lemonade',\n            '6': 'milk',\n            '7': 'manafluid',\n            '10': 'lifefluid',\n            '11': 'oil',\n            '13': 'urine',\n            '14': 'coconut milk',\n            '15': 'wine',\n            '19': 'mud',\n            '21': 'fruit juice',\n            '26': 'lava',\n            '27': 'rum',\n            '28': 'swamp',\n            '35': 'tea',\n            '43': 'mead'\n        };\n\n        return lootSubtypeId;\n    }\n\n    translateLootSubtype = (subType) => {\n        var lootSubtype = this.getLootSubtype();\n\n        if (lootSubtype.subType != null) {\n            return lootSubtype[subType];\n        } else {\n            return '';\n        }\n    }\n\n    translateLootSubtypeIdToText = (subType) => {\n        var lootSubtypeId = this.getLootSubtypeId();\n        \n        if (lootSubtypeId.subType != null) {\n            return lootSubtypeId[subType];\n        } else {\n            return '';\n        }\n    }\n\n    generateXMLLoot = (index, indentation = '\\t', firstIndentation = '') => {\n        var lootData = this.getLootFromData(index);\n\n        var loot = '';\n\n        if (lootData.id != null) {\n            loot = loot + firstIndentation + '<item id=\"' + lootData.id + '\"';\n        } else if (lootData.name != null) {\n            loot = loot + firstIndentation + '<item name=\"' + lootData.name + '\"';\n        }\n        if (lootData.countmax != null) {\n            loot = loot + ' countmax=\"' + lootData.countmax + '\"';\n        }\n        if (lootData.subtype != null) {\n            loot = loot + ' subtype=\"' + this.translateLootSubtype(lootData.subtype) + '\"';\n        }\n        if (lootData.actionid != null) {\n            loot = loot + ' actionId=\"' + lootData.actionId + '\"';\n        }\n        if (lootData.uniqueid != null) {\n            loot = loot + ' uniqueId=\"' + lootData.uniqueId + '\"';\n        }\n        if (lootData.text != null) {\n            loot = loot + ' text=\"' + lootData.text + '\"';\n        }\n        loot = loot + ' chance=\"' + lootData.chance + '\" />';\n        if (lootData.comment != null) {\n            loot = loot + ' <!--' + lootData.comment + '-->';\n        }\n\n        return loot;\n    }\n\n    getAllXMLLoot = (indentation = '\\t', firstIndentation = '') => {\n        var returnLoot = [];\n\n        this.allLoot.forEach((variable, index) => {\n            returnLoot.push(this.generateXMLLoot(index, indentation, firstIndentation));\n        });\n\n        return returnLoot;\n    }\n\n    //Generate XML\n\n    getXML = (indentation = '\\t', firstIndentation = '') => {\n        var fileXMLString = '';\n\n        var allXMLloot = this.getAllXMLLoot(indentation, firstIndentation);\n\n        if (allXMLloot.length > 0) {\n            fileXMLString += '\\n' + indentation;\n            fileXMLString += '<loot>';\n            allXMLloot.forEach((variable, index) => {\n                fileXMLString += '\\n' + variable;\n            });\n            fileXMLString += '\\n' + indentation + '</loot>';\n        }\n\n        return fileXMLString;\n    }\n\n    setDefaultValue = () => {\n        this.allLoot = [];\n        this.setTableToLocalStorage();\n\n        this.setId(1);\n        this.setNameCheckbox(false);\n        this.setName('');\n        this.setChance(1);\n        this.setCountMaxCheckbox(false);\n        this.setCountMax(1);\n        this.setSubtypeCheckbox(false);\n        this.setSubtype('water');\n        this.setActionIdCheckbox(false);\n        this.setActionId(1);\n        this.setUniqueIdCheckbox(false);\n        this.setUniqueId(1);\n        this.setTextCheckbox(false);\n        this.setText('');\n        this.setCommentCheckbox(false);\n        this.setComment('');\n    }\n\n    setDefaultTableValue = () => {\n        this.setId(1);\n        this.setNameCheckbox(false);\n        this.setName('');\n        this.setChance(1);\n        this.setCountMaxCheckbox(false);\n        this.setCountMax(1);\n        this.setSubtypeCheckbox(false);\n        this.setSubtype('water');\n        this.setActionIdCheckbox(false);\n        this.setActionId(1);\n        this.setUniqueIdCheckbox(false);\n        this.setUniqueId(1);\n        this.setTextCheckbox(false);\n        this.setText('');\n        this.setCommentCheckbox(false);\n        this.setComment('');\n    }\n\n    loadXMLVariableItem = (variableName, variableValue) => {\n        if (variableName === 'id') {\n            this.setNameCheckbox(false);\n            this.setId(variableValue);\n        } else if (variableName === 'name') {\n            this.setNameCheckbox(true);\n            this.setName(variableValue);\n        } else if (variableName === 'countmax') {\n            this.setCountMaxCheckbox(true);\n            this.setCountMax(variableValue);\n        } else if (variableName === 'subtype') {\n            this.setSubtypeCheckbox(true)\n            this.setSubtype(this.translateLootSubtypeIdToText(variableValue));\n        } else if (variableName === 'actionId') {\n            this.setActionIdCheckbox(true);\n            this.setActionId(variableValue);\n        } else if (variableName === 'uniqueId') {\n            this.setUniqueIdCheckbox(true);\n            this.setUniqueId(variableValue);\n        } else if (variableName === 'text') {\n            this.setTextCheckbox(true);\n            this.setText(variableValue);\n        } else if (variableName === 'chance') {\n            this.setChance(variableValue);\n        }\n    }\n\n    setValueToLocalStorage = (key, value) => {\n        localStorage.setItem(this.getDataIndex() + key, value);\n    }\n\n    getValueFromLocalStorage = (key) => {\n        return localStorage.getItem(this.getDataIndex() + key);\n    }\n\n    setTableToLocalStorage = () => {\n        localStorage.setItem(this.getDataIndex() + \"all\", JSON.stringify(this.allLoot));\n    }\n\n    getTableFromLocalStorage = () => {\n        if (localStorage.getItem(this.getDataIndex() + \"all\") !== null) {\n            return JSON.parse(localStorage.getItem(this.getDataIndex() + \"all\"));\n        } else {\n            return [];\n        }\n    }\n\n    loadValuesFromLocalStorage = () => {\n        this.allLoot = this.getTableFromLocalStorage();\n\n        if (this.getValueFromLocalStorage('id') !== null) {\n            this.setId(this.getValueFromLocalStorage('id'));\n        }\n        if (this.getValueFromLocalStorage('nameCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('nameCheckbox') === 'true') {\n                this.setNameCheckbox(true);\n            } else if (this.getValueFromLocalStorage('nameCheckbox') === 'false') {\n                this.setNameCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('name') !== null) {\n            this.setName(this.getValueFromLocalStorage('name'));\n        }\n        if (this.getValueFromLocalStorage('chance') !== null) {\n            this.setChance(this.getValueFromLocalStorage('chance'));\n        }\n        if (this.getValueFromLocalStorage('countMaxCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('countMaxCheckbox') === 'true') {\n                this.setCountMaxCheckbox(true);\n            } else if (this.getValueFromLocalStorage('countMaxCheckbox') === 'false') {\n                this.setCountMaxCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('countMax') !== null) {\n            this.setCountMax(this.getValueFromLocalStorage('countMax'));\n        }\n        if (this.getValueFromLocalStorage('subtypeCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('subtypeCheckbox') === 'true') {\n                this.setSubtypeCheckbox(true);\n            } else if (this.getValueFromLocalStorage('subtypeCheckbox') === 'false') {\n                this.setSubtypeCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('subtype') !== null) {\n            this.setSubtype(this.getValueFromLocalStorage('subtype'));\n        }\n        if (this.getValueFromLocalStorage('actionIdCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('actionIdCheckbox') === 'true') {\n                this.setActionIdCheckbox(true);\n            } else if (this.getValueFromLocalStorage('actionIdCheckbox') === 'false') {\n                this.setActionIdCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('actionId') !== null) {\n            this.setActionId(this.getValueFromLocalStorage('actionId'));\n        }\n        if (this.getValueFromLocalStorage('uniqueIdCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('uniqueIdCheckbox') === 'true') {\n                this.setUniqueIdCheckbox(true);\n            } else if (this.getValueFromLocalStorage('uniqueIdCheckbox') === 'false') {\n                this.setUniqueIdCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('uniqueId') !== null) {\n            this.setUniqueId(this.getValueFromLocalStorage('uniqueId'));\n        }\n        if (this.getValueFromLocalStorage('textCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('textCheckbox') === 'true') {\n                this.setTextCheckbox(true);\n            } else if (this.getValueFromLocalStorage('textCheckbox') === 'false') {\n                this.setTextCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('text') !== null) {\n            this.setText(this.getValueFromLocalStorage('text'));\n        }\n        if (this.getValueFromLocalStorage('commentCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('commentCheckbox') === 'true') {\n                this.setCommentCheckbox(true);\n            } else if (this.getValueFromLocalStorage('commentCheckbox') === 'false') {\n                this.setCommentCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('comment') !== null) {\n            this.setComment(this.getValueFromLocalStorage('comment'));\n        }\n    }\n}\n\nexport default LootData;\n","class IOData {\n    constructor() {\n        this.ownNameCheckbox = false;\n        this.ownName = '';\n\n        this.name = '';\n        this.fileText = '';\n\n        this.dataIndex = \"IO_\";\n    }\n\n    setOwnNameCheckbox = (value) => {\n        this.ownNameCheckbox = value;\n        this.setValueToLocalStorage('ownNameCheckbox', value);\n    }\n\n    getOwnNameCheckbox = () => {\n        return this.ownNameCheckbox;\n    }\n\n    setOwnName = (value) => {\n        this.ownName = value;\n        this.setValueToLocalStorage('ownName', value);\n        if (this.getOwnNameCheckbox()) {\n            this.setName(value);\n        }\n    }\n\n    getOwnName = () => {\n        return this.ownName;\n    }\n\n    setName = (value) => {\n        this.name = value;\n    }\n\n    getName = () => {\n        return this.name;\n    }\n\n    setFileText = (value) => {\n        this.fileText = value;\n    }\n\n    getFileText = () => {\n        return this.fileText;\n    }\n\n    getDataIndex = () => {\n        return this.dataIndex;\n    }\n\n    setDefaultValue = () => {\n        this.setOwnNameCheckbox(false);\n        this.setOwnName('');\n\n        this.setName(null);\n    }\n\n    loadFile = (file) => {\n        var reader = new FileReader();\n\n        reader.addEventListener('load', (e) => {\n            this.setFileText(e.target.result);\n        });\n        \n        reader.readAsBinaryString(file);\n    }\n\n    setValueToLocalStorage = (key, value) => {\n        localStorage.setItem(this.getDataIndex() + key, value);\n    }\n\n    getValueFromLocalStorage = (key) => {\n        return localStorage.getItem(this.getDataIndex() + key);\n    }\n\n    loadValuesFromLocalStorage = () => {\n        if (this.getValueFromLocalStorage('ownNameCheckbox') !== null) {\n            if (this.getValueFromLocalStorage('ownNameCheckbox') === 'true') {\n                this.setOwnNameCheckbox(true);\n            } else if (this.getValueFromLocalStorage('ownNameCheckbox') === 'false') {\n                this.setOwnNameCheckbox(false);\n            }\n        }\n        if (this.getValueFromLocalStorage('ownName') !== null) {\n            this.setOwnName(this.getValueFromLocalStorage('ownName'));\n        }\n    }\n}\n\nexport default IOData;\n","import MonsterData from './MonsterData.js'\nimport FlagsData from './FlagsData.js'\nimport ScriptData from './ScriptData.js'\nimport AttacksData from './AttacksData.js'\nimport DefensesData from './DefensesData.js'\nimport ElementsData from './ElementsData.js'\nimport ImmunitiesData from './ImmunitiesData.js'\nimport SummonsData from './SummonsData.js'\nimport VoicesData from './VoicesData.js'\nimport LootData from './LootData.js'\nimport IOData from './IOData.js'\n\nclass AppData {\n    constructor() {\n        this.monsterData = new MonsterData();\n        this.flagsData = new FlagsData();\n        this.scriptData = new ScriptData();\n        this.attacksData = new AttacksData();\n        this.defensesData = new DefensesData();\n        this.elementsData = new ElementsData();\n        this.immunitiesData = new ImmunitiesData();\n        this.summonsData = new SummonsData();\n        this.voicesData = new VoicesData();\n        this.lootData = new LootData();\n        this.ioData = new IOData();\n    }\n\n    getMonster = () => {\n        return this.monsterData;\n    }\n\n    getFlags = () => {\n        return this.flagsData;\n    }\n\n    getScript = () => {\n        return this.scriptData;\n    }\n\n    getAttacks = () => {\n        return this.attacksData;\n    }\n\n    getDefenses = () => {\n        return this.defensesData;\n    }\n\n    getElements = () => {\n        return this.elementsData;\n    }\n\n    getImmunities = () => {\n        return this.immunitiesData;\n    }\n\n    getSummons = () => {\n        return this.summonsData;\n    }\n\n    getVoices = () => {\n        return this.voicesData;\n    }\n\n    getLoot = () => {\n        return this.lootData;\n    }\n\n    getIO = () => {\n        return this.ioData;\n    }\n\n    //Generate XML\n\n    getXML = () => {\n        var indentation = '\\t';\n        var fileXMLString = '';\n\n        fileXMLString += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        fileXMLString += this.getMonster().getXML();\n        fileXMLString += this.getFlags().getXML();\n        fileXMLString += this.getScript().getXML();\n        fileXMLString += this.getAttacks().getXML(indentation, indentation + indentation);\n        fileXMLString += this.getDefenses().getXML(indentation, indentation + indentation);\n        fileXMLString += this.getElements().getXML();\n        fileXMLString += this.getImmunities().getXML();\n        fileXMLString += this.getSummons().getXML(indentation, indentation + indentation);\n        fileXMLString += this.getVoices().getXML(indentation, indentation + indentation);\n        fileXMLString += this.getLoot().getXML(indentation, indentation + indentation);\n        fileXMLString += '\\n</monster>';\n\n        return fileXMLString;\n    }\n\n    //Download\n\n    downloadFile = () => {\n        var a = document.createElement('a');\n        a.href = 'data:text/plain;base64,' + btoa(this.getXML());\n        a.textContent = 'download';\n        a.download = this.getIO().getName() + \".xml\";\n        a.click();\n    }\n\n    setDefaultValue = () => {\n        this.getMonster().setDefaultValue();\n        this.getFlags().setDefaultValue();\n        this.getScript().setDefaultValue();\n        this.getAttacks().setDefaultValue();\n        this.getDefenses().setDefaultValue();\n        this.getElements().setDefaultValue();\n        this.getImmunities().setDefaultValue();\n        this.getSummons().setDefaultValue();\n        this.getVoices().setDefaultValue();\n        this.getLoot().setDefaultValue();\n        this.getIO().setDefaultValue();\n    }\n\n    loadDataFromXMLToTable = (sector, variableName, variableValue, preSector) => {\n        if (sector === 'monster') {\n            this.getMonster().loadXMLVariableMonster(variableName, variableValue);\n        } else if (sector === 'health') {\n            this.getMonster().loadXMLVariableHealth(variableName, variableValue);\n        } else if (sector === 'look') {\n            this.getMonster().loadXMLVariableLook(variableName, variableValue);\n        } else if (sector === 'targetchange') {\n            this.getMonster().loadXMLVariableTargetchange(variableName, variableValue);\n        } else if (sector === 'strategy') {\n            this.getMonster().loadXMLVariableStrategy(variableName, variableValue);\n        } else if (sector === 'flag') {\n            this.getFlags().loadXMLVariableFlag(variableName, variableValue);\n        } else if (sector === 'event') {\n            this.getScript().loadXMLVariableEvent(variableName, variableValue);\n        } else if (sector === 'attack') {\n            this.getAttacks().loadXMLVariableAttack(variableName, variableValue);\n        } else if (sector === 'defenses') {\n            this.getDefenses().loadXMLVariableDefenses(variableName, variableValue);\n        } else if (sector === 'defense') {\n            this.getDefenses().loadXMLVariableDefense(variableName, variableValue);\n        } else if (sector === 'element') {\n            this.getElements().loadXMLVariableElement(variableName, variableValue);\n        } else if (sector === 'immunity') {\n            this.getImmunities().loadXMLVariableImmunity(variableName, variableValue);\n        } else if (sector === 'summons') {\n            this.getSummons().loadXMLVariableSummons(variableName, variableValue);\n        } else if (sector === 'summon') {\n            this.getSummons().loadXMLVariableSummon(variableName, variableValue);\n        } else if (sector === 'voices') {\n            this.getVoices().loadXMLVariableVoices(variableName, variableValue);\n        } else if (sector === 'voice') {\n            this.getVoices().loadXMLVariableVoice(variableName, variableValue);\n        } else if (sector === 'item') {\n            this.getLoot().loadXMLVariableItem(variableName, variableValue);\n        } else if (sector === 'attribute') {\n            if (preSector === 'attack') {\n                this.getAttacks().loadXMLVariableAttribute(variableName, variableValue);\n            } else if (preSector === 'defense') {\n                this.getDefenses().loadXMLVariableAttribute(variableName, variableValue);\n            }\n        }\n    }\n\n    parseXMLFile = () => {\n        var itemsXMLString = [];\n\n        this.getIO().getFileText().split('\\n').forEach(line => {\n            itemsXMLString.push(line.replace(/\\t/g, ''));\n        });\n\n        var parseSectors = [];\n        itemsXMLString.forEach(line => {\n            let startSign = line.search('<');\n            if (startSign >= 0) {\n                if (line.substring(startSign + 1, startSign + 2) === '/') {\n                    let endSign = (startSign + 1) + line.substring(startSign + 1, line.length).search('>');\n                    if (endSign >= 0) {\n                        if (parseSectors[parseSectors.length - 1] === line.substring(startSign + 2, endSign - 1)) {\n                            if (parseSectors[parseSectors.length - 1] === 'attack') {\n                                this.getAttacks().addToAttacks();\n                                this.getAttacks().setDefaultTableValue();\n                            } else if (parseSectors[parseSectors.length - 1] === 'defense') {\n                                this.getDefenses().addToDefenses();\n                                this.getDefenses().setDefaultTableValue();\n                            } else if (parseSectors[parseSectors.length - 1] === 'summon') {\n                                this.getSummons().addToSummons();\n                                this.getSummons().setDefaultTableValue();\n                            } else if (parseSectors[parseSectors.length - 1] === 'voice') {\n                                this.getVoices().addToVoices();\n                                this.getVoices().setDefaultTableValue();\n                            } else if (parseSectors[parseSectors.length - 1] === 'item') {\n                                this.getLoot().addToLoot();\n                                this.getLoot().setDefaultTableValue();\n                            }\n                            parseSectors = parseSectors.splice(0, parseSectors.length - 1);\n                        }\n                    }\n                } else if (line.substring(startSign + 1, startSign + 2) === '?') {\n                    //ignore\n                } else if (line.substring(startSign + 1, startSign + 2) === '!') {\n                    //ignore\n                } else {\n                    let nextSign = line.substring(startSign + 1, line.length - 1).search(' ');\n                    let endSign = line.substring(startSign + 1, line.length - 1).search('>');\n                    if (nextSign && nextSign < endSign) {\n                        parseSectors.push(line.substring(startSign + 1, (startSign + 1) + line.substring(startSign, line.length - 1).search(' ') - 1));\n                        let isStartComment = line.search('<!--');\n                        let isEndComment = line.search('-->');\n                        //let commentText = '';\n                        let prePreparedText = '';\n                        if (isStartComment !== -1 && parseSectors[parseSectors.length - 1] === 'item') {\n                            prePreparedText = line.substring(line.substring(startSign, line.length - 1).search(' '), isStartComment - 2);\n                            this.getLoot().setCommentCheckbox(true);\n                            this.getLoot().setComment(line.substring(isStartComment + 4, isEndComment - 2));\n                        } else {\n                            prePreparedText = line.substring(line.substring(startSign, line.length - 1).search(' '), line.length - 1);\n                        }\n                        let preparedText = '';\n                        let startNewString = false;\n                        for (let i = 1; i < prePreparedText.length; i++) {\n                            if (prePreparedText.substring(i, i + 1) === '\"') {\n                                if (!startNewString) {\n                                    startNewString = true;\n                                    preparedText += prePreparedText.substring(i, i + 1);\n                                } else {\n                                    startNewString = false;\n                                    preparedText += prePreparedText.substring(i, i + 1);\n                                }\n                            } else if (prePreparedText.substring(i, i + 1) === ' ' && !startNewString) {\n                                //ignore\n                            } else {\n                                preparedText += prePreparedText.substring(i, i + 1);\n                            }\n                        }\n                        while (preparedText !== '') {\n                            let findNextValue = preparedText.search('=');\n                            if (findNextValue !== -1) {\n                                let variableName = preparedText.substring(0, findNextValue);\n                                let firstQuote = preparedText.search('\"');\n                                let secondQuote = (firstQuote + 1) + preparedText.substring(firstQuote + 1, preparedText.length).search('\"');\n                                let variableValue = preparedText.substring(firstQuote + 1, secondQuote);\n\n                                this.loadDataFromXMLToTable(parseSectors[parseSectors.length - 1], variableName, variableValue, parseSectors[parseSectors.length - 1]);\n\n                                preparedText = preparedText.substring(secondQuote + 1, preparedText.length);\n                            } else if (preparedText.search('/>') !== -1) {\n                                if (parseSectors[parseSectors.length - 1] === 'attack') {\n                                    this.getAttacks().addToAttacks();\n                                    this.getAttacks().setDefaultTableValue();\n                                } else if (parseSectors[parseSectors.length - 1] === 'defense') {\n                                    this.getDefenses().addToDefenses();\n                                    this.getDefenses().setDefaultTableValue();\n                                } else if (parseSectors[parseSectors.length - 1] === 'summon') {\n                                    this.getSummons().addToSummons();\n                                    this.getSummons().setDefaultTableValue();\n                                } else if (parseSectors[parseSectors.length - 1] === 'voice') {\n                                    this.getVoices().addToVoices();\n                                    this.getVoices().setDefaultTableValue();\n                                } else if (parseSectors[parseSectors.length - 1] === 'item') {\n                                    this.getLoot().addToLoot();\n                                    this.getLoot().setDefaultTableValue();\n                                }\n                                parseSectors = parseSectors.splice(0, parseSectors.length - 1);\n                                break;\n                            } else if (preparedText.search('>') !== -1) {\n                                break;\n                            } else {\n                                break;\n                            }\n                        }\n                    } else {\n                        if (endSign) {\n                            parseSectors.push(line.substring(startSign + 1, endSign - 1));\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    getLineMonstersXML = () => {\n        return '<monster name=\"' + this.getMonster().getName() + '\"  file=\"' + this.getIO().getName() + '.xml\"  />';\n    }\n\n    loadValuesFromLocalStorage = () => {\n        this.getMonster().loadValuesFromLocalStorage();\n        this.getFlags().loadValuesFromLocalStorage();\n        this.getScript().loadValuesFromLocalStorage();\n        this.getAttacks().loadValuesFromLocalStorage();\n        this.getDefenses().loadValuesFromLocalStorage();\n        this.getElements().loadValuesFromLocalStorage();\n        this.getImmunities().loadValuesFromLocalStorage();\n        this.getSummons().loadValuesFromLocalStorage();\n        this.getVoices().loadValuesFromLocalStorage();\n        this.getLoot().loadValuesFromLocalStorage();\n        this.getIO().loadValuesFromLocalStorage();\n        //Update file name\n        if (!this.getIO().getOwnNameCheckbox()) {\n            this.getIO().setName(this.getMonster().getName());\n        }\n    }\n}\n\nexport default AppData;\n","import React from 'react';\n\nconst monsterMakerMenuItemStyleLiDis = {\n  float: 'left',\n  marginTop: \"6px\",\n  marginBottom: \"6px\",\n  marginLeft: \"6px\"\n};\n\nconst monsterMakerMenuItemStyleLiAct = {\n  float: 'left',\n  marginTop: \"6px\",\n  marginBottom: \"6px\",\n  marginLeft: \"6px\"\n};\n\nconst monsterMakerMenuItemStyleSpanDis = {\n  textAlign: 'center',\n  padding: '5px 5px',\n  align: 'center'\n};\n\nconst monsterMakerMenuItemStyleSpanAct = {\n  textAlign: 'center',\n  boxShadow: '0 0 0 2px #38B0DE',\n  borderRadius: \"20px\",\n  padding: '5px 5px',\n  align: 'center'\n};\n\nconst monsterMakerMenuItemStyleUl = {\n  listStyleType: 'none',\n  paddingInlineStart: '0px',\n  textAlign: 'center',\n  padding: '0px 10px'\n}\n\nclass MonsterMakerMenuItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {hover: false};\n  }\n\n  toggleHover = () => {\n    this.setState({ hover: !this.state.hover });\n  }\n\n  changeClick = () => {\n    this.props.onClick(this.props.name);\n  }\n\n  render() {\n    var myclassName = this.props.active ? 'active' : '';\n    \n    var menuItemColorHover;\n    if (!this.state.hover) {\n      menuItemColorHover = {color: \"#a1a1a1\"};\n    } else {\n      menuItemColorHover = {color: \"#FFFFFF\"};\n    }\n\n    return (\n      <li style={this.props.active ? monsterMakerMenuItemStyleLiAct : monsterMakerMenuItemStyleLiDis} onClick={this.changeClick} className={myclassName}>\n        <ul style={monsterMakerMenuItemStyleUl} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} >\n          <li>\n            <span className=\"ra-stack ra-lg\" style={this.props.active ? monsterMakerMenuItemStyleSpanAct : monsterMakerMenuItemStyleSpanDis} >\n              <i className={\"ra \" + this.props.icon + \" ra-stack-2x\"} style={menuItemColorHover} ></i>\n            </span>\n          </li>\n          <li style={menuItemColorHover} >\n            {this.props.name}\n          </li>\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default MonsterMakerMenuItem;\n","import React from 'react';\n//import ReactTooltip from 'react-tooltip';\n\nconst buttonStyle = {\n  width: 40,\n  height: 40,\n  padding: 0,\n  backgroundColor: '#000000',\n  borderColor: 'rgba(119, 111, 111, 1)',\n  borderRadius: 10,\n  display: 'inherit',\n  marginRight: 2,\n  outline: 'none'\n}\n\nconst buttonStyleHover = {\n  width: 40,\n  height: 40,\n  padding: 0,\n  backgroundColor: 'rgb(90, 85, 85)',\n  borderColor: 'rgba(119, 111, 111, 1)',\n  borderRadius: 10,\n  display: 'inherit',\n  marginRight: 2,\n  outline: 'none'\n}\n\nconst iconStyle = {\n  color: '#FFFFFF',\n  fontSize: 20,\n  width: 40,\n  height: 40\n}\n\nclass MonsterMakerButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { hover: false };\n  }\n\n  toggleHover = () => {\n    this.setState({ hover: !this.state.hover });\n  }\n  \n  render() {\n    return (\n      <button style={ !this.state.hover ? buttonStyle : buttonStyleHover }\n              onMouseEnter={ this.toggleHover }\n              onMouseLeave={ this.toggleHover }\n              onClick={ this.props.onClick }\n              data-tip={ this.props.tooltip }\n      >\n        <i className={ \"ra \" + this.props.icon } style={ iconStyle } ></i>\n        {/*<ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\"/>*/}\n      </button>\n    );\n  }\n}\n\nexport default MonsterMakerButton;\n","import React from 'react';\n\nconst containerStyle = {\n    maxHeight: 250,\n    maxWidth: 'calc(100vw - 40px)',\n    margin: 5,\n    overflow: 'auto',\n\n    backgroundColor: '#000000',\n    color: '#FFFFFF',\n\n    whiteSpace: 'pre'\n}\n\nconst textContainerStyle = {\n    margin: 'auto',\n    display: 'table'\n}\n\nclass MonsterMakerCode extends React.Component {\n    render() {\n        return(\n            <div style={ containerStyle } >\n                <div style={ textContainerStyle } >\n                    { this.props.text }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MonsterMakerCode;\n","import React from 'react';\n//import ReactTooltip from 'react-tooltip';\n\nclass MonsterMakerInput extends React.Component {\n  render() {\n    const style = this.props.disabled ? {...this.props.style, ...{opacity: 0.5}} : this.props.style;\n\n    return (\n      <div data-tip={ this.props.tooltip } >\n        <input\n          type={this.props.type}\n          name=\"name\"\n          defaultValue={this.props.defaultValue}\n          defaultChecked={this.props.defaultChecked}\n          style={style}\n          onChange={this.props.onChange}\n          min={this.props.min}\n          max={this.props.max}\n          step={this.props.step}\n          checked={this.props.checked}\n          disabled={this.props.disabled}\n          value={this.props.value}\n        />\n        {/*<ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\"/>*/}\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerInput;\n","import React from 'react';\n\nclass MonsterMakerInputSelect extends React.Component {\n  render() {\n    var rows = [];\n\n    this.props.selectItems.forEach(function (item, i) {\n      rows.push(<option value={item} key={i}>{item}</option>);\n    });\n    \n\n    return (\n      <div>\n        <select\n          style={ this.props.style }\n          defaultValue={ this.props.defaultValue }\n          value={ this.props.value }\n          onChange={ this.props.onChange }\n          disabled={ this.props.disabled }\n        >\n          {rows}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerInputSelect;\n","import React from 'react';\n\nconst trStyle = {\n  backgroundColor: '#262626',\n  whiteSpace: 'pre'\n}\n\nconst trStyleHover = {\n  backgroundColor: '#555555',\n  whiteSpace: 'pre'\n}\n\nconst selectedItem = {\n  color: 'gold'\n}\n\nclass MonsterMakerItemsTableTr extends React.Component {\n  constructor(props) {\n    super(props);\n  \n    this.state = { hover: false };\n  }\n  \n  onMouseEnter = () => {\n    this.setState({ hover: true });\n  }\n\n  onMouseLeave = () => {\n    this.setState({ hover: false });\n  }\n\n  render() {\n    return (\n      <tr style = { !this.state.hover ? trStyle : trStyleHover } onMouseEnter = { this.onMouseEnter } onMouseLeave = { this.onMouseLeave } onClick = { this.props.changeActiveItem } >\n        <td key = { this.props.index } id = { this.props.index } style = { this.props.activeItem !== null && Number(this.props.activeItem) === this.props.index ? selectedItem : null }>\n          { this.props.variable }\n        </td>\n      </tr>\n    )\n  }\n}\n\nexport default MonsterMakerItemsTableTr;\n","import React from 'react';\n\nimport MonsterMakerItemsTableTr from './MonsterMakerItemsTableTr.js';\n\nconst containerStyle = {\n  maxHeight: 250,\n  maxWidth: \"calc(100vw - 40px)\",\n  padding: 5,\n  overflow: 'auto'\n}\n\nconst tableStyle = {\n  width: '100%',\n  textAlign: 'center',\n  backgroundColor: '#000000',\n  color: '#FFFFFF'\n}\n\nclass MonsterMakerItemsTable extends React.Component {\n  render() {\n    return (\n      <div style={ containerStyle } >\n        <table style={ tableStyle } >\n          <tbody>\n            {\n              this.props.data.map((variable, index) => {\n                return (\n                  <MonsterMakerItemsTableTr\n                    key={ index }\n                    variable = { variable }\n                    index = { index }\n                    changeActiveItem = { this.props.changeActiveItem }\n                    activeItem = { this.props.activeItem }\n                  />\n                )\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerItemsTable;\n","import React from 'react';\n//import ReactTooltip from 'react-tooltip';\n\nconst MonsterMakerLabelStyle = {\n  fontSize: '20px'\n};\n\nclass MonsterMakerLabel extends React.Component {\n  render() {\n    return (\n      <div style={{...MonsterMakerLabelStyle, ...this.props.style, ...this.props.width}} data-tip={ this.props.tooltip } >\n        <label style={this.props.disabled ? {opacity: 0.5} : null}>\n          {this.props.text}\n        </label>\n        {/*<ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" html=\"true\" />*/}\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerLabel;\n","import React from 'react';\n\nconst styleFlexibleGrid = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    float: 'left',\n    padding: '5px 0px',\n    marginRight: 5\n}\n\nclass FlexibleGrid extends React.Component {\n    render() {\n        return (\n            <div style={{ ...styleFlexibleGrid, ...this.props.style }}>\n                { this.props.children }\n            </div>\n        );\n    }\n}\n\nconst styleFlexibleGridContainer = {\n    display: 'grid'\n}\n\nclass FlexibleGridContainer extends React.Component {\n    render() {\n        return (\n            <div style={{ ...styleFlexibleGridContainer, ...this.props.style }}>\n                <FlexibleGrid style={ this.props.innerStyle }>\n                    { this.props.children }\n                </FlexibleGrid>\n            </div>\n        );\n    }\n}\n\nexport { FlexibleGridContainer, FlexibleGrid };\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { areaEffect, shotEffect } from '../consts'\nimport { MonsterMakerLabel, MonsterMakerInput, MonsterMakerInputSelect, MonsterMakerItemsTable, MonsterMakerButton } from '../components';\nimport { FlexibleGridContainer, FlexibleGrid } from '../components/FlexibleGrid';\n\nconst firstLabelWidth = { minWidth: 200 }\nconst secondLabelWidth = { minWidth: 180 }\n\nclass MonsterMakerTabAttacks extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      attackType: this.props.appData.getAttacks().getType(),\n      elementalType: this.props.appData.getAttacks().getElementalType(),\n      conditionsType: this.props.appData.getAttacks().getConditionsType(),\n      fieldsType: this.props.appData.getAttacks().getFieldsType(),\n      runesType: this.props.appData.getAttacks().getRunesType(),\n      spellsType: this.props.appData.getAttacks().getSpellsType(),\n      otherType: this.props.appData.getAttacks().getOtherType(),\n      min: this.props.appData.getAttacks().getMin(),\n      max: this.props.appData.getAttacks().getMax(),\n      skillChange: this.props.appData.getAttacks().getSkillCheckbox(),\n      skill: this.props.appData.getAttacks().getSkill(),\n      attack: this.props.appData.getAttacks().getAttack(),\n      interval: this.props.appData.getAttacks().getInterval(),\n      chance: this.props.appData.getAttacks().getChance(),\n      lengthCheckbox: this.props.appData.getAttacks().getLengthCheckbox(),\n      length: this.props.appData.getAttacks().getLength(),\n      spreadCheckbox: this.props.appData.getAttacks().getSpreadCheckbox(),\n      spread: this.props.appData.getAttacks().getSpread(),\n      radiusCheckbox: this.props.appData.getAttacks().getRadiusCheckbox(),\n      radius: this.props.appData.getAttacks().getRadius(),\n      poisonCheckbox: this.props.appData.getAttacks().getPoisonCheckbox(),\n      poison: this.props.appData.getAttacks().getPoison(),\n      target: this.props.appData.getAttacks().getTarget(),\n      range: this.props.appData.getAttacks().getRange(),\n      areaeffectCheckbox: this.props.appData.getAttacks().getAreaeffectCheckbox(),\n      areaeffect: this.props.appData.getAttacks().getAreaeffect(),\n      shooteffectCheckbox: this.props.appData.getAttacks().getShooteffectCheckbox(),\n      shooteffect: this.props.appData.getAttacks().getShooteffect(),\n\n      activeItem: this.props.activeItem\n    };\n  }\n\n  //On change states\n\n  onChangeAttackType = (event) => {\n    this.props.appData.getAttacks().setType(event.target.value);\n    this.setState({ attackType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeElementalType = (event) => {\n    this.props.appData.getAttacks().setElementalType(event.target.value);\n    this.setState({ elementalType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexElementalType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeConditionsType = (event) => {\n    this.props.appData.getAttacks().setConditionsType(event.target.value);\n    this.setState({ conditionsType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexConditionsType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeFieldsType = (event) => {\n    this.props.appData.getAttacks().setFieldsType(event.target.value);\n    this.setState({ fieldsType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexFieldsType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeRunesType = (event) => {\n    this.props.appData.getAttacks().setRunesType(event.target.value);\n    this.setState({ runesType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexRunesType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeSpellsType = (event) => {\n    this.props.appData.getAttacks().setSpellsType(event.target.value);\n    this.setState({ spellsType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexSpellsType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeOtherType = (event) => {\n    this.props.appData.getAttacks().setOtherType(event.target.value);\n    this.setState({ otherType: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexOtherType(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeMin = (event) => {\n    this.props.appData.getAttacks().setMin(event.target.value);\n    this.setState({ min: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexMin(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeMax = (event) => {\n    this.props.appData.getAttacks().setMax(event.target.value);\n    this.setState({ max: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexMax(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeSkillCheckbox = (event) => {\n    this.props.appData.getAttacks().setSkillCheckbox(!this.props.appData.getAttacks().getSkillCheckbox());\n    this.setState({ skillChange: this.props.appData.getAttacks().getSkillCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexSkillCheckbox(this.state.activeItem, this.props.appData.getAttacks().getSkillCheckbox());\n    }\n  }\n\n  onChangeSkill = (event) => {\n    this.props.appData.getAttacks().setSkill(event.target.value);\n    this.setState({ skill: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexSkill(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeAttack = (event) => {\n    this.props.appData.getAttacks().setAttack(event.target.value);\n    this.setState({ attack: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexAttack(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeInterval = (event) => {\n    this.props.appData.getAttacks().setInterval(event.target.value);\n    this.setState({ interval: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexInterval(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeChance = (event) => {\n    this.props.appData.getAttacks().setChance(event.target.value);\n    this.setState({ chance: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexChance(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeLengthCheckbox = (event) => {\n    this.props.appData.getAttacks().setLengthCheckbox(!this.props.appData.getAttacks().getLengthCheckbox());\n    this.setState({ lengthCheckbox: this.props.appData.getAttacks().getLengthCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexLengthCheckbox(this.state.activeItem, this.props.appData.getAttacks().getLengthCheckbox());\n    }\n  }\n\n  onChangeLength = (event) => {\n    this.props.appData.getAttacks().setLength(event.target.value);\n    this.setState({ length: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexLength(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeSpreadCheckbox = (event) => {\n    this.props.appData.getAttacks().setSpreadCheckbox(!this.props.appData.getAttacks().getSpreadCheckbox());\n    this.setState({ spreadCheckbox: this.props.appData.getAttacks().getSpreadCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexSpreadCheckbox(this.state.activeItem, this.props.appData.getAttacks().getSpreadCheckbox());\n    }\n  }\n\n  onChangeSpread = (event) => {\n    this.props.appData.getAttacks().setSpread(event.target.value);\n    this.setState({ spread: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexSpread(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeRadiusCheckbox = (event) => {\n    this.props.appData.getAttacks().setRadiusCheckbox(!this.props.appData.getAttacks().getRadiusCheckbox());\n    this.setState({ radiusCheckbox: this.props.appData.getAttacks().getRadiusCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexRadiusCheckbox(this.state.activeItem, this.props.appData.getAttacks().getRadiusCheckbox());\n    }\n  }\n\n  onChangeRadius = (event) => {\n    this.props.appData.getAttacks().setRadius(event.target.value);\n    this.setState({ radius: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexRadius(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangePoisonCheckbox = (event) => {\n    this.props.appData.getAttacks().setPoisonCheckbox(!this.props.appData.getAttacks().getPoisonCheckbox());\n    this.setState({ poisonCheckbox: this.props.appData.getAttacks().getPoisonCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexPoisonCheckbox(this.state.activeItem, this.props.appData.getAttacks().getPoisonCheckbox());\n    }\n  }\n\n  onChangePoison = (event) => {\n    this.props.appData.getAttacks().setPoison(event.target.value);\n    this.setState({ poison: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexPoison(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeTarget = (event) => {\n    this.props.appData.getAttacks().setTarget(!this.props.appData.getAttacks().getTarget());\n    this.setState({ target: this.props.appData.getAttacks().getTarget() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexTarget(this.state.activeItem, this.props.appData.getAttacks().getTarget());\n    }\n  }\n\n  onChangeRange = (event) => {\n    this.props.appData.getAttacks().setRange(event.target.value);\n    this.setState({ range: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexRange(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeAreaeffectCheckbox = (event) => {\n    this.props.appData.getAttacks().setAreaeffectCheckbox(!this.props.appData.getAttacks().getAreaeffectCheckbox());\n    this.setState({ areaeffectCheckbox: this.props.appData.getAttacks().getAreaeffectCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexAreaeffectCheckbox(this.state.activeItem, this.props.appData.getAttacks().getAreaeffectCheckbox());\n    }\n  }\n\n  onChangeAreaeffect = (event) => {\n    this.props.appData.getAttacks().setAreaeffect(event.target.value);\n    this.setState({ areaeffect: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexAreaeffect(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeShooteffectCheckbox = (event) => {\n    this.props.appData.getAttacks().setShooteffectCheckbox(!this.props.appData.getAttacks().getShooteffectCheckbox());\n    this.setState({ shooteffectCheckbox: this.props.appData.getAttacks().getShooteffectCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexShooteffectCheckbox(this.state.activeItem, this.props.appData.getAttacks().getShooteffectCheckbox());\n    }\n  }\n\n  onChangeShooteffect = (event) => {\n    this.props.appData.getAttacks().setShooteffect(event.target.value);\n    this.setState({ shooteffect: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().setIndexShooteffect(this.state.activeItem, event.target.value);\n    }\n  }\n\n  //Buttons action\n\n  clickAddButton = () => {\n    this.props.appData.getAttacks().addToAttacks();\n    this.forceUpdate();\n  }\n\n  clickDeleteButton = () => {\n    if (this.state.activeItem !== null) {\n      this.props.appData.getAttacks().deleteFromAttacks(this.state.activeItem);\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  //Refresh items\n\n  refreshItems = () => {\n    this.setState({\n      attackType: this.props.appData.getAttacks().getType(),\n      elementalType: this.props.appData.getAttacks().getElementalType(),\n      conditionsType: this.props.appData.getAttacks().getConditionsType(),\n      fieldsType: this.props.appData.getAttacks().getFieldsType(),\n      runesType: this.props.appData.getAttacks().getRunesType(),\n      spellsType: this.props.appData.getAttacks().getSpellsType(),\n      otherType: this.props.appData.getAttacks().getOtherType(),\n      min: this.props.appData.getAttacks().getMin(),\n      max: this.props.appData.getAttacks().getMax(),\n      skillChange: this.props.appData.getAttacks().getSkillCheckbox(),\n      skill: this.props.appData.getAttacks().getSkill(),\n      attack: this.props.appData.getAttacks().getAttack(),\n      interval: this.props.appData.getAttacks().getInterval(),\n      chance: this.props.appData.getAttacks().getChance(),\n      lengthCheckbox: this.props.appData.getAttacks().getLengthCheckbox(),\n      length: this.props.appData.getAttacks().getLength(),\n      spreadCheckbox: this.props.appData.getAttacks().getSpreadCheckbox(),\n      spread: this.props.appData.getAttacks().getSpread(),\n      radiusCheckbox: this.props.appData.getAttacks().getRadiusCheckbox(),\n      radius: this.props.appData.getAttacks().getRadius(),\n      poisonCheckbox: this.props.appData.getAttacks().getPoisonCheckbox(),\n      poison: this.props.appData.getAttacks().getPoison(),\n      target: this.props.appData.getAttacks().getTarget(),\n      range: this.props.appData.getAttacks().getRange(),\n      areaeffectCheckbox: this.props.appData.getAttacks().getAreaeffectCheckbox(),\n      areaeffect: this.props.appData.getAttacks().getAreaeffect(),\n      shooteffectCheckbox: this.props.appData.getAttacks().getShooteffectCheckbox(),\n      shooteffect: this.props.appData.getAttacks().getShooteffect()\n    });\n  }\n\n  //Active item\n  setActiveItem = (event) => {\n    if (this.state.activeItem !== event.target.id) {\n      this.setState({ activeItem: event.target.id });\n      this.props.appData.getAttacks().showAttacks(event.target.id);\n      this.refreshItems();\n      this.props.changeActiveItem(event.target.id);\n    } else {\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"tabMenu\">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" html={ true } />\n\n        <MonsterMakerItemsTable\n          data = { this.props.appData.getAttacks().getAllXMLattacks() }\n          changeActiveItem = { this.setActiveItem }\n          activeItem = { this.state.activeItem }\n        />\n        <div style = {{ display: 'initial' }}>\n          <MonsterMakerButton\n            icon = \"ra-health\"\n            onClick = { this.clickAddButton }\n            tooltip = \"Add to table\"\n          />\n          <MonsterMakerButton\n            icon = \"ra-burning-embers\"\n            onClick = { this.clickDeleteButton }\n            tooltip = \"Delete from table\"\n          />\n        </div>\n\n        <FlexibleGridContainer>\n            <MonsterMakerLabel\n              text=\"Name\"\n              tooltip=\"There you can use various attacks like 'melee'.<br>It includes also spell names like:\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <FlexibleGrid>\n              <MonsterMakerLabel\n                text=\"Type:\"\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n              <FlexibleGrid>\n                <MonsterMakerInputSelect\n                  selectItems={ this.props.appData.getAttacks().getAttackTypeArray() }\n                  value={ this.state.attackType }\n                  onChange={ this.onChangeAttackType }\n                  style={{ marginLeft: 3, marginRight: 3 }}\n                />\n                {\n                  this.state.attackType === \"elemental\" ?\n                  <MonsterMakerInputSelect\n                    selectItems={ this.props.appData.getAttacks().getElementalTypeArray() }\n                    value={ this.state.elementalType }\n                    onChange={ this.onChangeElementalType }\n                    style={{ marginLeft: 3, marginRight: 3 }}\n                  /> : null\n                }\n                {\n                  this.state.attackType === \"conditions\" ?\n                  <MonsterMakerInputSelect\n                    selectItems={ this.props.appData.getAttacks().getConditionsTypeArray() }\n                    value={ this.state.conditionsType }\n                    onChange={ this.onChangeConditionsType }\n                    style={{ marginLeft: 3, marginRight: 3 }}\n                  /> : null\n                }\n                {\n                  this.state.attackType === \"fields\" ?\n                  <MonsterMakerInputSelect\n                    selectItems={ this.props.appData.getAttacks().getFieldsTypeArray() }\n                    value={ this.state.fieldsType }\n                    onChange={ this.onChangeFieldsType }\n                    style={{ marginLeft: 3, marginRight: 3 }}\n                  /> : null\n                }\n                {\n                  this.state.attackType === \"runes\" ?\n                  <MonsterMakerInputSelect\n                    selectItems={ this.props.appData.getAttacks().getRunesTypeArray() }\n                    value={ this.state.runesType }\n                    onChange={ this.onChangeRunesType }\n                    style={{ marginLeft: 3, marginRight: 3 }}\n                  /> : null\n                }\n                {\n                  this.state.attackType === \"spells\" ?\n                  <MonsterMakerInputSelect\n                    selectItems={ this.props.appData.getAttacks().getSpellsTypeArray() }\n                    value={ this.state.spellsType }\n                    onChange={ this.onChangeSpellsType }\n                    style={{ marginLeft: 3, marginRight: 3 }}\n                  /> : null\n                }\n                {\n                  this.state.attackType === \"other\" ?\n                  <MonsterMakerInput\n                    type=\"text\"\n                    value={ this.state.otherType }\n                    onChange={ this.onChangeOtherType }\n                    style={{ marginLeft: 3, marginRight: 3 }}\n                  /> : null\n                }\n              </FlexibleGrid>\n            </FlexibleGrid>\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <FlexibleGrid>\n            <FlexibleGrid>\n              <MonsterMakerLabel\n                text=\"Min\"\n                disabled={ this.state.skillChange && this.state.attackType === \"melee\" }\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n              <MonsterMakerInput\n                type=\"number\"\n                value={ this.state.min }\n                onChange={ this.onChangeMin }\n                disabled={ this.state.skillChange && this.state.attackType === \"melee\" }\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n            </FlexibleGrid>\n            <FlexibleGrid>\n              <MonsterMakerLabel\n                text=\"Max\"\n                disabled={ this.state.skillChange && this.state.attackType === \"melee\" }\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n              <MonsterMakerInput\n                type=\"number\"\n                value={ this.state.max }\n                onChange={ this.onChangeMax }\n                disabled={ this.state.skillChange && this.state.attackType === \"melee\" }\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n            </FlexibleGrid>\n          </FlexibleGrid>\n          {\n            this.state.attackType === \"melee\" ?\n              <FlexibleGrid>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  value={ this.state.skillChange }\n                  onChange={ this.onChangeSkillCheckbox }\n                  style={{ marginLeft: 3, marginRight: 3 }}\n                />\n                <FlexibleGrid>\n                  <MonsterMakerLabel\n                    text=\"Skill\"\n                    style={{ marginLeft: 3, marginRight: 3 }}\n                  />\n                  <MonsterMakerInput\n                    type=\"number\"\n                    value={ this.state.skill }\n                    onChange={ this.onChangeSkill }\n                    disabled={ !this.state.skillChange }\n                    style={{ marginLeft: 3, marginRight: 3 }}\n                  />\n                </FlexibleGrid>\n                <FlexibleGrid>\n                  <MonsterMakerLabel\n                    text=\"Attack\"\n                    disabled={ !this.state.skillChange }\n                    style={{ marginLeft: 3, marginRight: 3 }}\n                  />\n                  <MonsterMakerInput\n                    type=\"number\"\n                    value={ this.state.attack }\n                    onChange={ this.onChangeAttack }\n                    disabled={ !this.state.skillChange }\n                    style={{ marginLeft: 3, marginRight: 3 }}\n                  />\n                </FlexibleGrid>\n              </FlexibleGrid>\n            : null\n          }\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Interval\"\n            tooltip=\"It's how often the spell will be cast - 2000 = 2seconds.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.interval }\n            min=\"1000\"\n            onChange={ this.onChangeInterval }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Chance\"\n            tooltip=\"It's the chance to cast the spell successfully (in %).\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.chance }\n            min=\"1\"\n            onChange={ this.onChangeChance }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.lengthCheckbox }\n            onChange={ this.onChangeLengthCheckbox }\n            disabled={ this.state.radiusCheckbox }\n            tooltip=\"How long the beam/wave is - remember to set always spread='0'<br>If there is no spread it still will be cast as wave.<br>(So length='x' spread='0').\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Length\"\n            disabled={ this.state.radiusCheckbox }\n            tooltip=\"How long the beam/wave is - remember to set always spread='0'.<br>If there is no spread it still will be cast as wave.<br>(So length='x' spread='0').\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.length }\n            min=\"0\"\n            max=\"11\"\n            onChange={ this.onChangeLength }\n            disabled={ !this.state.lengthCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.spreadCheckbox }\n            onChange={ this.onChangeSpreadCheckbox }\n            disabled={ this.state.radiusCheckbox }\n            tooltip=\"How big spread is.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Spread\"\n            disabled={ this.state.radiusCheckbox }\n            tooltip=\"How big spread is.\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.spread }\n            min=\"0\"\n            max=\"3\"\n            onChange={ this.onChangeSpread }\n            disabled={ !this.state.spreadCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.radiusCheckbox }\n            onChange={ this.onChangeRadiusCheckbox }\n            disabled={ this.state.lengthCheckbox || this.state.spreadCheckbox }\n            tooltip=\"This is responsible for the size of area.<br>(Radius won't work with spread and length - if there's already length and/or spread do not add radius).\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Radius\"\n            disabled={ this.state.lengthCheckbox || this.state.spreadCheckbox}\n            tooltip=\"This is responsible for the size of area.<br>(Radius won't work with spread and length - if there's already length and/or spread do not add radius).\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.radius }\n            min=\"1\"\n            max=\"9\"\n            onChange={ this.onChangeRadius }\n            disabled={ !this.state.radiusCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.poisonCheckbox }\n            onChange={ this.onChangePoisonCheckbox }\n            tooltip=\"Makes target poisoned, formula is:<br>Desired damage(for example. 25hp/turn)*20 = 500 so poison='500'.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Poison\"\n            tooltip=\"Makes target poisoned, formula is:<br>Desired damage(for example. 25hp/turn)*20 = 500 so poison='500'.\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.poison }\n            min=\"1\"\n            onChange={ this.onChangePoison }\n            disabled={ !this.state.poisonCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.target }\n            onChange={ this.onChangeTarget }\n            tooltip=\"Checked target - spell cast on monster itself.<br>Unchecked target - spell cast on target.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Target\"\n            tooltip=\"Checked target - spell cast on monster itself.<br>Unchecked target - spell cast on target.\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Range\"\n            disabled={ !this.state.target }\n            tooltip=\"Means how far your monster can shoot a ranged spell.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.range }\n            min=\"1\"\n            max=\"12\"\n            onChange={ this.onChangeRange }\n            disabled={ !this.state.target }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.areaeffectCheckbox }\n            onChange={ this.onChangeAreaeffectCheckbox }\n            tooltip=\"There you can add various areaEffects for the spell.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Area Effect\"\n            tooltip=\"There you can add various areaEffects for the spell.\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInputSelect\n            selectItems={ areaEffect }\n            value={ this.state.areaeffect }\n            onChange={ this.onChangeAreaeffect }\n            disabled={ !this.state.areaeffectCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.shooteffectCheckbox }\n            onChange={ this.onChangeShooteffectCheckbox }\n            tooltip=\"There you can add various shootEffect for the spell.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Shoot Effect\"\n            tooltip=\"There you can add various shootEffect for the spell.\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInputSelect\n            selectItems={ shotEffect }\n            value={ this.state.shooteffect }\n            onChange={ this.onChangeShooteffect }\n            disabled={ !this.state.shooteffectCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabAttacks;\n","import React from 'react';\n\nconst monsterMakerDefaultH1 = {\n  textAlign: 'center',\n  fontSize: \"2em\",\n  margin: \".67em 0\",\n  fontWeight: 700\n};\n\nclass MonsterMakerTabDefault extends React.Component {\n  render() {\n    return (\n      <div className=\"tabMenu\">\n        <h1 style={monsterMakerDefaultH1} >Monster maker tool prepared for TFS 1.3</h1>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabDefault;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { defenseName, areaEffect } from '../consts'\nimport { MonsterMakerLabel, MonsterMakerInput, MonsterMakerInputSelect, MonsterMakerItemsTable, MonsterMakerButton } from '../components';\nimport { FlexibleGridContainer, FlexibleGrid } from '../components/FlexibleGrid';\n\nconst firstLabelWidth = { minWidth: 140 }\nconst secondLabelWidth = { minWidth: 122 }\n\nclass MonsterMakerTabDefenses extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      armor: this.props.appData.getDefenses().getArmor(),\n      defense: this.props.appData.getDefenses().getDefense(),\n\n      defenseName: this.props.appData.getDefenses().getDefenseName(),\n      interval: this.props.appData.getDefenses().getInterval(),\n      chance: this.props.appData.getDefenses().getChance(),\n      min: this.props.appData.getDefenses().getMin(),\n      max: this.props.appData.getDefenses().getMax(),\n      radiusCheckbox: this.props.appData.getDefenses().getRadiusCheckbox(),\n      radius: this.props.appData.getDefenses().getRadius(),\n      areaeffect: this.props.appData.getDefenses().getAreaeffect(),\n      duration: this.props.appData.getDefenses().getDuration(),\n      speedChange: this.props.appData.getDefenses().getSpeedChange(),\n\n      activeItem: this.props.activeItem\n    }\n  }\n\n  onChangeArmor = (event) => {\n    this.props.appData.getDefenses().setArmor(event.target.value);\n    this.setState({ armor: event.target.value });\n  }\n\n  onChangeDefense = (event) => {\n    this.props.appData.getDefenses().setDefense(event.target.value);\n    this.setState({ defense: event.target.value });\n  }\n\n  onChangeDefenseName = (event) => {\n    this.props.appData.getDefenses().setDefenseName(event.target.value);\n    this.setState({ defenseName: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexDefenseName(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeInterval = (event) => {\n    this.props.appData.getDefenses().setInterval(event.target.value);\n    this.setState({ interval: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexInterval(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeChance = (event) => {\n    this.props.appData.getDefenses().setChance(event.target.value);\n    this.setState({ chance: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexChance(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeMin = (event) => {\n    this.props.appData.getDefenses().setMin(event.target.value);\n    this.setState({ min: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexMin(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeMax = (event) => {\n    this.props.appData.getDefenses().setMax(event.target.value);\n    this.setState({ max: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexMax(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeRadiusCheckbox = (event) => {\n    this.props.appData.getDefenses().setRadiusCheckbox(!this.props.appData.getDefenses().getRadiusCheckbox());\n    this.setState({ radiusCheckbox: this.props.appData.getDefenses().getRadiusCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexRadiusCheckbox(this.state.activeItem, this.props.appData.getDefenses().getRadiusCheckbox());\n    }\n  }\n\n  onChangeRadius = (event) => {\n    this.props.appData.getDefenses().setRadius(event.target.value);\n    this.setState({ radius: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexRadius(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeAreaeffect = (event) => {\n    this.props.appData.getDefenses().setAreaeffect(event.target.value);\n    this.setState({ areaeffect: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexAreaeffect(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeDuration = (event) => {\n    this.props.appData.getDefenses().setDuration(event.target.value);\n    this.setState({ duration: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexDuration(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeSpeedChange = (event) => {\n    this.props.appData.getDefenses().setSpeedChange(event.target.value);\n    this.setState({ speedChange: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().setIndexSpeedChange(this.state.activeItem, event.target.value);\n    }\n  }\n\n  //Buttons action\n\n  clickAddButton = () => {\n    this.props.appData.getDefenses().addToDefenses();\n    this.forceUpdate();\n  }\n\n  clickDeleteButton = () => {\n    if (this.state.activeItem !== null) {\n      this.props.appData.getDefenses().deleteFromDefenses(this.state.activeItem);\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  //Refresh items\n  refreshItems = () => {\n    this.setState({\n      defenseName: this.props.appData.getDefenses().getDefenseName(),\n      interval: this.props.appData.getDefenses().getInterval(),\n      chance: this.props.appData.getDefenses().getChance(),\n      min: this.props.appData.getDefenses().getMin(),\n      max: this.props.appData.getDefenses().getMax(),\n      radiusCheckbox: this.props.appData.getDefenses().getRadiusCheckbox(),\n      radius: this.props.appData.getDefenses().getRadius(),\n      areaeffect: this.props.appData.getDefenses().getAreaeffect(),\n      duration: this.props.appData.getDefenses().getDuration(),\n      speedChange: this.props.appData.getDefenses().getSpeedChange()\n    });\n  }\n\n  //Active item\n  setActiveItem = (event) => {\n    if (this.state.activeItem !== event.target.id) {\n      this.setState({ activeItem: event.target.id });\n      this.props.appData.getDefenses().showDefenses(event.target.id);\n      this.refreshItems();\n      this.props.changeActiveItem(event.target.id);\n    } else {\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"tabMenu\">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" html={ true } />\n\n        <FlexibleGridContainer>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Armor:\"\n              tooltip=\"Values which will reduce incoming physical damage.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"number\"\n              min=\"1\"\n              value={ this.state.armor }\n              onChange={ this.onChangeArmor }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n          </FlexibleGrid>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Defense:\"\n              tooltip=\"Reduce incoming physical damage.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"number\"\n              min=\"1\"\n              value={ this.state.defense }\n              onChange={ this.onChangeDefense }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n          </FlexibleGrid>\n        </FlexibleGridContainer>\n\n        <MonsterMakerItemsTable\n          data = { this.props.appData.getDefenses().getAllXMLdefenses() }\n          changeActiveItem = { this.setActiveItem }\n          activeItem = { this.state.activeItem }\n        />\n        <div style = {{ display: 'initial' }}>\n          <MonsterMakerButton\n            icon = \"ra-health\"\n            onClick = { this.clickAddButton }\n            tooltip = \"Add to table\"\n          />\n          <MonsterMakerButton\n            icon = \"ra-burning-embers\"\n            onClick = { this.clickDeleteButton }\n            tooltip = \"Delete from table\"\n          />\n        </div>\n\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Defense name\"\n            tooltip=\"Choose defense type.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInputSelect\n            selectItems={ defenseName }\n            value={ this.state.defenseName }\n            onChange={ this.onChangeDefenseName }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Interval\"\n            tooltip=\"It's how often the spell will be cast - 2000 = 2seconds.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.interval }\n            min=\"1000\"\n            onChange={ this.onChangeInterval }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Chance\"\n            tooltip=\"It's the chance to cast the spell successfully (in %).\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.chance }\n            min=\"1\"\n            onChange={ this.onChangeChance }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Min\"\n              disabled={ this.state.defenseName !== 'healing' }\n              tooltip=\"Minimum heal points.\"\n              width={ firstLabelWidth }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"number\"\n              min=\"1\"\n              value={ this.state.min }\n              onChange={ this.onChangeMin }\n              disabled={ this.state.defenseName !== 'healing' }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n          </FlexibleGrid>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Max\"\n              disabled={ this.state.defenseName !== 'healing' }\n              tooltip=\"Maximum heal points.\"\n              width={ firstLabelWidth }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"number\"\n              min=\"1\"\n              value={ this.state.max }\n              onChange={ this.onChangeMax }\n              disabled={ this.state.defenseName !== 'healing' }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n          </FlexibleGrid>\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.radiusCheckbox }\n            onChange={ this.onChangeRadiusCheckbox }\n            disabled={ this.state.defenseName !== 'healing' }\n            tooltip=\"Size of spell area.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Radius\"\n            disabled={ this.state.defenseName !== 'healing' }\n            tooltip=\"Size of spell area.\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.radius }\n            min=\"1\"\n            max=\"9\"\n            onChange={ this.onChangeRadius }\n            disabled={ this.state.defenseName !== 'healing' || !this.state.radiusCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Area Effect\"\n            tooltip=\"Choose area effect for spell.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInputSelect\n            selectItems={ areaEffect }\n            value={ this.state.areaeffect }\n            onChange={ this.onChangeAreaeffect }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Duration\"\n            disabled={ this.state.defenseName === 'healing' }\n            tooltip=\"How long it lasts.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.duration }\n            min=\"1\"\n            onChange={ this.onChangeDuration }\n            disabled={ this.state.defenseName === 'healing' }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Speed change\"\n            disabled={ this.state.defenseName !== 'speed' }\n            tooltip=\"Starting from monsterBaseSpeed+numbers, so if monsterBaseSpeed is 200 then put more than 200 in order to have results.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.speedChange }\n            min=\"1\"\n            onChange={ this.onChangeSpeedChange }\n            disabled={ this.state.defenseName !== 'speed' }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabDefenses;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { MonsterMakerLabel, MonsterMakerInput} from '../components';\nimport { FlexibleGridContainer } from '../components/FlexibleGrid';\n\nconst firstLabelWidth = { minWidth: 120 }\n\nclass MonsterMakerTabElements extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      holy: this.props.appData.getElements().getHoly(),\n      death: this.props.appData.getElements().getDeath(),\n      ice: this.props.appData.getElements().getIce(),\n      fire: this.props.appData.getElements().getFire(),\n      earth: this.props.appData.getElements().getEarth(),\n      energy: this.props.appData.getElements().getEnergy(),\n      physical: this.props.appData.getElements().getPhysical(),\n      lifeDrain: this.props.appData.getElements().getLifeDrain(),\n      drown: this.props.appData.getElements().getDrown()\n    };\n  }\n\n  onChangeHoly = (event) => {\n    this.setState({ holy: event.target.value });\n    this.props.appData.getElements().setHoly(event.target.value);\n  }\n  \n  onChangeDeath = (event) => {\n    this.setState({ death: event.target.value });\n    this.props.appData.getElements().setDeath(event.target.value);\n  }\n  \n  onChangeIce = (event) => {\n    this.setState({ ice: event.target.value });\n    this.props.appData.getElements().setIce(event.target.value);\n  }\n  \n  onChangeFire = (event) => {\n    this.setState({ fire: event.target.value });\n    this.props.appData.getElements().setFire(event.target.value);\n  }\n  \n  onChangeEarth = (event) => {\n    this.setState({ earth: event.target.value });\n    this.props.appData.getElements().setEarth(event.target.value);\n  }\n  \n  onChangeEnergy = (event) => {\n    this.setState({ energy: event.target.value });\n    this.props.appData.getElements().setEnergy(event.target.value);\n  }\n  \n  onChangePhysical = (event) => {\n    this.setState({ physical: event.target.value });\n    this.props.appData.getElements().setPhysical(event.target.value);\n  }\n  \n  onChangeLifeDrain = (event) => {\n    this.setState({ lifeDrain: event.target.value });\n    this.props.appData.getElements().setLifeDrain(event.target.value);\n  }\n  \n  onChangeDrown = (event) => {\n    this.setState({ drown: event.target.value });\n    this.props.appData.getElements().setDrown(event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"tabMenu\">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" html={ true } />\n\n        <MonsterMakerLabel\n          text=\"Elements\"\n          tooltip=\"Resistance or weakness to certain elements to your monster.<br>+ Minus values - Means that your monster will be weak to certain element.<br>You can put there any value you want, starting from -1.<br>+ Positive values - Means that your monster will be resistant to certain element.<br>You can put there values starting from 1 ending on 99 (100 would mean full immunity and there's different category).<br>* If you put here 100% resistance to for example fire, you monster yes will be immune to fire but it will also WALK AROUND FIRE FIELDS,<br>not onto them as it's supposed to be and you don't want that to happen.\"\n          style={{ marginLeft: 3, marginRight: 3 }}\n        />\n        <FlexibleGridContainer>\n            <MonsterMakerLabel\n              text=\"Holy\"\n              tooltip=\"Values in percent.\"\n              width={ firstLabelWidth }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"number\"\n              value={ this.state.holy }\n              min=\"-100\"\n              max=\"100\"\n              onChange={ this.onChangeHoly }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"range\"\n              style={{ width: \"100%\", marginLeft: 3, marginRight: 3 }}\n              value={ this.state.holy }\n              onChange={ this.onChangeHoly }\n              min=\"-100\"\n              max=\"100\"\n              step=\"1\"\n            />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Death\"\n            tooltip=\"Values in percent.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.death }\n            min=\"-100\"\n            max=\"100\"\n            onChange={ this.onChangeDeath }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"range\"\n            style={{ width: \"100%\", marginLeft: 3, marginRight: 3 }}\n            value={ this.state.death }\n            onChange={ this.onChangeDeath }\n            min=\"-100\"\n            max=\"100\"\n            step=\"1\"\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Ice\"\n            tooltip=\"Values in percent.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.ice }\n            min=\"-100\"\n            max=\"100\"\n            onChange={ this.onChangeIce }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"range\"\n            style={{ width: \"100%\", marginLeft: 3, marginRight: 3 }}\n            value={ this.state.ice }\n            onChange={ this.onChangeIce }\n            min=\"-100\"\n            max=\"100\"\n            step=\"1\"\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Fire\"\n            tooltip=\"Values in percent.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.fire }\n            min=\"-100\"\n            max=\"100\"\n            onChange={ this.onChangeFire }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"range\"\n            style={{ width: \"100%\", marginLeft: 3, marginRight: 3 }}\n            value={ this.state.fire }\n            onChange={this.onChangeFire}\n            min=\"-100\"\n            max=\"100\"\n            step=\"1\"\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Earth\"\n            tooltip=\"Values in percent.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.earth }\n            min=\"-100\"\n            max=\"100\"\n            onChange={ this.onChangeEarth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"range\"\n            style={{ width: \"100%\", marginLeft: 3, marginRight: 3 }}\n            value={ this.state.earth }\n            onChange={ this.onChangeEarth }\n            min=\"-100\"\n            max=\"100\"\n            step=\"1\"\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Energy\"\n            tooltip=\"Values in percent.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.energy }\n            min=\"-100\"\n            max=\"100\"\n            onChange={ this.onChangeEnergy }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"range\"\n            style={{ width: \"100%\", marginLeft: 3, marginRight: 3 }}\n            value={ this.state.energy }\n            onChange={ this.onChangeEnergy }\n            min=\"-100\"\n            max=\"100\"\n            step=\"1\"\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Physical\"\n            tooltip=\"Values in percent.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.physical }\n            min=\"-100\"\n            max=\"100\"\n            onChange={ this.onChangePhysical }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"range\"\n            style={{ width: \"100%\", marginLeft: 3, marginRight: 3 }}\n            value={ this.state.physical }\n            onChange={ this.onChangePhysical }\n            min=\"-100\"\n            max=\"100\"\n            step=\"1\"\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Life Drain\"\n            tooltip=\"Values in percent.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.lifeDrain }\n            min=\"-100\"\n            max=\"100\"\n            onChange={ this.onChangeLifeDrain }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"range\"\n            style={{ width: \"100%\", marginLeft: 3, marginRight: 3 }}\n            value={ this.state.lifeDrain }\n            onChange={ this.onChangeLifeDrain }\n            min=\"-100\"\n            max=\"100\"\n            step=\"1\"\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Drown\"\n            tooltip=\"Values in percent.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.drown }\n            min=\"-100\"\n            max=\"100\"\n            onChange={ this.onChangeDrown }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"range\"\n            style={{ width: \"100%\", marginLeft: 3, marginRight: 3 }}\n            value={ this.state.drown }\n            onChange={ this.onChangeDrown }\n            min=\"-100\"\n            max=\"100\"\n            step=\"1\"\n          />\n        </FlexibleGridContainer>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabElements;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { MonsterMakerLabel, MonsterMakerInput} from '../components';\nimport { FlexibleGridContainer } from '../components/FlexibleGrid';\n\nclass MonsterMakerTabFlags extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      staticattack: this.props.appData.getFlags().getStaticattack(),\n      runonhealth: this.props.appData.getFlags().getRunonhealth(),\n      lightcolorChange: this.props.appData.getFlags().getLightcolor() === \"0\" ? false : true\n    };\n  }\n\n  onChangeSummonable = (event) => {\n    this.props.appData.getFlags().setSummonable(!this.props.appData.getFlags().getSummonable());\n  }\n\n  onChangeAttackable = (event) => {\n    this.props.appData.getFlags().setAttackable(!this.props.appData.getFlags().getAttackable());\n  }\n\n  onChangeHostile = (event) => {\n    this.props.appData.getFlags().setHostile(!this.props.appData.getFlags().getHostile());\n  }\n\n  onChangeIllusionable = (event) => {\n    this.props.appData.getFlags().setIllusionable(!this.props.appData.getFlags().getIllusionable());\n  }\n\n  onChangeConvinceable = (event) => {\n    this.props.appData.getFlags().setConvinceable(!this.props.appData.getFlags().getConvinceable());\n  }\n\n  onChangePushable = (event) => {\n    this.props.appData.getFlags().setPushable(!this.props.appData.getFlags().getPushable());\n  }\n\n  onChangeCanpushitems = (event) => {\n    this.props.appData.getFlags().setCanpushitems(!this.props.appData.getFlags().getCanpushitems());\n  }\n\n  onChangeCanpushcreatures = (event) => {\n    this.props.appData.getFlags().setCanpushcreatures(!this.props.appData.getFlags().getCanpushcreatures());\n  }\n\n  onChangeTargetdistance = (event) => {\n    this.props.appData.getFlags().setTargetdistance(event.target.value);\n  }\n\n  onChangeStaticattack = (event) => {\n    this.setState({ staticattack: event.target.value });\n    this.props.appData.getFlags().setStaticattack(event.target.value);\n  }\n\n  onChangeHidehealth = (event) => {\n    this.props.appData.getFlags().setHidehealth(!this.props.appData.getFlags().getHidehealth());\n  }\n\n  onChangeLightcolor = (event) => {\n    if (event.target.value === \"0\") {\n      this.setState({ lightcolorChange: false });\n    } else {\n      this.setState({ lightcolorChange: true });\n    }\n    this.props.appData.getFlags().setLightcolor(event.target.value);\n  }\n\n  onChangeLightlevel = (event) => {\n    this.props.appData.getFlags().setLightlevel(event.target.value);\n  }\n\n  onChangeRunonhealth = (event) => {\n    this.setState({ runonhealth: event.target.value });\n    this.props.appData.getFlags().setRunonhealth(event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"tabMenu\">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" html={ true } />\n\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeSummonable }\n            defaultChecked={ this.props.appData.getFlags().getSummonable() }\n            tooltip=\"Check if you want your monster to be summoned.<br>(You need to add value to mana='x' in order to spent mana when summoned).<br>Uncheck if you dont want it to be summoned.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Summonable\"\n            tooltip=\"Check if you want your monster to be summoned.<br>(You need to add value to mana='x' in order to spent mana when summoned).<br>Uncheck if you dont want it to be summoned.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeAttackable }\n            defaultChecked={ this.props.appData.getFlags().getAttackable() }\n            tooltip=\"Check so you can attack it.<br>Uncheck if you dont want it to be attackable.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Attackable\"\n            tooltip=\"Check so you can attack it.<br>Uncheck if you dont want it to be attackable.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeHostile }\n            defaultChecked={ this.props.appData.getFlags().getHostile() }\n            tooltip=\"Check so your monster will be aggressive.<br>Uncheck if you want your monster to be friendly(like 'deer').\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Hostile\"\n            tooltip=\"Check so your monster will be aggressive.<br>Uncheck if you want your monster to be friendly(like 'deer').\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n            <MonsterMakerInput\n              type=\"checkbox\"\n              onChange={ this.onChangeIllusionable }\n              defaultChecked={ this.props.appData.getFlags().getIllusionable() }\n              tooltip=\"Check if you want players to change into this monster using 'Creature Illusion' spell.<br>Uncheck if it shouldn't be illusionable.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerLabel\n              text=\"Illusionable\"\n              tooltip=\"Check if you want players to change into this monster using 'Creature Illusion' spell.<br>Uncheck if it shouldn't be illusionable.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeConvinceable }\n            defaultChecked={ this.props.appData.getFlags().getConvinceable() }\n            tooltip=\"Check if you want your monster to be convinced using 'Convince Creature Rune'.<br>(You need to add value to mana='x' in order to spent mana when summoned).<br>Uncheck if you dont want it to be convinced.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Convinceable\"\n            tooltip=\"Check if you want your monster to be convinced using 'Convince Creature Rune'.<br>(You need to add value to mana='x' in order to spent mana when summoned).<br>Uncheck if you dont want it to be convinced.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangePushable }\n            defaultChecked={ this.props.appData.getFlags().getPushable() }\n            tooltip=\"Check if you want your monster to be pushed by players or other monsters.<br>(Can be killed with that sometimes).\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Pushable\"\n            tooltip=\"Check if you want your monster to be pushed by players or other monsters.<br>(Can be killed with that sometimes).\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeCanpushitems }\n            defaultChecked={ this.props.appData.getFlags().getCanpushitems() }\n            tooltip=\"Check if you want your monster to push other things like boxes, chests etc.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Canpushitems\"\n            tooltip=\"Check if you want your monster to push other things like boxes, chests etc.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeCanpushcreatures }\n            defaultChecked={ this.props.appData.getFlags().getCanpushcreatures() }\n            tooltip=\"Check if you want your monster to push other creatures.<br>(Only creatures with checked pushable, else wont push).\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Canpushcreatures\"\n            tooltip=\"Check if you want your monster to push other creatures.<br>(Only creatures with checked pushable, else wont push).\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Targetdistance:\"\n            tooltip=\"It's the range which creature keeps between him and target.<br>So put '1' if you want your creature to fight in melee range (close to you) or put '4' if you want it to keep distance like a warlock.<br>(Of course you can put also '2' or '8' targetdistance, '1' and '4' are values used the most).\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            min=\"0\"\n            max=\"20\"\n            defaultValue={ this.props.appData.getFlags().getTargetdistance() }\n            onChange={ this.onChangeTargetdistance }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <MonsterMakerLabel\n          text={ \"Staticattack: \" + this.state.staticattack }\n          tooltip=\"This flag is responsible for monster 'dancing' around target.<br>So if you put '100' monster won't move around it's target at all, if you put '1' it will be dancing around you like crazy.<br>I suggest to use it between 85-95.\"\n          style={{ marginLeft: 3, marginRight: 3 }}\n        />\n        <MonsterMakerInput\n          type=\"range\"\n          style={{ width: \"100%\", marginLeft: 3, marginRight: 3 }}\n          defaultValue={ this.props.appData.getFlags().getStaticattack() }\n          onChange={ this.onChangeStaticattack }\n          min=\"0\"\n          max=\"100\"\n          step=\"1\"\n        />\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeHidehealth }\n            defaultChecked={ this.props.appData.getFlags().getHidehealth() }\n            tooltip=\"Check if you want your monster healthbar and name to be invisible.<br>(You won't be able to target it - no red box around monster).<br>The only monster using it are traps like - plaguethrower, flamethrower, shredderthrower etc.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Hidehealth\"\n            tooltip=\"Check if you want your monster healthbar and name to be invisible.<br>(You won't be able to target it - no red box around monster).<br>The only monster using it are traps like - plaguethrower, flamethrower, shredderthrower etc.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Lightcolor:\"\n            tooltip=\"Put '0' so monster wont emite any light at all.<br>Put from 1 - 255 so it will emit light of that color.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            min=\"0\"\n            max=\"255\"\n            defaultValue={ this.props.appData.getFlags().getLightcolor() }\n            onChange={ this.onChangeLightcolor }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Lightlevel:\"\n            tooltip=\"This is responsible for lightlevel.<br>(Works only if your lightcolor is greater than 0).\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            min=\"1\"\n            max=\"100\"\n            defaultValue={ this.props.appData.getFlags().getLightlevel() }\n            onChange={ this.onChangeLightlevel }\n            disabled={ !this.state.lightcolorChange }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <MonsterMakerLabel\n          text={ \"Runonhealth: \" + this.state.runonhealth }\n          tooltip=\"This flag is responsible for monster running away - number is the amount of health.<br>So if runonhealth='5' means that your creature will run when it's health is 5 or below.<br>Runonhealth='0' means that creature will fight until death.\"\n          style={{ marginLeft: 3, marginRight: 3 }}\n        />\n        <MonsterMakerInput\n          type=\"range\"\n          style={{ width: \"100%\", marginLeft: 3, marginRight: 3 }}\n          defaultValue={ this.props.appData.getFlags().getRunonhealth() }\n          onChange={ this.onChangeRunonhealth }\n          min=\"0\"\n          max=\"100\"\n          step=\"1\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabFlags;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { MonsterMakerLabel, MonsterMakerInput} from '../components';\nimport { FlexibleGridContainer } from '../components/FlexibleGrid';\n\nclass MonsterMakerTabImmunities extends React.Component {\n  onChangeHoly = (event) => {\n    this.props.appData.getImmunities().setHoly(!this.props.appData.getImmunities().getHoly());\n  }\n\n  onChangeDeath = (event) => {\n    this.props.appData.getImmunities().setDeath(!this.props.appData.getImmunities().getDeath());\n  }\n\n  onChangeIce = (event) => {\n    this.props.appData.getImmunities().setIce(!this.props.appData.getImmunities().getIce());\n  }\n\n  onChangeFire = (event) => {\n    this.props.appData.getImmunities().setFire(!this.props.appData.getImmunities().getFire());\n  }\n\n  onChangeEarth = (event) => {\n    this.props.appData.getImmunities().setEarth(!this.props.appData.getImmunities().getEarth());\n  }\n\n  onChangeEnergy = (event) => {\n    this.props.appData.getImmunities().setEnergy(!this.props.appData.getImmunities().getEnergy());\n  }\n\n  onChangePhysical = (event) => {\n    this.props.appData.getImmunities().setPhysical(!this.props.appData.getImmunities().getPhysical());\n  }\n\n  onChangeLifeDrain = (event) => {\n    this.props.appData.getImmunities().setLifeDrain(!this.props.appData.getImmunities().getLifeDrain());\n  }\n\n  onChangeDrown = (event) => {\n    this.props.appData.getImmunities().setDrown(!this.props.appData.getImmunities().getDrown());\n  }\n\n  onChangeParalyze = (event) => {\n    this.props.appData.getImmunities().setParalyze(!this.props.appData.getImmunities().getParalyze());\n  }\n\n  onChangeDrunk = (event) => {\n    this.props.appData.getImmunities().setDrunk(!this.props.appData.getImmunities().getDrunk());\n  }\n\n  onChangeInvisible = (event) => {\n    this.props.appData.getImmunities().setInvisible(!this.props.appData.getImmunities().getInvisible());\n  }\n\n  onChangeOutfit = (event) => {\n    this.props.appData.getImmunities().setOutfit(!this.props.appData.getImmunities().getOutfit());\n  }\n\n  render() {\n    return (\n      <div className=\"tabMenu\">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" html={ true } />\n\n        <MonsterMakerLabel\n          text=\"Immunities\"\n          tooltip=\"Select to set immunities.\"\n          style={{ marginLeft: 3, marginRight: 3 }}\n        />\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={this.onChangeHoly}\n            defaultChecked={ this.props.appData.getImmunities().getHoly() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Holy\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeDeath }\n            defaultChecked={ this.props.appData.getImmunities().getDeath() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Death\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeIce }\n            defaultChecked={ this.props.appData.getImmunities().getIce() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Ice\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeFire }\n            defaultChecked={ this.props.appData.getImmunities().getFire() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Fire\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeEarth }\n            defaultChecked={ this.props.appData.getImmunities().getEarth() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Earth\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeEnergy }\n            defaultChecked={ this.props.appData.getImmunities().getEnergy() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Energy\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangePhysical }\n            defaultChecked={ this.props.appData.getImmunities().getPhysical() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Physical\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeLifeDrain }\n            defaultChecked={ this.props.appData.getImmunities().getLifeDrain() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Life Drain\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeDrown }\n            defaultChecked={ this.props.appData.getImmunities().getDrown() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Drown\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeParalyze }\n            defaultChecked={ this.props.appData.getImmunities().getParalyze() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Paralyze\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeDrunk }\n            defaultChecked={ this.props.appData.getImmunities().getDrunk() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Drunk\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            onChange={ this.onChangeInvisible }\n            defaultChecked={ this.props.appData.getImmunities().getInvisible() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Invisible\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n            <MonsterMakerInput\n              type=\"checkbox\"\n              onChange={ this.onChangeOutfit }\n              defaultChecked={ this.props.appData.getImmunities().getOutfit() }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerLabel\n              text=\"Outfit\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n        </FlexibleGridContainer>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabImmunities;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { MonsterMakerLabel, MonsterMakerInput, MonsterMakerButton, MonsterMakerCode} from '../components';\nimport { FlexibleGridContainer, FlexibleGrid } from '../components/FlexibleGrid';\n\nclass MonsterMakerTabIO extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      ownNameCheckbox: this.props.appData.getIO().getOwnNameCheckbox(),\n      ownName: this.props.appData.getIO().getOwnName(),\n\n      name: this.props.appData.getIO().getName(),\n      fileOwnName: ''\n    }\n  }\n\n  onChangeOwnNameCheckbox = (event) => {\n    this.props.appData.getIO().setOwnNameCheckbox(!this.props.appData.getIO().getOwnNameCheckbox());\n    this.setState({ ownNameCheckbox: this.props.appData.getIO().getOwnNameCheckbox() });\n    if (this.props.appData.getIO().getOwnNameCheckbox()) {\n      this.setState({ name: this.state.ownName });\n      this.props.appData.getIO().setName(this.state.ownName);\n    } else {\n      this.setState({ name: this.props.appData.getMonster().getName() });\n      this.props.appData.getIO().setName(this.props.appData.getMonster().getName());\n    }\n  }\n\n  onChangeOwnName = (event) => {\n    this.props.appData.getIO().setOwnName(event.target.value);\n    this.setState({ ownName: event.target.value });\n    this.setState({ name: event.target.value });\n    this.props.appData.getIO().setName(event.target.value);\n  }\n\n  onChangePath = (event) => {\n    this.props.appData.getIO().loadFile(event.target.files[0]);\n    \n    let newName = event.target.files[0].name;\n    if (newName.substring(newName.length - 4, newName.length) === '.xml') {\n      newName = newName.substring(0, newName.length - 4);\n    }\n    this.setState({ fileOwnName: newName })\n  }\n\n  downloadFile = () => {\n    this.props.appData.downloadFile();\n  }\n\n  uploadFile = () => {\n    if (window.confirm('Are you sure you wish to load a file and lost current data?')) {\n      this.props.appData.parseXMLFile();\n\n      if (this.state.fileOwnName !== '') {\n        this.props.appData.getIO().setOwnNameCheckbox(true);\n        this.props.appData.getIO().setOwnName(this.state.fileOwnName);\n        this.props.appData.getIO().setName(this.state.fileOwnName);\n        this.setState({\n          ownName: this.props.appData.getIO().getOwnName(),\n          name: this.props.appData.getIO().getName(),\n          ownNameCheckbox: this.props.appData.getIO().getOwnNameCheckbox()\n        });\n      } else {\n        this.props.appData.getIO().setOwnNameCheckbox(false);\n        this.setState({ name: this.props.appData.getMonster().getName() });\n      }\n    }\n  }\n\n  setDefaultValue = () => {\n    if (window.confirm('Are you sure you wish to clear all this items?')) {\n      this.props.appData.setDefaultValue();\n      this.setState({\n        ownNameCheckbox: this.props.appData.getIO().getOwnNameCheckbox(),\n        ownName: this.props.appData.getIO().getOwnName(),\n        name: this.props.appData.getMonster().getName()\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"tabMenu\">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" html={ true } />\n\n        <MonsterMakerLabel text=\"Export\" />\n        <hr/>\n\n        <FlexibleGridContainer>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"File name: \"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerLabel\n              text={ this.state.name + \".xml\" }\n              style={{ minWidth: 100, color: 'green', marginLeft: 3, marginRight: 3 }}\n            />\n          </FlexibleGrid>\n          <FlexibleGrid>\n            <MonsterMakerInput\n              type=\"checkbox\"\n              checked={ this.state.ownNameCheckbox }\n              onChange={ this.onChangeOwnNameCheckbox }\n              tooltip=\"Set if you want add own name.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerLabel\n              text=\"Own name\"\n              tooltip=\"Set if you want add own name.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"text\"\n              value={ this.state.ownName }\n              onChange={ this.onChangeOwnName }\n              disabled={ !this.state.ownNameCheckbox }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n          </FlexibleGrid>\n        </FlexibleGridContainer>\n\n        <MonsterMakerButton\n          icon = \"ra-load\"\n          onClick = { this.downloadFile }\n          tooltip = \"Download file\"\n        />\n        <MonsterMakerLabel text=\"Import\" />\n\n        <hr/>\n\n        <MonsterMakerInput\n          type=\"file\"\n          style={{ margin: 5 }}\n          onChange={ this.onChangePath }\n        />\n        <MonsterMakerButton\n          icon = \"ra-save\"\n          onClick = { this.uploadFile }\n          tooltip = \"Load file\"\n        />\n        <MonsterMakerLabel text=\"Other\" />\n\n        <hr/>\n\n        <MonsterMakerButton\n          icon = \"ra-recycle\"\n          onClick = { this.setDefaultValue }\n          tooltip = \"Clear all data\"\n        />\n\n        <MonsterMakerCode text={ this.props.appData.getLineMonstersXML() } />\n        <MonsterMakerCode text={ this.props.appData.getXML() } />\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabIO;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { subtype } from '../consts'\nimport { MonsterMakerLabel, MonsterMakerInput, MonsterMakerInputSelect, MonsterMakerItemsTable, MonsterMakerButton } from '../components';\nimport { FlexibleGridContainer, FlexibleGrid } from '../components/FlexibleGrid';\n\nconst firstLabelWidth = { minWidth: 200 }\nconst secondLabelWidth = { minWidth: 181 }\n\nclass MonsterMakerTabLoot extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      id: this.props.appData.getLoot().getId(),\n      nameCheckbox: this.props.appData.getLoot().getNameCheckbox(),\n      name: this.props.appData.getLoot().getName(),\n      chance: this.props.appData.getLoot().getChance(),\n      countMaxCheckbox: this.props.appData.getLoot().getCountMaxCheckbox(),\n      countMax: this.props.appData.getLoot().getCountMax(),\n      subtypeCheckbox: this.props.appData.getLoot().getSubtypeCheckbox(),\n      subtype: this.props.appData.getLoot().getSubtype(),\n      actionIdCheckbox: this.props.appData.getLoot().getActionIdCheckbox(),\n      actionId: this.props.appData.getLoot().getActionId(),\n      uniqueIdCheckbox: this.props.appData.getLoot().getUniqueIdCheckbox(),\n      uniqueId: this.props.appData.getLoot().getUniqueId(),\n      textCheckbox: this.props.appData.getLoot().getTextCheckbox(),\n      text: this.props.appData.getLoot().getText(),\n      commentCheckbox: this.props.appData.getLoot().getCommentCheckbox(),\n      comment: this.props.appData.getLoot().getComment(),\n\n      activeItem: this.props.activeItem\n    }\n  }\n\n  onChangeId = (event) => {\n    this.props.appData.getLoot().setId(event.target.value);\n    this.setState({ id: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexId(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeNameCheckbox = (event) => {\n    this.props.appData.getLoot().setNameCheckbox(!this.props.appData.getLoot().getNameCheckbox());\n    this.setState({ nameCheckbox: this.props.appData.getLoot().getNameCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexNameCheckbox(this.state.activeItem, this.props.appData.getLoot().getNameCheckbox());\n    }\n  }\n\n  onChangeName = (event) => {\n    this.props.appData.getLoot().setName(event.target.value);\n    this.setState({ name: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexName(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeChance = (event) => {\n    this.props.appData.getLoot().setChance(event.target.value);\n    this.setState({ chance: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexChance(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeCountMaxCheckbox = (event) => {\n    this.props.appData.getLoot().setCountMaxCheckbox(!this.props.appData.getLoot().getCountMaxCheckbox());\n    this.setState({ countMaxCheckbox: this.props.appData.getLoot().getCountMaxCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexCountMaxCheckbox(this.state.activeItem, this.props.appData.getLoot().getCountMaxCheckbox());\n    }\n  }\n\n  onChangeCountMax = (event) => {\n    this.props.appData.getLoot().setCountMax(event.target.value);\n    this.setState({ countMax: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexCountMax(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeSubtypeCheckbox = (event) => {\n    this.props.appData.getLoot().setSubtypeCheckbox(!this.props.appData.getLoot().getSubtypeCheckbox());\n    this.setState({ subtypeCheckbox: this.props.appData.getLoot().getSubtypeCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexSubtypeCheckbox(this.state.activeItem, this.props.appData.getLoot().getSubtypeCheckbox());\n    }\n  }\n\n  onChangeSubtype = (event) => {\n    this.props.appData.getLoot().setSubtype(event.target.value);\n    this.setState({ subtype: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexSubtype(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeActionIdCheckbox = (event) => {\n    this.props.appData.getLoot().setActionIdCheckbox(!this.props.appData.getLoot().getActionIdCheckbox());\n    this.setState({ actionIdCheckbox: this.props.appData.getLoot().getActionIdCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexActionIdCheckbox(this.state.activeItem, this.props.appData.getLoot().getActionIdCheckbox());\n    }\n  }\n\n  onChangeActionId = (event) => {\n    this.props.appData.getLoot().setActionId(event.target.value);\n    this.setState({ actionId: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexActionId(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeUniqueIdCheckbox = (event) => {\n    this.props.appData.getLoot().setUniqueIdCheckbox(!this.props.appData.getLoot().getUniqueIdCheckbox());\n    this.setState({ uniqueIdCheckbox: this.props.appData.getLoot().getUniqueIdCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexUniqueIdCheckbox(this.state.activeItem, this.props.appData.getLoot().getUniqueIdCheckbox());\n    }\n  }\n\n  onChangeUniqueId = (event) => {\n    this.props.appData.getLoot().setUniqueId(event.target.value);\n    this.setState({ uniqueId: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexUniqueId(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeTextCheckbox = (event) => {\n    this.props.appData.getLoot().setTextCheckbox(!this.props.appData.getLoot().getTextCheckbox());\n    this.setState({ textCheckbox: this.props.appData.getLoot().getTextCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexTextCheckbox(this.state.activeItem, this.props.appData.getLoot().getTextCheckbox());\n    }\n  }\n\n  onChangeText = (event) => {\n    this.props.appData.getLoot().setText(event.target.value);\n    this.setState({ text: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexText(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeCommentCheckbox = (event) => {\n    this.props.appData.getLoot().setCommentCheckbox(!this.props.appData.getLoot().getCommentCheckbox());\n    this.setState({ commentCheckbox: this.props.appData.getLoot().getCommentCheckbox() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexCommentCheckbox(this.state.activeItem, this.props.appData.getLoot().getCommentCheckbox());\n    }\n  }\n\n  onChangeComment = (event) => {\n    this.props.appData.getLoot().setComment(event.target.value);\n    this.setState({ comment: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().setIndexComment(this.state.activeItem, event.target.value);\n    }\n  }\n\n  //Buttons action\n\n  clickAddButton = () => {\n    this.props.appData.getLoot().addToLoot();\n    this.forceUpdate();\n  }\n\n  clickDeleteButton = () => {\n    if (this.state.activeItem !== null) {\n      this.props.appData.getLoot().deleteFromLoot(this.state.activeItem);\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  //Refresh items\n  refreshItems = () => {\n    this.setState({\n      id: this.props.appData.getLoot().getId(),\n      nameCheckbox: this.props.appData.getLoot().getNameCheckbox(),\n      name: this.props.appData.getLoot().getName(),\n      chance: this.props.appData.getLoot().getChance(),\n      countMaxCheckbox: this.props.appData.getLoot().getCountMaxCheckbox(),\n      countMax: this.props.appData.getLoot().getCountMax(),\n      subtypeCheckbox: this.props.appData.getLoot().getSubtypeCheckbox(),\n      subtype: this.props.appData.getLoot().getSubtype(),\n      actionIdCheckbox: this.props.appData.getLoot().getActionIdCheckbox(),\n      actionId: this.props.appData.getLoot().getActionId(),\n      uniqueIdCheckbox: this.props.appData.getLoot().getUniqueIdCheckbox(),\n      uniqueId: this.props.appData.getLoot().getUniqueId(),\n      textCheckbox: this.props.appData.getLoot().getTextCheckbox(),\n      text: this.props.appData.getLoot().getText(),\n      commentCheckbox: this.props.appData.getLoot().getCommentCheckbox(),\n      comment: this.props.appData.getLoot().getComment(),\n    });\n  }\n\n  //Active item\n  setActiveItem = (event) => {\n    if (this.state.activeItem !== event.target.id) {\n      this.setState({ activeItem: event.target.id });\n      this.props.appData.getLoot().showLoot(event.target.id);\n      this.refreshItems();\n      this.props.changeActiveItem(event.target.id);\n    } else {\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"tabMenu\">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" html={ true } />\n\n        <MonsterMakerItemsTable\n          data = { this.props.appData.getLoot().getAllXMLLoot() }\n          changeActiveItem = { this.setActiveItem }\n          activeItem = { this.state.activeItem }\n        />\n        <div style = {{ display: 'initial' }}>\n          <MonsterMakerButton\n            icon = \"ra-health\"\n            onClick = { this.clickAddButton }\n            tooltip = \"Add to table\"\n          />\n          <MonsterMakerButton\n            icon = \"ra-burning-embers\"\n            onClick = { this.clickDeleteButton }\n            tooltip = \"Delete from table\"\n          />\n        </div>\n\n        <FlexibleGridContainer>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Id\"\n              tooltip=\"Put itemid of item you want to being dropped by creature.\"\n              width={ firstLabelWidth }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"number\"\n              value={ this.state.id }\n              min=\"1\"\n              max=\"100000\"\n              onChange={ this.onChangeId }\n              disabled={ this.state.nameCheckbox }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n          </FlexibleGrid>\n          <FlexibleGrid>\n            <MonsterMakerInput\n              type=\"checkbox\"\n              checked={ this.state.nameCheckbox }\n              onChange={ this.onChangeNameCheckbox }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerLabel\n              text=\"Name\"\n              tooltip=\"Put name of item you want to being dropped by creature.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"text\"\n              value={ this.state.name }\n              onChange={ this.onChangeName }\n              disabled={ !this.state.nameCheckbox }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n          </FlexibleGrid>\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Chance\"\n            tooltip=\"Put chance for item to being dropped.<br>chance='1' - 0.001%<br>chance='10' - 0.01%<br>chance='100' - 0.1%<br>chance='1000' - 1%<br>chance='10000' - 10%<br>chance='100000' - 100%<br>chance='5423' - 5.432%<br>chance='75826' - 75.826%\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.chance }\n            min=\"1\"\n            onChange={ this.onChangeChance }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.countMaxCheckbox }\n            onChange={ this.onChangeCountMaxCheckbox }\n            tooltip=\"Put maximum value of dropped items (only stackable items) it varies from 1 to whatever you want.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Count Max\"\n            tooltip=\"Put maximum value of dropped items (only stackable items) it varies from 1 to whatever you want.\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.countMax }\n            min=\"1\"\n            max=\"10000000\"\n            onChange={ this.onChangeCountMax }\n            disabled={ !this.state.countMaxCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.subtypeCheckbox }\n            onChange={ this.onChangeSubtypeCheckbox }\n            tooltip=\"It stands for fluid type in any fluid container.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Subtype\"\n            tooltip=\"It stands for fluid type in any fluid container.\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInputSelect\n            selectItems={ subtype }\n            value={ this.state.subtype }\n            onChange={ this.onChangeSubtype }\n            disabled={ !this.state.subtypeCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.actionIdCheckbox }\n            onChange={ this.onChangeActionIdCheckbox }\n            tooltip=\"Add actionId to a certain item when dropped.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Action Id\"\n            tooltip=\"Add actionId to a certain item when dropped.\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.actionId }\n            min=\"0\"\n            max=\"10000000\"\n            onChange={ this.onChangeActionId }\n            disabled={ !this.state.actionIdCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.uniqueIdCheckbox }\n            onChange={ this.onChangeUniqueIdCheckbox }\n            tooltip=\"Add uniqueId to a certain item when dropped.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Unique Id\"\n            tooltip=\"Add uniqueId to a certain item when dropped.\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.uniqueId }\n            min=\"0\"\n            max=\"10000000\"\n            onChange={ this.onChangeUniqueId }\n            disabled={ !this.state.uniqueIdCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.textCheckbox }\n            onChange={ this.onChangeTextCheckbox }\n            tooltip=\"Add text to all writeable items.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Text\"\n            tooltip=\"Add text to all writeable items.\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"text\"\n            value={ this.state.text }\n            onChange={ this.onChangeText }\n            disabled={ !this.state.textCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.commentCheckbox }\n            onChange={ this.onChangeCommentCheckbox }\n            tooltip=\"You may add comment for example to describe loot item name.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Comment\"\n            tooltip=\"You may add comment for example to describe loot item name.\"\n            width={ secondLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"text\"\n            value={ this.state.comment }\n            onChange={ this.onChangeComment }\n            disabled={ !this.state.commentCheckbox }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabLoot;\n","var ROWS = 7;\nvar COLUMNS = 19;\nvar MIN_COLOR = 0;\nvar MAX_COLOR = 132;\n\nvar COLORS = {\n    0:   '#ffffff',\n    1:   '#ffd4bf',\n    2:   '#ffe9bf',\n    3:   '#ffffbf',\n    4:   '#e9ffbf',\n    5:   '#d4ffbf',\n    6:   '#bfffbf',\n    7:   '#bfffd4',\n    8:   '#bfffe9',\n    9:   '#bfffff',\n    10:  '#bfe9ff',\n    11:  '#bfd4ff',\n    12:  '#bfbfff',\n    13:  '#d4bfff',\n    14:  '#e9bfff',\n    15:  '#ffbfff',\n    16:  '#ffbfe9',\n    17:  '#ffbfd4',\n    18:  '#ffbfbf',\n    19:  '#dadada',\n    20:  '#bf9f8f',\n    21:  '#bfaf8f',\n    22:  '#bfbf8f',\n    23:  '#afbf8f',\n    24:  '#9fbf8f',\n    25:  '#8fbf8f',\n    26:  '#8fbf9f',\n    27:  '#8fbfaf',\n    28:  '#8fbfbf',\n    29:  '#8fafbf',\n    30:  '#8f9fbf',\n    31:  '#8f8fbf',\n    32:  '#9f8fbf',\n    33:  '#af8fbf',\n    34:  '#bf8fbf',\n    35:  '#bf8faf',\n    36:  '#bf8f9f',\n    37:  '#bf8f8f',\n    38:  '#b6b6b6',\n    39:  '#bf7f5f',\n    40:  '#bf9f5f',\n    41:  '#bfbf5f',\n    42:  '#9fbf5f',\n    43:  '#7fbf5f',\n    44:  '#5fbf5f',\n    45:  '#5fbf7f',\n    46:  '#5fbf9f',\n    47:  '#5fbfbf',\n    48:  '#5f9fbf',\n    49:  '#5f7fbf',\n    50:  '#5f5fbf',\n    51:  '#7f5fbf',\n    52:  '#9f5fbf',\n    53:  '#bf5fbf',\n    54:  '#bf5f9f',\n    55:  '#bf5f7f',\n    56:  '#bf5f5f',\n    57:  '#919191',\n    58:  '#bf6a3f',\n    59:  '#bf943f',\n    60:  '#bfbf3f',\n    61:  '#94bf3f',\n    62:  '#6abf3f',\n    63:  '#3fbf3f',\n    64:  '#3fbf6a',\n    65:  '#3fbf94',\n    66:  '#3fbfbf',\n    67:  '#3f94bf',\n    68:  '#3f6abf',\n    69:  '#3f3fbf',\n    70:  '#6a3fbf',\n    71:  '#943fbf',\n    72:  '#bf3fbf',\n    73:  '#bf3f94',\n    74:  '#bf3f6a',\n    75:  '#bf3f3f',\n    76:  '#6d6d6d',\n    77:  '#ff5500',\n    78:  '#ffaa00',\n    79:  '#ffff00',\n    80:  '#aaff00',\n    81:  '#54ff00',\n    82:  '#00ff00',\n    83:  '#00ff55',\n    84:  '#00ffa9',\n    85:  '#00ffff',\n    86:  '#00a9ff',\n    87:  '#0054ff',\n    88:  '#0000ff',\n    89:  '#5400ff',\n    90:  '#aa00ff',\n    91:  '#ff00ff',\n    92:  '#ff00aa',\n    93:  '#ff0055',\n    94:  '#ff0000',\n    95:  '#484848',\n    96:  '#bf3f00',\n    97:  '#bf7f00',\n    98:  '#bfbf00',\n    99:  '#7fbf00',\n    100: '#3fbf00',\n    101: '#00bf00',\n    102: '#00bf3f',\n    103: '#00bf7f',\n    104: '#00bfbf',\n    105: '#007fbf',\n    106: '#003fbf',\n    107: '#0000bf',\n    108: '#3f00bf',\n    109: '#7f00bf',\n    110: '#bf00bf',\n    111: '#bf007f',\n    112: '#bf003f',\n    113: '#bf0000',\n    114: '#242424',\n    115: '#7f2a00',\n    116: '#7f5500',\n    117: '#7f7f00',\n    118: '#557f00',\n    119: '#2a7f00',\n    120: '#007f00',\n    121: '#007f2a',\n    122: '#007f54',\n    123: '#007f7f',\n    124: '#00547f',\n    125: '#002a7f',\n    126: '#00007f',\n    127: '#2a007f',\n    128: '#55007f',\n    129: '#7f007f',\n    130: '#7f0055',\n    131: '#7f002a',\n    132: '#7f0000'\n}\n\nexport { ROWS, COLUMNS, MIN_COLOR, MAX_COLOR, COLORS };\n","import React from 'react';\nimport { COLORS } from './const';\n\nconst outerDivStyle = {\n    width: '1.1em',\n    height: '1.1em',\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#ced4da',\n    backgroundColor: '#FFFFFF',\n    cursor: 'pointer',\n    display: 'grid'\n}\n\nconst innerDivStyle = {\n    width: 'calc(100% - 0.15em)',\n    height: 'calc(100% - 0.15em)',\n    borderRadius: 5,\n    margin: 'auto'\n}\n\nclass ColorButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    prepareOuterDivStyle = () => {\n        let style = outerDivStyle;\n\n        style = { ...style, ...this.props.outerDivStyle }\n\n        return style;\n    }\n\n    prepareInnerDivStyle = () => {\n        let style = innerDivStyle;\n\n        style = { ...style, ...this.props.innerDivStyle, ...{ backgroundColor: COLORS[this.props.colorId] } }\n\n        return style;\n    }\n\n    onClick = () => {\n        if (this.props.onClick) {\n            this.props.onClick(this.props.colorId, COLORS[this.props.colorId]);\n        }\n    }\n\n    render() {\n        return (\n            <div ref={ this.props.setRef } style={ this.prepareOuterDivStyle() } onClick={ this.onClick }>\n                <div style={ this.prepareInnerDivStyle() }></div>\n            </div>\n        );\n    }\n}\n\nexport default ColorButton;\n","import React from 'react';\nimport { ROWS, COLUMNS } from './const';\n\nimport ColorButton from './ColorButton';\n\nclass ColorPaletteRow extends React.Component {\n    render() {\n        return (\n            <div style={{ ...{ display: 'table-row' }, ...this.props.style }}>\n                { this.props.children }\n            </div>\n        );\n    }\n}\n\nclass ColorPaletteColumn extends React.Component {\n    render() {\n        return (\n            <div style={{ ...{ display: 'table-cell' }, ...this.props.style }}>\n                <ColorButton\n                    colorId={ this.props.colorId }\n                    onClick={ this.props.onChooseButton }\n                    outerDivStyle={{ ...this.props.size, ...this.props.buttonStyle['outer'] }}\n                    innerDivStyle={ this.props.buttonStyle['inner'] }\n                />\n            </div>\n        );\n    }\n}\n\nclass ColorPalette extends React.Component {\n    onChooseButton = (id, hexColor) => {\n        if (this.props.onChooseColor) {\n            this.props.onChooseColor(id, hexColor);\n        }\n    }\n\n    prepareStyle = () => {\n        let style = { ...{ display: 'table' }, ...this.props.style['container'] };\n\n        return style;\n    }\n\n    render() {\n        let rows = [];\n\n        if (this.props.screenRotation === 'horizontal') {\n            for (let i = 0; i < ROWS; i++) {\n                let columns = [];\n\n                for (let j = 0; j < COLUMNS; j++) {\n                    columns.push(\n                        <ColorPaletteColumn\n                            key={ i * COLUMNS + j }\n                            colorId={ i * COLUMNS + j }\n                            onChooseButton={ this.onChooseButton }\n                            size={ this.props.colorButtonsStyle }\n                            style={ this.props.style['column'] }\n                            buttonStyle={ this.props.style['button'] }\n                        />\n                    );\n                }\n\n                rows.push(\n                    <ColorPaletteRow\n                        key={ i }\n                        style={ this.props.style['row'] }\n                    >\n                        { columns }\n                    </ColorPaletteRow>\n                );\n            }\n        } else if (this.props.screenRotation === 'vertical') {\n            for (let i = 0; i < COLUMNS; i++) {\n                let columns = [];\n\n                for (let j = 0; j < ROWS; j++) {\n                    columns.push(\n                        <ColorPaletteColumn\n                            key={ i * ROWS + j }\n                            colorId={ i + j * COLUMNS }\n                            onChooseButton={ this.onChooseButton }\n                            size={ this.props.colorButtonsStyle }\n                            style={ this.props.style['column'] }\n                            buttonStyle={ this.props.style['button'] }\n                        />\n                    );\n                }\n\n                rows.push(\n                    <ColorPaletteRow\n                        key={ i }\n                        style={ this.props.style['row'] }\n                    >\n                        { columns }\n                    </ColorPaletteRow>\n                );\n            }\n        }\n\n        return (\n            <div style={ this.prepareStyle() }>\n                { rows }\n            </div>\n        );\n    }\n}\n\nexport default ColorPalette;\n","import React from 'react';\nimport { COLUMNS } from './const';\n\nimport ColorPalette from './ColorPalette';\n\nconst windowStyle = {\n    position: 'absolute'\n}\n\nclass ColorsWindow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.ref = React.createRef();\n\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n\n        this.state = {}\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n\n        this.calcPos();\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    prepareOuterDivStyle = () => {\n        let style = windowStyle;\n\n        style = { ...style, ...{ left: 'calc(20em - ' + (this.props.posX / 2 + (COLUMNS * 2) - this.props.parentWidth) + 'px)', top: '' }, ...this.props.style }\n\n        return style;\n    }\n\n    calcPos = () => {\n        //Width\n        let leftPos = this.props.posX - this.ref.current.clientWidth / 2 + this.props.parentWidth / 2;\n        if (leftPos < 0) {\n            leftPos = 0;\n        } else if (leftPos + this.ref.current.clientWidth > document.body.clientWidth) {\n            leftPos = document.body.clientWidth - this.ref.current.clientWidth;\n        }\n\n        //Height\n        let topPos = this.props.posY + this.props.parentHeight;\n        if (topPos < 0) {\n            topPos = 0;\n        } else if (topPos + this.ref.current.clientHeight > document.body.clientHeight) {\n            topPos = this.props.posY - this.ref.current.clientHeight;\n        }\n\n        this.ref.current.style.left = leftPos + 'px';\n        this.ref.current.style.top = topPos + 'px';\n    }\n\n    handleClickOutside(event) {\n        if (this.ref && !this.ref.current.contains(event.target) && this.props.buttonRef && !this.props.buttonRef.current.contains(event.target)) {\n            this.props.onClickOutside();\n        }\n    }\n\n    getColorButtonStyle = () => {\n        return {\n            width: 'calc(20em / ' + COLUMNS + ')',\n            height: 'calc(20em / ' + COLUMNS + ')',\n            maxWidth: 'calc(80vw / ' + COLUMNS + ' - ' + 2 + 'px)',\n            maxHeight: 'calc(80vw / ' + COLUMNS + ' - ' + 2 + 'px)'\n        }\n    }\n\n    render() {\n        return (\n            <div ref={ this.ref } style={ this.prepareOuterDivStyle() }>\n                <ColorPalette\n                    onChooseColor={ this.props.onChooseColor }\n                    screenRotation={ 'horizontal' }\n                    colorButtonsStyle={ this.getColorButtonStyle() }\n                    style={ this.props.stylePalette }\n                />\n            </div>\n        );\n    }\n}\n\nexport default ColorsWindow;\n","import React from 'react';\nimport { ROWS, COLUMNS } from './const';\n\nimport ColorPalette from './ColorPalette';\n\nconst windowStyle = {\n    position: 'absolute',\n    zIndex: 999\n}\n\nconst backgroundStyle = {\n    position: 'fixed',\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#00000040',\n    left: 0,\n    top: 0,\n    zIndex: 998\n}\n\nclass ColorsWindowMobile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.ref = React.createRef();\n\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n\n        this.state = {}\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n\n        this.calcPos();\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    prepareOuterDivStyle = () => {\n        let style = { ...windowStyle, ...this.props.style['inner'] };\n\n        return style;\n    }\n\n    calcPos = () => {\n        //Width\n        this.ref.current.style.left = 'calc(50% - ' + this.ref.current.clientWidth / 2 + 'px)';\n\n        //Height\n        this.ref.current.style.top = 'calc(50% - ' + this.ref.current.clientHeight / 2 + 'px)';\n    }\n\n    handleClickOutside(event) {\n        if (this.ref && !this.ref.current.contains(event.target)) {\n            this.props.onClickOutside();\n        }\n    }\n\n    getColorButtonStyle = () => {\n        if (this.props.screenRotation === 'horizontal') {\n            return {\n                width: 'calc(80vw / ' + COLUMNS + ')',\n                height: 'calc(80vh / ' + ROWS + ')'\n            }\n        } else if (this.props.screenRotation === 'vertical') {\n            return {\n                width: 'calc(80vw / ' + ROWS + ')',\n                height: 'calc(80vh / ' + COLUMNS + ')'\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ ...backgroundStyle, ...this.props.style['outer'] }}>\n                <div ref={ this.ref } style={ this.prepareOuterDivStyle() }>\n                    <ColorPalette\n                        onChooseColor={ this.props.onChooseColor }\n                        screenRotation={ this.props.screenRotation }\n                        colorButtonsStyle={ this.getColorButtonStyle() }\n                        style={ this.props.stylePalette }\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ColorsWindowMobile;\n","import React from 'react';\nimport { MIN_COLOR, MAX_COLOR } from './components/const';\n\nimport ColorButton from './components/ColorButton';\nimport ColorsWindow from './components/ColorsWindow';\nimport ColorsWindowMobile from './components/ColorsWindowMobile';\n\nconst styleTemplate = {\n    container: {},\n    button: {\n        outer: {},\n        inner: {}\n    },\n    window: {\n        container: {},\n        palette: {\n            container: {},\n            row: {},\n            column: {},\n            button: {\n                outer: {},\n                inner: {}\n            }\n        }\n    },\n    windowMobile: {\n        container: {\n            outer: {},\n            inner: {}\n        },\n        palette: {\n            container: {},\n            row: {},\n            column: {},\n            button: {\n                outer: {},\n                inner: {}\n            }\n        }\n    }\n}\n\nclass OTColorInput extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.style = Object.assign(styleTemplate, this.props.style);\n\n        this.ref = React.createRef();\n\n        this.deviceType = this.getDeviceType();\n        this.screenRotation = this.getScreenRotation();\n\n        this.state = {\n            id: this.checkColor(this.props.value) ? this.checkColor(this.props.value) : 0,\n            isWindowOpen: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.closeColorsWindow);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.closeColorsWindow);\n    }\n\n    checkColor = (color) => {\n        if (color === undefined) {\n            return undefined;\n        } else if (color >= MIN_COLOR && color <= MAX_COLOR) {\n            return color;\n        } else if (color > MAX_COLOR) {\n            return MAX_COLOR;\n        } else if (color < MIN_COLOR) {\n            return MIN_COLOR;\n        } else {\n            return undefined;\n        }\n    }\n\n    setColor = (color) => {\n        this.setState({ color: this.checkColor(color) });\n    }\n\n    toggleColorsWindow = () => {\n        if (this.state.isWindowOpen) {\n            this.closeColorsWindow();\n        } else {\n            this.openColorsWindow();\n        }\n    }\n\n    openColorsWindow = () => {\n        if (!this.state.isWindowOpen) {\n            this.deviceType = this.getDeviceType();\n            this.screenRotation = this.getScreenRotation();\n\n            this.setState({ isWindowOpen: true });\n        }\n    }\n\n    closeColorsWindow = () => {\n        if (this.state.isWindowOpen) {\n            this.setState({ isWindowOpen: false });\n        }\n    }\n\n    onChangeValue = (value, hexColor) => {\n        this.setState({ id: value });\n        this.closeColorsWindow();\n\n        if (this.props.onChange) {\n            this.props.onChange(value, hexColor);\n        }\n    }\n\n    getDeviceType = () => {\n        return /Android|webOS|iPhone|iPad|iPod/i.test(navigator.userAgent) ? 'mobile' : 'desktop';\n    }\n\n    getScreenRotation = () => {\n        return window.innerWidth > window.innerHeight ? 'horizontal' : 'vertical';\n    }\n\n    render() {\n        return (\n            <div style={ this.style['container'] }>\n                <ColorButton\n                    colorId={ this.state.id }\n                    onClick={ this.toggleColorsWindow }\n                    setRef={ this.ref }\n                    outerDivStyle={{ ...{ width: '1.9em' }, ...this.style['button']['outer']}}\n                    innerDivStyle={ this.style['button']['inner'] }\n                />\n                { this.state.isWindowOpen ?\n                    this.deviceType === 'desktop' ?\n                    <ColorsWindow\n                        onChooseColor={ this.onChangeValue }\n                        posX={ this.ref.current.offsetLeft }\n                        posY={ this.ref.current.offsetTop }\n                        parentWidth={ this.ref.current.offsetWidth }\n                        parentHeight={ this.ref.current.offsetHeight }\n                        onClickOutside={ this.closeColorsWindow }\n                        buttonRef={ this.ref }\n                        screenRotation={ this.screenRotation }\n                        style={ this.style['window']['container'] }\n                        stylePalette={ this.style['window']['palette'] }\n                    />\n                    : this.deviceType === 'mobile' ?\n                    <ColorsWindowMobile\n                        onChooseColor={ this.onChangeValue }\n                        onClickOutside={ this.closeColorsWindow }\n                        screenRotation={ this.screenRotation }\n                        style={ this.style['windowMobile']['container'] }\n                        stylePalette={ this.style['windowMobile']['palette'] }\n                    /> : null\n                    : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default OTColorInput;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { raceSelect, skullSelect } from '../consts'\nimport { MonsterMakerLabel, MonsterMakerInput, MonsterMakerInputSelect} from '../components';\nimport { FlexibleGridContainer, FlexibleGrid } from '../components/FlexibleGrid';\nimport OTColorInput from '../components/otcolorinput-react/OTColorInput';\n\nconst firstLabelWidth = { minWidth: 200 }\n\nclass MonsterMakerTabMonster extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      strategyValue: this.props.appData.getMonster().getAttack(),\n      radioLookType: \"0\",\n      strategyCheckbox: false\n    };\n  }\n\n  onChangeName = (event) => {\n    this.props.appData.getMonster().setName(event.target.value);\n  }\n  \n  onChangeNameDescription = (event) => {\n    this.props.appData.getMonster().setNameDescription(event.target.value);\n  }\n\n  onChangeRace = (event) => {\n    this.props.appData.getMonster().setRace(event.target.value);\n  }\n\n  onChangeExperience = (event) => {\n    this.props.appData.getMonster().setExperience(event.target.value);\n  }\n\n  onChangeSkull = (event) => {\n    this.props.appData.getMonster().setSkull(event.target.value);\n  }\n\n  onChangeSpeed = (event) => {\n    this.props.appData.getMonster().setSpeed(event.target.value);\n  }\n\n  onChangeManaCost = (event) => {\n    this.props.appData.getMonster().setManaCost(event.target.value);\n  }\n\n  onChangeHealthMin = (event) => {\n    this.props.appData.getMonster().setHealthMin(event.target.value);\n  }\n\n  onChangeHealthMax = (event) => {\n    this.props.appData.getMonster().setHealthMax(event.target.value);\n  }\n\n  onChangeLookTypeValue = (event) => {\n    this.props.appData.getMonster().setLookTypeValue(event.target.value);\n  }\n\n  onChangeHead = (colorId) => {\n    this.props.appData.getMonster().setHead(colorId);\n  }\n\n  onChangeBody = (colorId) => {\n    this.props.appData.getMonster().setBody(colorId);\n  }\n\n  onChangeLegs = (colorId) => {\n    this.props.appData.getMonster().setLegs(colorId);\n  }\n\n  onChangeFeet = (colorId) => {\n    this.props.appData.getMonster().setFeet(colorId);\n  }\n\n  onChangeAddons = (event) => {\n    this.props.appData.getMonster().setAddons(event.target.value);\n  }\n\n  onChangeMount = (event) => {\n    this.props.appData.getMonster().setMount(event.target.value);\n  }\n\n  onChangeCorpse = (event) => {\n    this.props.appData.getMonster().setCorpse(event.target.value);\n  }\n\n  onChangeTargetchangeInterval = (event) => {\n    this.props.appData.getMonster().setTargetchangeInterval(event.target.value);\n  }\n\n  onChangeTargetchangeChance = (event) => {\n    this.props.appData.getMonster().setTargetchangeChance(event.target.value);\n  }\n\n  onChangeStrategy = (event) => {\n    this.props.appData.getMonster().setStrategy(!this.props.appData.getMonster().getStrategy());\n    this.setState({ strategyCheckbox: this.props.appData.getMonster().getStrategy() });\n  }\n\n  onChangeStrategyValue = (event) => {\n    this.setState({ strategyValue: event.target.value });\n    this.props.appData.getMonster().setAttack(event.target.value);\n    this.props.appData.getMonster().setDefense(100 - event.target.value);\n  }\n\n  onChangeLookType = (event) => {\n    this.setState({ radioLookType: event.currentTarget.value });\n    this.props.appData.getMonster().setLookType(event.currentTarget.value);\n  }\n\n  render() {\n    return (\n      <div className=\"tabMenu\">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" html={ true } />\n\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Monster name:\"\n            tooltip=\"Put your monster name.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"text\"\n            defaultValue={ this.props.appData.getMonster().getName() }\n            onChange={ this.onChangeName }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Name description:\"\n            tooltip=\"Put description of your monster.<br>Example:<br>'A demon loses 5 hitpoints due to an attack by a test.'<br>'a test' is name description.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"text\"\n            defaultValue={ this.props.appData.getMonster().getNameDescription() }\n            onChange={ this.onChangeNameDescription }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Race:\"\n            tooltip=\"Choose race for monster.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInputSelect\n            selectItems={ raceSelect }\n            defaultValue={ this.props.appData.getMonster().getRace() }\n            onChange={ this.onChangeRace }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Experience:\"\n            tooltip=\"Choose how many experience points gain player for kill monster.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            min=\"0\"\n            defaultValue={ this.props.appData.getMonster().getExperience() }\n            onChange={ this.onChangeExperience }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Skull:\"\n            tooltip=\"Choose skulls type for your monster to have.<br>Set 'none' to don't set skull.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInputSelect\n            selectItems={ skullSelect }\n            defaultValue={ this.props.appData.getMonster().getSkull() }\n            onChange={ this.onChangeSkull }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Speed:\"\n            tooltip=\"Choose speed for your monster.<br>Set it to '0' means your monster won't move at all.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            min=\"0\"\n            defaultValue={ this.props.appData.getMonster().getSpeed() }\n            onChange={ this.onChangeSpeed }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Mana cost:\"\n            tooltip=\"You can configure mana cost needed for the summon of this monster.<br>You need to turn on flag 'summonable' or 'convinceable'.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            min=\"0\"\n            defaultValue={ this.props.appData.getMonster().getManaCost() }\n            onChange={ this.onChangeManaCost }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Health:\"\n            tooltip=\"Set health points for your monster.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <FlexibleGrid>\n            <FlexibleGrid>\n              <MonsterMakerLabel\n                text=\"Now:\"\n                tooltip=\"How much health points will have monster when he spawned.\"\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n              <MonsterMakerInput\n                type=\"number\"\n                min=\"0\"\n                defaultValue={ this.props.appData.getMonster().getHealthNow() }\n                onChange={ this.onChangeHealthNow }\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n            </FlexibleGrid>\n            <FlexibleGrid>\n              <MonsterMakerLabel\n                text=\"Max:\"\n                tooltip=\"Maximum health points of monster.<br>This value needs to be equal or greater than in 'Now'.\"\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n              <MonsterMakerInput\n                type=\"number\"\n                min=\"0\"\n                defaultValue={ this.props.appData.getMonster().getHealthMax() }\n                onChange={ this.onChangeHealthMax }\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n            </FlexibleGrid>\n          </FlexibleGrid>\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <FlexibleGrid>\n            <FlexibleGrid>\n              <MonsterMakerInput\n                type=\"radio\"\n                onChange={ this.onChangeLookType }\n                value=\"0\"\n                checked={ this.props.appData.getMonster().getLookType() === \"0\" }\n                tooltip=\"This is where you set up outfit of your monster.\"\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n              <MonsterMakerLabel\n                text=\"Look Type\"\n                tooltip=\"This is where you set up outfit of your monster.\"\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n            </FlexibleGrid>\n            <FlexibleGrid>\n              <MonsterMakerInput\n                type=\"radio\"\n                onChange={ this.onChangeLookType }\n                value=\"1\"\n                checked={ this.props.appData.getMonster().getLookType() === \"1\" }\n                tooltip=\"This is where you set up outfit from item id for your monster.<br>For example for id '3031', your monster look like 'Gold Coin'.\"\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n              <MonsterMakerLabel\n                text=\"Look TypeEx\"\n                tooltip=\"This is where you set up outfit from item id for your monster.<br>For example for id '3031', your monster look like 'Gold Coin'.\"\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n            </FlexibleGrid>\n          </FlexibleGrid>\n          <MonsterMakerInput\n            type=\"number\"\n            min=\"1\"\n            defaultValue={ this.props.appData.getMonster().getLookTypeValue() }\n            onChange={ this.onChangeLookTypeValue }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Head:\"\n              tooltip=\"Choose color id for head.<br>Works only if monster has outfit which can be edited with colors like player outfits.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <OTColorInput\n              value={ this.props.appData.getMonster().getHead() }\n              onChange={ this.onChangeHead }\n              style={{ container: { marginLeft: 3, marginRight: 3 } }}\n            />\n          </FlexibleGrid>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Body:\"\n              tooltip=\"Choose color id for body.<br>Works only if monster has outfit which can be edited with colors like player outfits.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <OTColorInput\n              value={ this.props.appData.getMonster().getBody() }\n              onChange={ this.onChangeBody }\n              style={{ container: { marginLeft: 3, marginRight: 3 } }}\n            />\n          </FlexibleGrid>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Legs:\"\n              tooltip=\"Choose color id for legs.<br>Works only if monster has outfit which can be edited with colors like player outfits.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <OTColorInput\n              value={ this.props.appData.getMonster().getLegs() }\n              onChange={ this.onChangeLegs }\n              style={{ container: { marginLeft: 3, marginRight: 3 } }}\n            />\n          </FlexibleGrid>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Feet:\"\n              tooltip=\"Choose color id for feet.<br>Works only if monster has outfit which can be edited with colors like player outfits.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <OTColorInput\n              value={ this.props.appData.getMonster().getFeet() }\n              onChange={ this.onChangeFeet }\n              style={{ container: { marginLeft: 3, marginRight: 3 } }}\n            />\n          </FlexibleGrid>\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Addons:\"\n              tooltip=\"You can type addons for your monster.<br>'0' means no addons, '1' means first addon, '2' means second addon, '3' means both addons.<br>Works only if monster has outfit which can be edited with addons.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"number\"\n              min=\"0\"\n              max=\"3\"\n              defaultValue={ this.props.appData.getMonster().getAddons() }\n              onChange={ this.onChangeAddons }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n          </FlexibleGrid>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Mount:\"\n              tooltip=\"You can type mount for your creature.<br>Type mount='0' if you don't want your monster to have any mounts.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"number\"\n              min=\"0\"\n              defaultValue={ this.props.appData.getMonster().getMount() }\n              onChange={ this.onChangeMount }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n          </FlexibleGrid>\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Corpse:\"\n            tooltip=\"Set monster corpse<br>If you want your monster to have any loot, set only containers.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            min=\"0\"\n            defaultValue={ this.props.appData.getMonster().getCorpse() }\n            onChange={ this.onChangeCorpse }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Targetchange:\"\n            tooltip=\"You can set up monster retarget.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <FlexibleGrid>\n            <FlexibleGrid>\n              <MonsterMakerLabel\n                text=\"Interval:\"\n                tooltip=\"How often it will try to change it\\'s target (in milliseconds).\"\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n              <MonsterMakerInput\n                type=\"number\"\n                min=\"0\"\n                defaultValue={ this.props.appData.getMonster().getTargetchangeInterval() }\n                onChange={ this.onChangeTargetchangeInterval }\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n            </FlexibleGrid>\n            <FlexibleGrid>\n              <MonsterMakerLabel\n                text=\"Chance:\"\n                tooltip=\"It's the chance to retarget successfully.<br>Put '0' if you don't want your monster to retarget at all.\"\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n              <MonsterMakerInput\n                type=\"number\"\n                min=\"0\"\n                defaultValue={ this.props.appData.getMonster().getTargetchangeChance() }\n                onChange={ this.onChangeTargetchangeChance }\n                style={{ marginLeft: 3, marginRight: 3 }}\n              />\n            </FlexibleGrid>\n          </FlexibleGrid>\n        </FlexibleGridContainer>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"checkbox\"\n                  onChange={this.onChangeStrategy}\n                  defaultChecked={this.props.appData.getMonster().getStrategy()}\n                  tooltip=\"This is responsible for monster behavior.\"\n                />\n              </td>\n              <td>\n                <MonsterMakerLabel\n                  text=\"Strategy\"\n                  tooltip=\"This is responsible for monster behavior.\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table style={{width: \"100%\", padding: 10}}>\n          <tbody>\n            <tr>\n              <td style={{display: \"initial\"}}>\n                <MonsterMakerLabel\n                  text={\"Attack: \" + this.state.strategyValue}\n                  style={{float: \"left\"}}\n                  disabled={!this.props.appData.getMonster().getStrategy()}\n                  tooltip=\"If more, there is more focused on attack.\"\n                />\n                <MonsterMakerLabel\n                  text={\"Defense: \" + (100 - this.state.strategyValue)}\n                  style={{float: \"right\"}}\n                  disabled={!this.props.appData.getMonster().getStrategy()}\n                  tooltip=\"If more, there is more focused on defence.\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <MonsterMakerInput\n                  type=\"range\"\n                  style={{width: \"100%\"}}\n                  defaultValue={this.props.appData.getMonster().getAttack()}\n                  onChange={this.onChangeStrategyValue}\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"1\"\n                  disabled={!this.state.strategyCheckbox}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabMonster;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { MonsterMakerLabel, MonsterMakerInput} from '../components';\nimport { FlexibleGridContainer } from '../components/FlexibleGrid';\n\nclass MonsterMakerTabScript extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      check: this.props.appData.getScript().getChecked(),\n    };\n  }\n\n  onChangeChecked = (event) => {\n    this.props.appData.getScript().setChecked(!this.props.appData.getScript().getChecked());\n    this.setState({ check: this.props.appData.getScript().getChecked() });\n  }\n\n  onChangeScript = (event) => {\n    this.props.appData.getScript().setScript(event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"tabMenu\">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" html={ true } />\n\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            defaultChecked={ this.props.appData.getScript().getChecked() }\n            onChange={ this.onChangeChecked }\n            tooltip=\"Check on to add script.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Script\"\n            tooltip=\"Check on to add script.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Script\"\n            disabled={ !this.props.appData.getScript().getChecked() }\n            tooltip=\"There you can use creaturescripts made for certain monsters.<br>You put this tag between flags and attacks.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"text\"\n            defaultValue={ this.props.appData.getScript().getScript() }\n            onChange={ this.onChangeScript }\n            disabled={ !this.props.appData.getScript().getChecked() }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabScript;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { MonsterMakerLabel, MonsterMakerInput, MonsterMakerItemsTable, MonsterMakerButton } from '../components';\nimport { FlexibleGridContainer } from '../components/FlexibleGrid';\n\nconst firstLabelWidth = { minWidth: 150 }\n\nclass MonsterMakerTabSummons extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      maxSummons: this.props.appData.getSummons().getMaxSummons(),\n\n      summonName: this.props.appData.getSummons().getSummonName(),\n      interval: this.props.appData.getSummons().getInterval(),\n      chance: this.props.appData.getSummons().getChance(),\n      max: this.props.appData.getSummons().getMax(),\n\n      activeItem: this.props.activeItem\n    }\n  }\n\n  onChangeMaxSummons = (event) => {\n    this.props.appData.getSummons().setMaxSummons(event.target.value);\n    this.setState({ maxSummons: event.target.value });\n  }\n\n  onChangeSummonName = (event) => {\n    this.props.appData.getSummons().setSummonName(event.target.value);\n    this.setState({ summonName: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getSummons().setIndexSummonName(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeInterval = (event) => {\n    this.props.appData.getSummons().setInterval(event.target.value);\n    this.setState({ interval: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getSummons().setIndexInterval(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeChance = (event) => {\n    this.props.appData.getSummons().setChance(event.target.value);\n    this.setState({ chance: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getSummons().setIndexChance(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeMax = (event) => {\n    this.props.appData.getSummons().setMax(event.target.value);\n    this.setState({ max: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getSummons().setIndexMax(this.state.activeItem, event.target.value);\n    }\n  }\n\n  //Buttons action\n\n  clickAddButton = () => {\n    this.props.appData.getSummons().addToSummons();\n    this.forceUpdate();\n  }\n\n  clickDeleteButton = () => {\n    if (this.state.activeItem !== null) {\n      this.props.appData.getSummons().deleteFromSummons(this.state.activeItem);\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  //Refresh items\n  refreshItems = () => {\n    this.setState({\n      summonName: this.props.appData.getSummons().getSummonName(),\n      interval: this.props.appData.getSummons().getInterval(),\n      chance: this.props.appData.getSummons().getChance(),\n      max: this.props.appData.getSummons().getMax()\n    });\n  }\n\n  //Active item\n  setActiveItem = (event) => {\n    if (this.state.activeItem !== event.target.id) {\n      this.setState({ activeItem: event.target.id });\n      this.props.appData.getSummons().showSummons(event.target.id);\n      this.refreshItems();\n      this.props.changeActiveItem(event.target.id);\n    } else {\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"tabMenu\">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" html={ true } />\n\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Max summons\"\n            tooltip=\"How many summons can your monster have in total.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.maxSummons }\n            min=\"0\"\n            max=\"100\"\n            onChange={ this.onChangeMaxSummons }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n\n        <MonsterMakerItemsTable\n          data = { this.props.appData.getSummons().getAllXMLSummons() }\n          changeActiveItem = { this.setActiveItem }\n          activeItem = { this.state.activeItem }\n        />\n        <div style = {{ display: 'initial' }}>\n          <MonsterMakerButton\n            icon = \"ra-health\"\n            onClick = { this.clickAddButton }\n            tooltip = \"Add to table\"\n          />\n          <MonsterMakerButton\n            icon = \"ra-burning-embers\"\n            onClick = { this.clickDeleteButton }\n            tooltip = \"Delete from table\"\n          />\n        </div>\n\n        <FlexibleGridContainer>\n            <MonsterMakerLabel\n              text=\"Summon name\"\n              tooltip=\"Put name of the monster you want to be summoned by your creature.\"\n              width={ firstLabelWidth }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"text\"\n              value={ this.state.summonName }\n              onChange={ this.onChangeSummonName }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Interval\"\n            tooltip=\"How often monster will be summon.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.interval }\n            min=\"1000\"\n            onChange={ this.onChangeInterval }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Chance\"\n            tooltip=\"Chance to summon successfully (in %).\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.chance }\n            min=\"1\"\n            max=\"100\"\n            onChange={ this.onChangeChance }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n        <FlexibleGridContainer>\n          <MonsterMakerLabel\n            text=\"Max\"\n            tooltip=\"How much of each kind of summons it can have at max.\"\n            width={ firstLabelWidth }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerInput\n            type=\"number\"\n            value={ this.state.max }\n            min=\"1\"\n            max=\"100\"\n            onChange={ this.onChangeMax }\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabSummons;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { MonsterMakerLabel, MonsterMakerInput, MonsterMakerItemsTable, MonsterMakerButton } from '../components';\nimport { FlexibleGridContainer, FlexibleGrid } from '../components/FlexibleGrid';\n\nclass MonsterMakerTabVoices extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      interval: this.props.appData.getVoices().getInterval(),\n      chance: this.props.appData.getVoices().getChance(),\n\n      sentence: this.props.appData.getVoices().getSentence(),\n      yell: this.props.appData.getVoices().getYell(),\n\n      activeItem: this.props.activeItem\n    }\n  }\n\n  onChangeInterval = (event) => {\n    this.props.appData.getVoices().setInterval(event.target.value);\n    this.setState({ interval: event.target.value });\n  }\n\n  onChangeChance = (event) => {\n    this.props.appData.getVoices().setChance(event.target.value);\n    this.setState({ chance: event.target.value });\n  }\n\n  onChangeSentence = (event) => {\n    this.props.appData.getVoices().setSentence(event.target.value);\n    this.setState({ sentence: event.target.value });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getVoices().setIndexSentence(this.state.activeItem, event.target.value);\n    }\n  }\n\n  onChangeYell = (event) => {\n    this.props.appData.getVoices().setYell(!this.props.appData.getVoices().getYell());\n    this.setState({ yell: this.props.appData.getVoices().getYell() });\n    if (this.state.activeItem !== null) {\n      this.props.appData.getVoices().setIndexYell(this.state.activeItem, this.props.appData.getVoices().getYell());\n    }\n  }\n\n  //Buttons action\n\n  clickAddButton = () => {\n    this.props.appData.getVoices().addToVoices();\n    this.forceUpdate();\n  }\n\n  clickDeleteButton = () => {\n    if (this.state.activeItem !== null) {\n      this.props.appData.getVoices().deleteFromVoices(this.state.activeItem);\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  //Refresh items\n  refreshItems = () => {\n    this.setState({\n      sentence: this.props.appData.getVoices().getSentence(),\n      yell: this.props.appData.getVoices().getYell()\n    });\n  }\n\n  //Active item\n  setActiveItem = (event) => {\n    if (this.state.activeItem !== event.target.id) {\n      this.setState({ activeItem: event.target.id });\n      this.props.appData.getVoices().showVoices(event.target.id);\n      this.refreshItems();\n      this.props.changeActiveItem(event.target.id);\n    } else {\n      this.setState({ activeItem: null });\n      this.props.changeActiveItem(null);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"tabMenu\">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" html={ true } />\n\n        <FlexibleGridContainer>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Interval\"\n              tooltip=\"How often monster will be speak.\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"number\"\n              value={ this.state.interval }\n              min=\"1000\"\n              onChange={ this.onChangeInterval }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n          </FlexibleGrid>\n          <FlexibleGrid>\n            <MonsterMakerLabel\n              text=\"Chance\"\n              tooltip=\"Chance to speak successfully (in %).\"\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n            <MonsterMakerInput\n              type=\"number\"\n              value={ this.state.chance }\n              min=\"1\"\n              max=\"100\"\n              onChange={ this.onChangeChance }\n              style={{ marginLeft: 3, marginRight: 3 }}\n            />\n          </FlexibleGrid>\n        </FlexibleGridContainer>\n\n        <MonsterMakerItemsTable\n          data = { this.props.appData.getVoices().getAllXMLVoices() }\n          changeActiveItem = { this.setActiveItem }\n          activeItem = { this.state.activeItem }\n        />\n        <div style = {{ display: 'initial' }}>\n          <MonsterMakerButton\n            icon = \"ra-health\"\n            onClick = { this.clickAddButton }\n            tooltip = \"Add to table\"\n          />\n          <MonsterMakerButton\n            icon = \"ra-burning-embers\"\n            onClick = { this.clickDeleteButton }\n            tooltip = \"Delete from table\"\n          />\n        </div>\n\n        <MonsterMakerLabel\n          text=\"Sentence\"\n          tooltip=\"Put any message you want to be spoke by your monster.\"\n          style={{ marginLeft: 3, marginRight: 3 }}\n        />\n        <MonsterMakerInput\n          type=\"text\"\n          value={ this.state.sentence }\n          onChange={ this.onChangeSentence }\n          style={{ marginLeft: 3, marginRight: 3 }}\n        />\n        <FlexibleGridContainer>\n          <MonsterMakerInput\n            type=\"checkbox\"\n            checked={ this.state.yell }\n            onChange={ this.onChangeYell }\n            tooltip=\"It can be heard in greater distance (including different floors) than normal message.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n          <MonsterMakerLabel\n            text=\"Yell\"\n            tooltip=\"It can be heard in greater distance (including different floors) than normal message.\"\n            style={{ marginLeft: 3, marginRight: 3 }}\n          />\n        </FlexibleGridContainer>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerTabVoices;\n","import React from 'react';\n\nimport MonsterMakerMenuItem from './MonsterMakerMenuItem';\n\nimport * as tabs from '../screens';\n\nconst monsterMakerMenuStyle = {\n  backgroundColor: '#333',\n  listStyleType: 'none',\n  margin: 0,\n  padding: 0,\n  overflow: 'auto'\n};\n\nconst mainWindowStyle = {\n  height: 'auto',\n  minHeight: '100%',\n  backgroundImage: 'linear-gradient( 107deg,  rgba(2,108,223,1) 27.4%, rgba(0,255,255,1) 92.7% )'\n}\n\nclass MonsterMakerMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      activeItem: '',\n      attacksActiveItem: null,\n      defensesActiveItem: null,\n      summonsActiveItem: null,\n      voicesActiveItem: null,\n      lootActiveItem: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.appData.loadValuesFromLocalStorage();\n  }\n\n  handleItemClick = (state) => {\n    this.setState({ activeItem: state });\n  }\n\n  changeState = (item) => {\n    if (item !== this.state.activeItem) {\n      this.setState({ activeItem: item });\n    }\n  }\n\n  changeAttacksActiveItem = (state) => {\n    this.setState({ attacksActiveItem: state });\n  }\n\n  changeDefensesActiveItem = (state) => {\n    this.setState({ defensesActiveItem: state });\n  }\n\n  changeSummonsActiveItem = (state) => {\n    this.setState({ summonsActiveItem: state });\n  }\n\n  changeVoicesActiveItem = (state) => {\n    this.setState({ voicesActiveItem: state });\n  }\n\n  changeLootActiveItem = (state) => {\n    this.setState({ lootActiveItem: state });\n  }\n\n  render() {\n    const activeItem = this.state.activeItem\n\n    return (\n      <div style={ mainWindowStyle }>\n        <ul style={ monsterMakerMenuStyle }>\n          <MonsterMakerMenuItem\n            name=\"Monster\"\n            active={activeItem === \"Monster\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-dragon\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Flags\"\n            active={activeItem === \"Flags\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-castle-flag\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Script\"\n            active={activeItem === \"Script\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-book\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Attacks\"\n            active={activeItem === \"Attacks\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-lightning-sword\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Defenses\"\n            active={activeItem === \"Defenses\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-broken-shield\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Elements\"\n            active={activeItem === \"Elements\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-doubled\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Immunities\"\n            active={activeItem === \"Immunities\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-player-thunder-struck\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Summons\"\n            active={activeItem === \"Summons\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-pawprint\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Voices\"\n            active={activeItem === \"Voices\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-aware\"\n          />\n          <MonsterMakerMenuItem\n            name=\"Loot\"\n            active={activeItem === \"Loot\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-vase\"\n          />\n          <MonsterMakerMenuItem\n            name=\"I/O\"\n            active={activeItem === \"I/O\"}\n            onClick={this.handleItemClick}\n            icon=\"ra-cycle\"\n          />\n        </ul>\n        <div>\n          { this.state.activeItem === \"Monster\" ? <tabs.MonsterMakerTabMonster appData={this.props.appData} /> : null }\n          { this.state.activeItem === \"Flags\" ? <tabs.MonsterMakerTabFlags appData={this.props.appData} /> : null }\n          { this.state.activeItem === \"Script\" ? <tabs.MonsterMakerTabScript appData={this.props.appData} /> : null }\n          { this.state.activeItem === \"Attacks\" ? <tabs.MonsterMakerTabAttacks appData={this.props.appData} activeItem={this.state.attacksActiveItem} changeActiveItem={this.changeAttacksActiveItem} /> : null }\n          { this.state.activeItem === \"Defenses\" ? <tabs.MonsterMakerTabDefenses appData={this.props.appData} activeItem={this.state.defensesActiveItem} changeActiveItem={this.changeDefensesActiveItem} /> : null }\n          { this.state.activeItem === \"Elements\" ? <tabs.MonsterMakerTabElements appData={this.props.appData} /> : null }\n          { this.state.activeItem === \"Immunities\" ? <tabs.MonsterMakerTabImmunities appData={this.props.appData} /> : null }\n          { this.state.activeItem === \"Summons\" ? <tabs.MonsterMakerTabSummons appData={this.props.appData} activeItem={this.state.summonsActiveItem} changeActiveItem={this.changeSummonsActiveItem} /> : null }\n          { this.state.activeItem === \"Voices\" ? <tabs.MonsterMakerTabVoices appData={this.props.appData} activeItem={this.state.voicesActiveItem} changeActiveItem={this.changeVoicesActiveItem} /> : null }\n          { this.state.activeItem === \"Loot\" ? <tabs.MonsterMakerTabLoot appData={this.props.appData} activeItem={this.state.lootActiveItem} changeActiveItem={this.changeLootActiveItem} /> : null }\n          { this.state.activeItem === \"I/O\" ? <tabs.MonsterMakerTabIO appData={this.props.appData} /> : null }\n          { this.state.activeItem === \"\" ? <tabs.MonsterMakerTabDefault /> : null }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MonsterMakerMenu;\n","import React from 'react';\n\nimport AppData from './js/AppData.js';\n\nimport './App.css';\n\nimport MonsterMakerMenu from './components/MonsterMakerMenu.js';\n\nfunction App() {\n  var appData = new AppData();\n\n  return (\n    <MonsterMakerMenu appData={appData} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","const areaEffect = [\"redspark\", \"bluebubble\", \"poff\", \"yellowspark\", \"explosionarea\", \"explosion\", \"firearea\", \"yellowbubble\", \"greenbubble\",\n\"blackspark\", \"teleport\", \"energy\", \"blueshimmer\", \"redshimmer\", \"greenshimmer\", \"fire\", \"greenspark\", \"mortarea\", \"greennote\", \"rednote\",\n\"poison\", \"yellownote\", \"purplenote\", \"bluenote\", \"whitenote\", \"bubbles\", \"dice\", \"giftwraps\", \"yellowfirework\", \"redfirework\", \"bluefirework\",\n\"stun\", \"sleep\", \"watercreature\", \"groundshaker\", \"hearts\", \"fireattack\", \"energyarea\", \"smallclouds\", \"holydamage\", \"bigclouds\", \"icearea\",\n\"icetornado\", \"iceattack\", \"stones\", \"smallplants\", \"carniphila\", \"purpleenergy\", \"yellowenergy\", \"holyarea\", \"bigplants\", \"cake\", \"giantice\",\n\"watersplash\", \"plantattack\", \"tutorialarrow\", \"tutorialsquare\", \"mirrorhorizontal\", \"mirrorvertical\", \"skullhorizontal\", \"skullvertical\",\n\"assassin\", \"stepshorizontal\", \"bloodysteps\", \"stepsvertical\", \"yalaharighost\", \"bats\", \"smoke\", \"insects\", \"dragonhead\", \"orcshaman\",\n\"orcshamanfire\", \"thunder\", \"ferumbras\", \"confettihorizontal\", \"confettivertical\", \"blacksmoke\", \"redsmoke\", \"yellowsmoke\", \"greensmoke\",\n\"purplesmoke\"];\n\nconst shotEffect = [\"spear\", \"bolt\", \"arrow\", \"fire\", \"energy\", \"poisonarrow\", \"burstarrow\", \"throwingstar\", \"throwingknife\", \"smallstone\",\n\"death\", \"largerock\", \"snowball\", \"powerbolt\", \"poison\", \"infernalbolt\", \"huntingspear\", \"enchantedspear\", \"redstar\", \"greenstar\", \"royalspear\",\n\"sniperarrow\", \"onyxarrow\", \"piercingbolt\", \"whirlwindsword\", \"whirlwindaxe\", \"whirlwindclub\", \"etherealspear\", \"ice\", \"earth\", \"holy\",\n\"suddendeath\", \"flasharrow\", \"flammingarrow\", \"shiverarrow\", \"energyball\", \"smallice\", \"smallholy\", \"smallearth\", \"eartharrow\", \"explosion\",\n\"cake\", \"tarsalarrow\", \"vortexbolt\", \"prismaticbolt\", \"crystallinearrow\", \"drillbolt\", \"envenomedarrow\", \"gloothspear\", \"simplearrow\"];\n\nconst defenseName = [\"healing\", \"speed\", \"invisible\"];\n\nconst subtype = ['water', 'blood', 'beer', 'slime', 'lemonade', 'milk', 'manafluid', 'lifefluid', 'oil',\n'urine', 'coconut milk', 'wine', 'mud', 'fruit juice', 'lava', 'rum', 'swamp', 'tea', 'mead'];\n\nconst raceSelect = [\"blood\", \"venom\", \"undead\", \"fire\", \"energy\"];\n\nconst skullSelect = [\"none\", \"yellow\", \"black\", \"red\", \"white\", \"orange\", \"green\"];\n\nmodule.exports = { areaEffect, shotEffect, defenseName, subtype, raceSelect, skullSelect}"],"sourceRoot":""}